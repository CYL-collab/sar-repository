key,item type,year,author,title,booktitle,isbn,issn,doi,url,abstract note,date,date added,date modified,access date,pages,num pages,issue,volume,number of volumes,journal abbreviation,short title,series,series number,series text,series title,publisher,place,language,rights,type,archive,archive location,library catalog,call number,extra,notes,file attachments,link attachments,manual tags,automatic tags,editor,series editor,translator,contributor,attorney agent,book author,cast member,commenter,composer,cosponsor,counsel,interviewer,producer,recipient,reviewed author,scriptwriter,words by,guest,number,edition,running time,scale,medium,artwork size,filing date,application number,assignee,issuing authority,country,meeting name,conference name,court,references,reporter,legal status,priority numbers,programming language,version,system,code,code number,section,session,committee,history,legislative body
6LSTKP9F,conferencePaper,2024,"Costa, Paulo; Ordonez, Edward; Teixeira De Araujo, Jean","A Systematic Mapping on Software Aging and Rejuvenation Prediction Models in Edge, Fog and Cloud Architectures:",Proceedings of the 26th International Conference on Enterprise Information Systems,978-989-758-692-7,,10.5220/0012633900003690,https://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0012633900003690,,2024,2024-07-23 08:02:20,2024-10-03 13:30:14,2024-07-23 08:02:20,933-942,,,,,,"A Systematic Mapping on Software Aging and Rejuvenation Prediction Models in Edge, Fog and Cloud Architectures",,,,,SCITEPRESS - Science and Technology Publications,"Angers, France",en,,,,,DOI.org (Crossref),,"TLDR: A survey of the last fifteen years of models with a measurement-based prediction strategy for software aging and rejuvenation prediction models is presented, highlighting the importance of these models, due to the high cost of software or service downtime in IT datacenter environments.",,"C:\Users\tristone\Zotero\storage\6NTE4K7T\Costa 等 - 2024 - A Systematic Mapping on Software Aging and Rejuvenation Prediction Models in Edge, Fog and Cloud Arc.pdf",,分析方式：综述（Measurement-Based）; 会议：ICEIS; 年份：2009-2023; 系统类型：云、雾、边缘计算环境,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26th International Conference on Enterprise Information Systems,,,,,,,,,,,,,,,
7WHVJGXV,journalArticle,2024,"Nie, Yuge; Chen, Yulei; Jiang, Yujia; Wu, Huayao; Yin, Beibei; Cai, Kai-Yuan",A method of multidimensional software aging prediction based on ensemble learning: A case of Android OS,Information and Software Technology,,09505849,10.1016/j.infsof.2024.107422,https://linkinghub.elsevier.com/retrieve/pii/S0950584924000272,"Software aging refers to the phenomenon of performance degradation, increasing failure rate, or system crash due to resource consumption and error acc…",2024-06,2024-07-23 07:59:55,2024-08-14 08:07:02,2024-07-23 07:59:55,107422,,,170.0,,Inform. Software Tech.,A method of multidimensional software aging prediction based on ensemble learning,,,,,,,en-US,,,,,www.sciencedirect.com,,Publisher: Elsevier JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.8 5年影响因子: 4.0 EI: 是 CCF: B,,C:\Users\tristone\Zotero\storage\PDFJ53V6\Nie 等 - 2024 - A method of multidimensional software aging prediction based on ensemble learning A case of Android.pdf,,验证方法：实验实证&比较分析; 分析方式：Measurement-based（ML）; 老化影响：崩溃/挂起故障&性能降级; 系统类型：Android; 模型：集成学习; 评判指标：RMSE，Accuracy; 期刊：IST; 指标：LT，内存，存储，GC，Task-level,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WHJ99M7G,conferencePaper,2023,"Watanabe, Kengo; Machida, Fumio; Andrade, Ermeson; Pietrantuono, Roberto; Cotroneo, Domenico",Software Aging in a Real-Time Object Detection System on an Edge Server,Proceedings of the 38th ACM/SIGAPP Symposium on Applied Computing,978-1-4503-9517-5,,10.1145/3555776.3577717,https://doi.org/10.1145/3555776.3577717,"Real-time object detection systems are rapidly adopted in many edge computing systems for IoT applications. Since the computational resources on edge devices are often limited, continuous real-time object detection may suffer from the degradation of performance and reliability due to software aging. To provide a reliable IoT applications, it is crucial to understand how software aging can manifest in object detection systems under resource-constrained environment. In this paper, we investigate the software aging issue in a real-time object detection system using YOLOv5 running on a Raspberry Pi-based edge server. By performing statistical analysis on the measurement data, we detected a suspicious trend of software aging in the memory usage, which is induced by real-time object detection workloads. We also observe that a system monitoring process is halted due to the shortage of free storage space as a result of YOLOv5's resource dissipation. The monitoring process fails after 24.11, 44.56, and 115.36 hours (on average), when we set the sizes of input images to 160px, 320px, and 640px, respectively, in our system. Our experimental results can be used to plan countermeasures such as software rejuvenation and task offloading.",2023-06-07,2024-07-22 02:24:29,2024-10-03 03:08:21,2024-07-21,671–678,,,,,,,SAC '23,,,,Association for Computing Machinery,"New York, NY, USA",,,,,,ACM Digital Library,,"TLDR: This paper investigates the software aging issue in a real-time object detection system using YOLOv5 running on a Raspberry Pi-based edge server and detects a suspicious trend of software aging in the memory usage, which is induced by real- time object detection workloads.","<div data-schema-version=""8""><p>在资源受限的边缘服务器上运行的实时目标检测系统中，在内存使用和交换使用中存在可疑的老化趋势。</p> </div>",C:\Users\tristone\Zotero\storage\5CJS8Q9J\Watanabe 等 - 2023 - Software Aging in a Real-Time Object Detection System on an Edge Server.pdf,,验证方法：实验实证; 分析方式：现象分析&度量; 老化影响：性能降级&内存消耗; 模型：MK，Sen's; 系统类型：边缘服务器; 指标：处理时间、吞吐量、内存、交换空间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LZRYCJRH,journalArticle,2023,"Kaur, Harguneet; Kaur, Arvinder",SMOTE-Based Homogeneous Prediction for Aging-Related Bugs in Cloud-Oriented Software,Journal of Information & Knowledge Management,,"0219-6492, 1793-6926",10.1142/S0219649223500478,https://www.worldscientific.com/doi/10.1142/S0219649223500478,"Software aging is the process caused by Aging-Related Bugs (ARBs) which leads to the depletion of resources and degradation of performance in the long run. ARBs are difficult to find and replicate in future studies as they are less in number, thus prediction of ARB is necessary to save cost and time in the testing phase. ARBs are present in low proportion as compared to non-ARBs known as the class Imbalance problem resulting in insufficient training dataset for prediction models. In this study, Synthetic Minority Oversampling Technique (SMOTE) is applied along with homogeneous cross-project ARB prediction to reduce the effect of imbalance problem in software. SMOTE is oversampling of the minority instances synthetically to balance the dataset and improve the capability of defect prediction models. Homogeneous cross-project prediction is implemented where the datasets are different but the distribution of metric sets of both training and testing datasets is similar. The experiment is conducted on five cloud-oriented software such as Cassandra, Hive, Storm, Hadoop HDFS and Hadoop Mapreduce. The novelty of this study is the combination of SMOTE and homogeneous cross-project defect prediction for ARBs in cloud-oriented software. The comparative analysis is also conducted to understand the difference between SMOTE and non-SMOTE results with the help of machine learning classifiers. The result conveys that SMOTE is an efficient method to address class imbalance problem in ARB prediction.",2023-10,2024-07-23 08:05:18,2024-10-12 06:21:23,2024-07-23 08:05:18,2350047,,5.0,22.0,,Journal of Information & Knowledge Management,,,,,,,,en,,,,,Semantic Scholar,,影响因子: 0.9 5年影响因子: 1.0 EI: 是 TLDR: Synthetic Minority Oversampling Technique (SMOTE) is applied along with homogeneous cross-project ARB prediction to reduce the effect of imbalance problem in software aging and the result conveys that SMOTE is an efficient method to address class imbalanceproblem in ARB Prediction.,"<div data-schema-version=""8""><p>在跨项目 ARB 预测使用SMOTE，以减少不平衡问题的影响</p> </div>",C:\Users\tristone\Zotero\storage\M2YLQFUX\Kaur和Kaur - 2023 - SMOTE-Based Homogeneous Prediction for Aging-Related Bugs in Cloud-Oriented Software.pdf; ,https://www.semanticscholar.org/paper/SMOTE-Based-Homogeneous-Prediction-for-Bugs-in-Kaur-Kaur/114e0e8f03e41a3ed671a99909031ef48bf2c66d,分析方式：ARB prediction; 模型：Bagging、Adaboost、Logistic回归、Naive Bayes、LogitBoost、随机森林、J48和决策表; 判定指标：Recall、FPR和Balance; 系统类型：云; 验证方法：实验实证&对比分析; 指标：程序规模度量，McCabe复杂度度量，老化相关度量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RJ8RKLMB,journalArticle,2023,"Parashivamurthy, Shruthi; Cholli, Nagaraj Girish",Software aging prediction – a new approach,International Journal of Electrical and Computer Engineering (IJECE),,"2722-2578, 2088-8708",10.11591/ijece.v13i2.pp1773-1781,https://ijece.iaescore.com/index.php/IJECE/article/view/27487,"To meet the users’ requirements which are very diverse in recent days, computing infrastructure has become complex. An example of one such infrastructure is a cloud-based system. These systems suffer from resource exhaustion in the long run which leads to performance degradation. This phenomenon is called software aging. There is a need to predict software aging to carry out pre-emptive rejuvenation that enhances service availability. Software rejuvenation is the technique that refreshes the system and brings it back to a healthy state. Hence, software aging should be predicted in advance to trigger the rejuvenation process to improve service availability. In this work, the <em>k</em>-nearest neighbor (<em>k</em>-NN) algorithm-based new approach has been used to identify the virtual machine's status, and a prediction of resource exhaustion time has been made. The proposed prediction model uses static thresholding and adaptive thresholding methods. The performance of the algorithms is compared, and it is found that for classification, the <em>k</em>-NN performs comparatively better, i.e., <em>k</em>-NN showed an accuracy of 97.6. In contrast, its counterparts performed with an accuracy of 96.0 (naïve Bayes) and 92.8 (decision tree). The comparison of the proposed work with previous similar works has also been discussed.",2023-04-01,2024-07-23 07:36:20,2024-10-03 08:50:46,2024-07-23 07:36:20,1773,,2.0,13.0,,International Journal of Electrical and Computer Engineering (IJECE),,,,,,,,,http://creativecommons.org/licenses/by-sa/4.0,,,,Semantic Scholar,,"TLDR: The k-nearest neighbor (k-NN) algorithm-based new approach has been used to identify the virtual machine's status, and a prediction of resource exhaustion time has been made, and the proposed prediction model uses static thresholding and adaptive thresholding methods.","<div data-schema-version=""8""><p>提出了一种基于k最近邻（k-NN）算法的新方法，用于预测虚拟机的资源耗尽时间。通过静态阈值和自适应阈值方法，预测模型能够识别虚拟机的状态并触发再生过程​​。</p> </div>",C:\Users\tristone\Zotero\storage\MJ3G3RD6\Parashivamurthy和Cholli - 2023 - Software aging prediction – a new approach.pdf; ,https://www.semanticscholar.org/paper/Software-aging-prediction-%E2%80%93-a-new-approach-Parashivamurthy-Cholli/e21a62187e247a6423c7d9865766d58586782d51,验证方法：实验实证&对比分析; 系统类型：虚拟化系统; 老化影响：内存消耗，CPU利用率上升; 判定指标：准确率; 期刊：IJECE; 指标：内存，CPU; 分析方式：度量&Measurement-based（ML+阈值）; 模型：KNN; 阈值：静态+自适应阈值,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LYL2JHUP,journalArticle,2023,"Shi, Fengdong; Yuan, Zhi; Wang, Min; Cui, Jun",Research on Cloud Platform Software Aging Prediction Method Based on VMD-ARIMA-BilSTM Combined Model,Integrated Ferroelectrics,,1058-4587,10.1080/10584587.2023.2192665,https://doi.org/10.1080/10584587.2023.2192665,"When the cloud platform runs under heavy load for a long time, internal resources will be consumed and errors will accumulate continuously. As a result, the software aging phenomenon occurs, which ultimately degrades the performance and reliability of the software system. Aiming at the above problems, this paper proposes a hybrid model based on integrated variational mode decomposition, moving average free regression and long and short memory network (VMD-ARIMA-BILSTM) to predict the software aging problem. Firstly, the original resource utilization rate is decomposed into stationary time series and non-stationary time series by variational mode decomposition. Then, the advantages of moving average free regression and bidirectional long short-term memory network are used to predict stationary and non-stationary series respectively. Finally, the prediction results are reconstructed to obtain the final prediction results. Experimental results show that compared with single ARIMA and BI-LSTM, the hybrid model designed in this paper has higher prediction accuracy and faster convergence speed.",2023-09-02,2024-07-23 07:49:11,2024-10-12 06:23:07,2024-07-23 07:49:11,297-309,,1.0,237.0,,Integr. Ferroelectr.,,,,,,,,,,,,,Taylor and Francis+NEJM,,"Publisher: Taylor & Francis _eprint: https://doi.org/10.1080/10584587.2023.2192665 JCR分区: Q4 中科院分区升级版: 工程技术4区 影响因子: 0.7 5年影响因子: 0.8 EI: 是 南农高质量: D TLDR: A hybrid model based on integrated variational mode decomposition, moving average free regression and long and short memory network (VMD-ARIMA-BILSTM) to predict the software aging problem has higher prediction accuracy and faster convergence speed.","<div data-schema-version=""8""><p>VMD将原始资源利用率分解为平稳时间序列和非平稳时间序列，分别使用ARIMA和BiLSTM模型对其进行预测，最终整合预测结果，以提高预测准确性和收敛速度。</p> </div>",C:\Users\tristone\Zotero\storage\YDVM9KXY\Shi 等 - 2023 - Research on Cloud Platform Software Aging Prediction Method Based on VMD-ARIMA-BilSTM Combined Model.pdf,,"分析方式：Measurement-based（时间序列+ML）; 老化影响：性能降级; 模型：VMD, ARIMA, LSTM; 系统类型：云; 验证方法：实验实证&比较分析; 指标：CPU",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JG2JQ5K3,journalArticle,2023,"Jia, Kai; Yu, Xiao; Zhang, Chen; Hu, Wenhua; Zhao, Dongdong; Xiang, Jianwen",Software Aging Prediction for Cloud Services Using a Gate Recurrent Unit Neural Network Model Based on Time Series Decomposition,IEEE Transactions on Emerging Topics in Computing,,2168-6750,10.1109/TETC.2023.3258503,https://ieeexplore.ieee.org/abstract/document/10078836,"Software aging, which is caused by the accumulation of errors in the system and the consumption of computing resources, tends to occur in long-running cloud service software systems. In practice, software aging prediction has proven to be useful in planning the time to trigger rejuvenation because it provides a prior estimate of future resource consumption. However, aging indicators (e.g., physical memory) in cloud may have the characteristics of long-term slow growth, medium-term seasonality variations (alternating peaks and troughs), and short-term irregular fluctuations. Unfortunately, most of the existing aging prediction methods (e.g., a statistical or single machine learning model) only focus on the accuracy of short-term prediction, while lacking the cognition of the medium and long-term variations of aging indicators and their functions in formulating the rejuvenation schedule (e.g., performing rejuvenation when the load is low can minimize interference to users). To address the above problems, this article proposes a novel hybrid aging prediction framework to work on the prediction of memory resource consumption in cloud by applying a seasonal-trend decomposition procedure based on loess (STL) method and Gate Recurrent Unit (GRU) neural network, called the decomposition-based GRU (DGRU). The effectiveness of DGRU mainly has two aspects. One is the STL method as a preprocessing technology that can extract the trend, seasonality, and residual characteristics from memory utilization data. The other is that these characteristics can be well predicted separately by a well-designed GRU model, which can model the time-series relationship between the data. Experimental results show that our DGRU framework has superior performance compared with its competitors, including seven single models and six hybrid models. Our study illustrates that the DGRU is a promising solution for high-precision software aging prediction.",2023-07,2024-07-22 02:18:16,2024-09-24 06:50:05,2024-07-22 02:18:16,580-593,,3.0,11.0,,IEEE Trans. Emerg. Topics Comput.,,,,,,,,,,,,,IEEE Xplore,,"Conference Name: IEEE Transactions on Emerging Topics in Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.1 5年影响因子: 4.5 EI: 是 南农高质量: A TLDR: This article proposes a novel hybrid aging prediction framework to work on the prediction of memory resource consumption in cloud by applying a seasonal-trend decomposition procedure based on loess (STL) method and Gate Recurrent Unit (GRU) neural network, called the decomposition-based GRU (DGRU).","<div data-schema-version=""8""><p>基于Loess的季节性趋势分解（STL）方法和门控循环单元（GRU）神经网络的混合预测框架，用于预测云服务中的内存资源消耗</p> </div>",C:\Users\tristone\Zotero\storage\T8N5L3CV\10078836.html; C:\Users\tristone\Zotero\storage\82IHJJGD\Jia 等 - 2023 - Software Aging Prediction for Cloud Services Using a Gate Recurrent Unit Neural Network Model Based.pdf,,"分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 指标：内存; 期刊：JETC; 老化影响：内存消耗; 系统类型：虚拟化系统; 模型：季节性趋势分解（STL），GRU; 判定指标：MAE, RMSE, MAPE",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5UKPNITA,journalArticle,2023,"Qin, Fangyun; Zheng, Zheng; Wan, Xiaohui; Liu, Zhihao; Shi, Zhiping",Predicting Aging-Related Bugs Using Network Analysis on Aging-Related Dependency Networks,IEEE Transactions on Emerging Topics in Computing,,2168-6750,10.1109/TETC.2023.3279388,https://ieeexplore.ieee.org/abstract/document/10138751,"Software aging, a phenomenon that exhibits an increasing failure rate or progressive performance degradation in long-running software systems, has caused serious cost damage or even loss of human lives. To aid aging-related bug (ARB, whose activation can result in software aging) detection and removal before software release, ARB prediction was proposed. Based on the prediction results, software teams can allocate limited testing resources to ARB-prone modules. Previous research has proposed several methods for both within-project and cross-project ARB prediction. However, they are based on the same set of metrics focusing on the contents of a single module, and only six metrics are aging-related. In this paper, we develop aging-related network measures by constructing an aging-related dependency network to model the flow of aging-related information in the software. Our evaluation on three commonly used open-source projects reveals that aging-related network measures show an inconsistent association with ARB-proneness in three projects, and the performance of aging-related network measures varies under different ARB prediction settings.",2023-07,2024-07-23 08:21:38,2024-10-10 12:21:18,2024-07-23 08:21:38,566-579,,3.0,11.0,,IEEE Trans. Emerg. Topics Comput.,,,,,,,,,,,,,IEEE Xplore,,"Conference Name: IEEE Transactions on Emerging Topics in Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.1 5年影响因子: 4.5 EI: 是 南农高质量: A TLDR: Evaluation on three commonly used open-source projects reveals that aging-related network measures show an inconsistent association with ARB-proneness in three projects, and the performance of aging- related network measures varies under different ARB prediction settings.","<div data-schema-version=""8""><p>提出的老化相关网络度量可以捕捉到之前度量无法捕捉的结构特性，有助于提高ARB预测的准确性</p> </div>",C:\Users\tristone\Zotero\storage\66WB5QIX\10138751.html; C:\Users\tristone\Zotero\storage\XQ6T74GX\Qin 等 - 2023 - Predicting Aging-Related Bugs Using Network Analysis on Aging-Related Dependency Networks.pdf,,验证方法：实验实证&对比分析; 系统类型：Linux，MySQL，Apache HTTPD; 判定指标：PD（检测概率）、PF（误报概率）、平衡（Balance）、能耗; 期刊：TETC; 指标：复杂网络度量; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LYAJTUMW,journalArticle,2023,"Andrade, Ermeson; Pietrantuono, Roberto; Machida, Fumio; Cotroneo, Domenico",A Comparative Analysis of Software Aging in Image Classifiers on Cloud and Edge,IEEE Transactions on Dependable and Secure Computing,,1941-0018,10.1109/TDSC.2021.3139201,https://ieeexplore.ieee.org/abstract/document/9665276,"Image classifiers for recognizing real-world objects are widely used in the Internet of Things (IoT) and Cyber-Physical Systems(CPSs). A classifier is trained offline by machine learning algorithms with training data sets, and then it is deployed on a cloud or an edge computing system for online label predictions. As the classifier's performance depends on the underlying software infrastructure, it may degrade over time due to software faults causing software aging. In this paper, we address this issue and experimentally investigate software aging observed in an image classification system that continuously runs on cloud and edge computing environments. We apply several statistical techniques to analyze degradation trends in the systems under stress tests. Our statistical trend analysis confirms the degradation trends in the throughput as well as the available memory resources both in the cloud and the edge environments. Contrary to our expectation, the edge computing environment under test had much less impact on the performance degradation than our cloud environment when the workload is high, although the latter one has four times larger allocated memory resources. We also show that the observed performance degradation trends are associated with the memory usage of specific processes by performing correlation analysis.",2023-01,2024-07-22 02:17:41,2024-09-20 02:18:09,2024-07-22 02:17:41,563-573,,1.0,20.0,,IEEE Trans. Depend. Sec. Comput.,,,,,,,,,,,,,IEEE Xplore,,Conference Name: IEEE Transactions on Dependable and Secure Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 南农高质量: A CCF: A TLDR: This paper experimentally investigates software aging observed in an image classification system that continuously runs on cloud and edge computing environments and confirms the degradation trends in the throughput as well as the available memory resources both in the cloud and the edge environments.,"<div data-schema-version=""8""><p>首次比较了云和边缘计算环境中图像分类系统的老化现象，发现云环境在高负载条件下的性能退化更为严重。通过进程分析，识别了可能导致软件老化的进程</p> </div>",C:\Users\tristone\Zotero\storage\NJ75FMPK\Andrade 等 - 2023 - A Comparative Analysis of Software Aging in Image Classifiers on Cloud and Edge.pdf; C:\Users\tristone\Zotero\storage\NRF6QZ3B\9665276.html,,验证方法：实验实证&比较分析; 期刊：TDSC; 老化影响：内存消耗&性能降级; 分析方式：现象分析&度量; 模型：MK，方差分析，传递熵; 系统类型：云、边缘计算环境; 指标：响应时间，吞吐量，内存,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FW795DTJ,journalArticle,2023,"Couto, Herderson; Andrade, Ermeson; Silva, Francisco Airton; Callou, Gustavo",Analysis of Software Aging in a Database Environment,IEEE Latin America Transactions,,1548-0992,,https://latamt.ieeer9.org/index.php/transactions/article/view/7632,"Computer systems that run for long periods of time can suffer from a phenomenon known as software aging. Just like people, software can age. This phenomenon, however, can be viewed as a problem in computer systems because it can accelerate the depletion of resources and even lead to system failures. Databases are widely used software nowadays and can be affected by such a phenomenon, since they need to run for long periods of time uninterruptedly. Therefore, studies that investigate the possible effects of software aging in database environments are very necessary. In this work, we experimentally investigate the software aging phenomena in a database environment using PostgreSQL as the DBMS (Database Management System). By performing statistical analysis on the measurement data, we detected a suspicious phenomenon of software aging induced by workloads in memory and CPU usage. Additionally, our process analysis identified suspicious processes that can lead to memory degradations.",2023-07-24,2024-07-23 07:50:03,2024-08-14 07:53:26,2024-07-23 07:50:03,821-828,,7.0,21.0,,IEEE Lat. Am. Trans.,,,,,,,,en,Copyright (c) 2023 IEEE Latin America Transactions,,,,latamt.ieeer9.org,,Number: 7 JCR分区: Q3 中科院分区升级版: 工程技术4区 影响因子: 1.3 5年影响因子: 0.9 EI: 是 南农高质量: D,"<div data-schema-version=""8""><p>分析数据库环境中软件老化现象，发现PostgreSQL在高负载下显著增加了内存和CPU的使用。使用Mann-Kendall检验确认了内存和CPU使用的增长趋势</p> </div>",C:\Users\tristone\Zotero\storage\24EQ5V98\Couto 等 - 2023 - Analysis of Software Aging in a Database Environment.pdf,,验证方法：实验实证; 分析方式：度量; 模型：MK，Sen's; 老化影响：内存消耗，CPU利用率上升; 指标：内存，CPU; 系统类型：数据库系统（PostgreSQL）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H6IS284L,journalArticle,2023,"Costa, Jackson; Matos, Rubens; Araujo, Jean; Li, Jueying; Choi, Eunmi; Nguyen, Tuan Anh; Lee, Jae-Woo; Min, Dugki",Software Aging Effects on Kubernetes in Container Orchestration Systems for Digital Twin Cloud Infrastructures of Urban Air Mobility,Drones,,2504-446X,10.3390/drones7010035,https://www.mdpi.com/2504-446X/7/1/35,"It is necessary to develop a vehicle digital twin (DT) for urban air mobility (UAM) that uses an accurate, physics-based emulator to model the statics and dynamics of a vehicle. This is because the use of digital twins in the operation and control of UAM vehicles is essential for the UAM operational digital twin infrastructure (UAM-ODT). There are several issues that need to be addressed in this process: (i) the lack of digital twin engines for the digitalization (twinization) of the dynamics and control of UAM vehicles at the core of UAM-ODT systems; (ii) the lack of back-end system engineering in the development of UAM vehicle DTs; and (iii) the lack of fault-tolerant mechanisms for the DT cloud back-end system to run uninterrupted operations 24/7. On the other hand, software aging and rejuvenation are becoming increasingly important in a variety of computing scenarios as the demand for reliable and available services increases. With the increasing use of containerized systems, there is also a need for an orchestrator to support easy management and reduce operational costs. In this paper, an operational digital twin (ODT) of a typical urban air mobility (UAM) infrastructure is developed on a private cloud system based on Kubernetes using a proposed cloud-in-the-loop simulation approach. To ensure the ODT can provide uninterrupted operational control and services in UAM around the clock, we propose a methodology for investigating software aging in Kubernetes-based containerized clouds. We evaluate the behavior of Kubernetes software using the Nginx and K3S tools while they manage pods in an accelerated lifetime experiment. We continuously execute operations for creating and terminating pods, allowing us to observe the utilization of computing resources (e.g., CPU, memory, and I/O), the performance of the Nginx and K3S environments, and the response time of an application hosted in those environments. In some conditions and for specific metrics, such as virtual memory usage, we observed the effects of software aging, including a memory leak that is not fully cleared when the cluster is stopped. These issues could lead to system performance degradation and eventually compromise the reliability and availability of the system when it crashes due to memory space exhaustion or full utilization of swap space on the hard disk. This study helps with the deployment and maintenance of virtualized environments from the standpoint of system dependability in digital twin computing infrastructures where a large number of services are running under strict continuity requirements.",2023-01,2024-07-22 02:39:51,2024-08-16 13:52:34,2024-07-22 02:39:51,35,,1.0,7.0,,Drones,,,,,,,,en,http://creativecommons.org/licenses/by/3.0/,,,,www.mdpi.com,,Number: 1 Publisher: Multidisciplinary Digital Publishing Institute JCR分区: Q1 中科院分区升级版: 地球科学2区 影响因子: 4.4 5年影响因子: 4.8,"<div data-schema-version=""8""><p>在用于城市空中交通（UAM）数字孪生云基础设施中，基于Kubernetes的容器编排系统中的CPU、内存和I/O利用率上升，存在内存泄漏等软件老化效应</p> </div>",C:\Users\tristone\Zotero\storage\BCS4XV3R\Costa 等 - 2023 - Software Aging Effects on Kubernetes in Container Orchestration Systems for Digital Twin Cloud Infra.pdf,,验证方法：实验实证; 分析方式：度量; 模型：MK，Sen's; 老化影响：内存消耗，CPU利用率上升; 指标：内存，CPU; 系统类型：安全关键系统，容器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
F9X8RIFK,conferencePaper,2023,"Dias, Douglas; Machida, Fumio; Andrade, Ermeson",Software Aging Analysis in a Testing Framework,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW60843.2023.00077,https://ieeexplore.ieee.org/document/10301340,"Jest is a popular JavaScript test framework widely utilized in software development for its efficient test execution capabilities. However, like any software, test frameworks such as Jest are susceptible to memory degradation, a critical symptom of software aging that can potentially impact Jest’s performance, especially during the execution of large-scale test suites. This paper addresses the effects of memory degradation in Jest by conducting an analysis of software aging symptoms. Our investigation primarily focuses on the impact of memory degradation on Jest during the execution of extensive test suites. Specifically, we examine a parameter configuration introduced in Jest version 29, which aims to mitigate memory consumption issues in newer versions of Jest by imposing limitations on the idle memory of its workers. Through our analysis, we assess the effectiveness of this configuration as a viable rejuvenation technique for Jest. The results of our study reveal the challenges posed by memory degradation in Jest, emphasizing the significance of addressing memory consumption issues when running extensive test suites. These findings contribute to a deeper understanding of software aging symptoms in this widely-used test framework and provide valuable insights for developers, testers, and professionals relying on Jest for testing their applications.",2023-10,2024-09-02 13:04:55,2024-10-03 03:13:42,2024-09-02 13:04:55,222-229,,,,,,,,,,,,,,,,,,IEEE Xplore,,"TLDR: A parameter configuration introduced in Jest version 29 is examined, which aims to mitigate memory consumption issues in newer versions of Jest by imposing limitations on the idle memory of its workers, and is assessed as a viable rejuvenation technique for Jest.",,C:\Users\tristone\Zotero\storage\R8CF72HC\Dias 等 - 2023 - Software Aging Analysis in a Testing Framework.pdf; C:\Users\tristone\Zotero\storage\JR5XWKXF\10301340.html,,会议：ISSREW; 验证方法：实验实证; 分析方式：度量; 分析方法：MK、Sen's; 老化影响：内存退化; 系统类型：Jest,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
9YXWHSWP,conferencePaper,2023,"Tian, Yunzhe; Li, Yike; Chen, Kang; Tong, Endong; Niu, Wenjia; Liu, Jiqiang; Qin, Fangyun; Zheng, Zheng",Mitigating Overfitting for Deep Learning-based Aging-related Bug Prediction via Brain-inspired Regularization in Spiking Neural Networks,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW60843.2023.00076,https://ieeexplore.ieee.org/document/10301319/?arnumber=10301319,"To alleviate the impact of software aging, primarily induced by aging-related bugs (ARBs), ARB prediction has drawn considerable interest from both academia and industry. Recent advances in deep learning (DL) have brought tremendous gains in ARB prediction. However, due to the limited size and extreme class imbalance in ARB datasets, conventional artificial neural networks (ANNs) are susceptible to overfitting, resulting in a suboptimal generalization performance. In this paper, we take advantage of sparse and binary nature of spiking communication in spiking neural networks (SNNs), which inherently provides a brain-inspired regularization to effectively alleviate overfitting. We propose the first spiking convolutional neural network-based ARB prediction model (ARB-SCNN), comprising a spiking encoder followed by a classifier and utilizing the Leaky Integrate-and-Fire neuron as the basic spiking computing unit. Considering the spatial-temporal dynamics and the non-differentiability nature, we develop a dedicated training framework for ARB-SCNN, which incorporates the rate coding-based mean square error (MSE) loss and employs the backpropagation through time with the surrogate gradient. Finally, extensive experiments on two real-world ARB datasets demonstrate that our ARB-SCNN effectively mitigates overfitting, improving generalization performance by 7.82% compared to the state-of-the-art DL-based classifiers, and it exhibits up to 5× better computational energy efficiency.",2023-10,2024-07-23 08:19:12,2024-10-10 12:21:25,2024-07-23 08:19:12,214-221,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>引入脑启发的正则化方法来解决深度学习模型在老化相关漏洞（ARB）预测中的过拟合问题。文章提出了一种新的基于尖峰卷积神经网络（SCNN）的ARB预测模型，利用尖峰神经网络（SNN）的稀疏和二进制通信特性来有效缓解过拟合，并提升泛化性能和能效。</p> </div>",C:\Users\tristone\Zotero\storage\ZFILVAZB\10301319.html; C:\Users\tristone\Zotero\storage\CPEWRGRR\Tian 等 - 2023 - Mitigating Overfitting for Deep Learning-based Aging-related Bug Prediction via Brain-inspired Regul.pdf,,验证方法：实验实证&对比分析; 会议：ISSREW; 系统类型：Linux，MySQL; 判定指标：PD（检测概率）、PF（误报概率）、平衡（Balance）、能耗; 模型：SCNN(尖峰卷积神经网络); 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
4RPAZ7Y6,conferencePaper,2023,"Xie, Wenzhi; Zhang, Chen; Jia, Kai; Zhao, Dongdong; Zhou, Junwei; Tian, Jing; Xiang, Jianwen",Cross-Project Aging-Related Bug Prediction Based on Feature Transfer and Class Imbalance Learning,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW60843.2023.00075,https://ieeexplore.ieee.org/abstract/document/10301350,"Software aging refers to system performance degradation and failure due to Aging-Related Bugs (ARBs) in long-running software systems. ARB prediction helps identify ARBs to prevent software aging. However, early project stages often lack ARB data for model training. To address this, cross-project ARB prediction (CPAP) is proposed, where a model is trained using labeled source projects to predict the ARB present in the target project. In CPAP, distribution discrepancy and class imbalance pose challenges, impacting model performance. In this paper, a hybrid CPAP combines feature transfer learning with class imbalance learning is proposed to solve the above problems, which we named KDK. In the feature transfer learning stage, KDK leverages Kernel Principal Component Analysis (KPCA) in conjunction with Double Marginalized Denoising Autoencoders (DMDA) to acquire feature representations that reduce distribution disparities among projects. In the class imbalance learning stage, K-means Clustering Cleaning Ensemble (KCE) is employed to rebalance and clean the source project dataset, who has a severe class imbalance and class overlap. Experiments are conducted on three open-source projects with two performance metrics (AUC and Balance). Experiment results demonstrate that our approach enhances Balance values by 9.0%, 32.9%, 4.4%, and 3.9% in comparison to state-of-the-art CPAP methods, namely TLAP, JPKS, SRLA, and JDA-ISDA, respectively.",2023-10,2024-07-23 08:22:50,2024-10-10 12:21:48,2024-07-23 08:22:50,206-213,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: A hybrid CPAP that combines feature transfer learning with class imbalance learning is proposed to solve software aging and enhances Balance values by 9.0%, 32.9%, 4.4%, and 3.9% in comparison to state-of-the-art CPAP methods, respectively.","<div data-schema-version=""8""><p>提出了一种结合特征迁移学习和类别不平衡学习的跨项目ARB预测方法</p> </div>",C:\Users\tristone\Zotero\storage\RNDHMQGV\10301350.html; C:\Users\tristone\Zotero\storage\UVF9SXWX\Xie 等 - 2023 - Cross-Project Aging-Related Bug Prediction Based on Feature Transfer and Class Imbalance Learning.pdf,,"验证方法：实验实证&对比分析; 会议：ISSREW; 判定指标：AUC, Balance; 指标：程序大小相关度量、复杂性度量和老化相关度量; 系统类型：Linux, MySQL，NetBSD; 分析方式：ARB prediction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
WX5M4AXH,conferencePaper,2023,"Avritzer, Alberto; Janes, Andrea; Marin, Andrea; van Hoorn, Andre; Camilli, Matteo; Trubiani, Catia; Menasché, Daniel S.",Assessment of Aging and Rejuvenation for Resiliency in Heterogeneous Network Clusters,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW60843.2023.00074,https://ieeexplore.ieee.org/document/10301324/?arnumber=10301324,"The problem of evaluating the application of software rejuvenation is challenging, especially when load balancing comes into play to overcome resiliency threats. In this paper, we focus on the evaluation of the software aging threat due to memory leaks in the underlying open-source infrastructure. Our goal is to evaluate the effectiveness of several software rejuvenation strategies to achieve resiliency. To this end, we have built a heterogeneous environment composed of 15 large virtual machines and 15 extra-large virtual machines. We have used an open-source benchmark, and we have measured the benchmark response time on the large heterogeneous network. As a result, we obtained a software rejuvenation threshold that was used to evaluate the extent of software aging in each virtual machine.We have created an automated testing and analysis infrastructure that was used to evaluate several strategies for achieving resiliency for large infrastructure subject to software aging. We present the obtained results of the application of software rejuvenation to maintain the resiliency of a large heterogeneous network of virtual machines.",2023-10,2024-07-23 08:28:26,2024-10-06 13:35:30,2024-07-23 08:28:26,198-205,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: This paper focuses on the evaluation of the software aging threat due to memory leaks in the underlying open-source infrastructure, and creates an automated testing and analysis infrastructure that was used to evaluate several strategies for achieving resiliency for large infrastructure subject to software aging.","<div data-schema-version=""8""><p>评估不同软件重生策略在异构网络集群中的应用</p> </div>",C:\Users\tristone\Zotero\storage\5GAKX7ZG\Avritzer 等 - 2023 - Assessment of Aging and Rejuvenation for Resiliency in Heterogeneous Network Clusters.pdf; C:\Users\tristone\Zotero\storage\U6L489UK\10301324.html,,"验证方法：实验实证&比较分析; 系统类型：集群; 会议：ISSREW; 老化影响：内存消耗&性能降级; 分析方式：Model-based&rej&度量; 模型：MDP, MK; 指标：内存，CPU，响应时间; 重生层级：Docker三层级",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 IEEE 34th International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
MQLML5XT,conferencePaper,2023,"Zhang, Chen; Feng, Shuo; Xie, Wenzhi; Zhao, Dongdong; Xiang, Jianwen; Pietrantuono, Roberto; Natella, Roberto; Cotroneo, Domenico",IFCM: An improved Fuzzy C-means clustering method to handle Class Overlap on Aging-related Software Bug Prediction,2023 IEEE 34th International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE59848.2023.00053,https://ieeexplore.ieee.org/document/10299939/?arnumber=10299939,"Software aging refers to a problem of performance decay in long-running software systems. This phenomenon is primarily attributed to the accumulation of run-time errors, commonly known as aging-related bugs (ARBs). Detecting ARBs through Aging-related Bug Prediction (ARBP) is crucial in ensuring system reliability. The effectiveness of ARBP heavily relies on the quality of datasets. However, ARB datasets often suffer from class overlap, where instances from different classes exhibit similar feature values. Class overlap poses a significant challenge as it compromises the quality of training data and subsequently impacts ARBP accuracy. To address this issue, we propose an improved Fuzzy C-means clustering method named IFCM, designed to mitigate class overlap in ARBP tasks. IFCM can identify whether an instance occurs overlap, and identify the overlap degree of this instance through the predefined parameters. We evaluate our proposed method on two public datasets Linux and MySQL and one self-collected dataset NetBSD using five different classifiers with five performance metrics (AUC, F1, Balance, PD, PF). Comparison with four existing methods (No clean, NCL, IKMCCA, ROCT) demonstrates that IFCM is effective in alleviating class overlap in ARBP. For Instance, IFCM achieves promising results in terms of AUC blue (which are 0.762, 0.757, and 0.642) and Balance (which are 0.709, 0.736, and 0.595) at the dataset level.",2023-10,2024-07-23 08:24:43,2024-10-10 12:21:53,2024-07-23 08:24:43,590-600,,,,,,IFCM,,,,,,,,,,,,IEEE Xplore,,ISSN: 2332-6549 CCF: B,,C:\Users\tristone\Zotero\storage\DJRA8F53\10299939.html; C:\Users\tristone\Zotero\storage\7JYLGVHB\Zhang 等 - 2023 - IFCM An improved Fuzzy C-means clustering method to handle Class Overlap on Aging-related Software.pdf,,"验证方法：实验实证&对比分析; 会议：ISSRE; 老化影响：非特定的; 评判指标：AUC, F1, Balance, PD, PF; 系统类型：Linux, MySQL，NetBSD; 指标：程序规模，复杂度，内存管理和数据结构; 分析方式：ARB prediction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 IEEE 34th International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
X5KY3MUV,conferencePaper,2023,"Chen, Yulei; Nie, Yuge; Yin, Beibei; Zheng, Zheng; Wu, Huayao",An Empirical Study to Identify Software Aging Indicators for Android OS,"2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security (QRS)",,,10.1109/QRS60937.2023.00049,https://ieeexplore.ieee.org/document/10366698,"Android mobile devices have been suffering from performance degradation and increased failure rates during long-term operation, known as software aging. With the major changes in performance optimization and resource management in Android, it is spotted that the aging behavior of Android devices in the 2020s differs significantly from previous studies in resource utilization and performance metrics, which makes some classic metrics difficult to measure aging well, and new metrics are required to better describe the new phenomenon. Thus, we propose thread- and interface-level metrics to portray aging at a finer granularity and conduct an empirical study to reidentify classic and new software aging metrics in Android. Analysis confirms that software aging in Android is less reflected in global resources metrics but in more fine-grained ones, so thread- and interface-level metrics combined with specific classic resource and process-level metrics are helpful as indicators of software aging. These metrics have been confirmed and deployed for aging monitoring by our mobile phone manufacturer collaborators. A new experimental method customized for metric studies has also been adopted in this paper, significantly reducing data costs and interference in measurements.",2023-10,2024-07-23 07:44:12,2024-08-14 08:07:21,2024-07-23 07:44:12,428-439,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2693-9177 CCF: C,,C:\Users\tristone\Zotero\storage\P89V948C\Chen 等 - 2023 - An Empirical Study to Identify Software Aging Indicators for Android OS.pdf,,系统类型：Android; 会议：QRS; 分析方式：度量; 老化影响：性能降级&资源消耗; 模型：MK，Sen's; 验证方法：实验实证&比较分析&对比分析; 指标：LT，内存，存储，CPU，线程，接口,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2023 IEEE 23rd International Conference on Software Quality, Reliability, and Security (QRS)",,,,,,,,,,,,,,,
2XK4XYHS,conferencePaper,2023,"Hao, Guoze; Ma, Lianchuan",Virtual Machine Software Aging Prediction of Cloud-Based Safe Computing Platform,2023 China Automation Congress (CAC),,,10.1109/CAC59555.2023.10450219,https://ieeexplore.ieee.org/abstract/document/10450219,"With the application of cloud computing in rail transit signal system, the reliability of long-term application and service based on cloud computing has been paid more and more attention. Research has shown that software aging is an important factor affecting the safe operation of cloud platform. In response to the problems of poor universality, low prediction accuracy, and lack of research on cloud platform in train control system that exist in traditional aging analysis methods and prediction models, based on Sparrow Search Algorithm (SSA), Variational Mode Decomposition (VMD) and Time Convolution Network (TCN), a hybrid prediction model for virtual machine (VM) operation data on cloud platform is proposed. First, the original data is decomposed using the VMD optimized by SSA, and then each component is predicted using the SE-TCN model. Finally, use a fully connected network (FC) to fuse each component to obtain the final cloud resource usage prediction result. The analysis of the collected operational data shows that the prediction accuracy of the hybrid model is improved by 22% for Root Mean Square Error (RMSE) and 27% for Mean Absolute Error (MAE), compared with that of other models, it has high prediction accuracy.",2023-11,2024-07-23 07:46:05,2024-10-03 13:32:34,2024-07-23 07:46:05,5442-5447,,,,,,,,,,,,,,,,,,IEEE Xplore,,"ISSN: 2688-0938 TLDR: A hybrid prediction model for virtual machine (VM) operation data on cloud platform is proposed that has high prediction accuracy and is based on Sparrow Search Algorithm, Variational Mode Decomposition, and Time Convolution Network.",,C:\Users\tristone\Zotero\storage\SMS97V2F\Hao和Ma - 2023 - Virtual Machine Software Aging Prediction of Cloud-Based Safe Computing Platform.pdf; C:\Users\tristone\Zotero\storage\LF75HHCA\10450219.html,,分析方式：Measurement-based（ML）; 老化影响：崩溃/挂起故障&性能降级; 验证方法：实验实证&比较分析&对比分析; 会议：CAC; 评判指标：RMSE，MAE; 系统类型：VM（云计算）RBC; 指标：memory usage of VM; 模型：SSA，VMD，TCN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2023 China Automation Congress (CAC),,,,,,,,,,,,,,,
MZIE8IH2,conferencePaper,2023,"Kumar, Lov; Singh, Vikram; Murthy, Lalita Bhanu; Misra, Sanjay; Krishna, Aneesh",An Empirical Framework for Software Aging-Related Bug Prediction using Weighted Extreme Learning Machine,,,,10.15439/2023F9248,https://annals-csis.org/proceedings/2023/drp/9248.html,"Software ageing (SA) related bugs highlight the issue of software failure within continuously running systems, resulting in a decline in quality, system crashes, resource misuse, and more. To mitigate these bugs, software companies employ various techniques, including code reviews, bug-tracking systems deployment, and thorough testing. Nevertheless, the identiﬁcation of aging-related bugs remains challenging through these conventional approaches. To address this predicament, early prediction of the affected software regions due to runtime failures can be immensely valuable for software quality assurance teams. By accurately identifying the vulnerable areas, these teams can strategically allocate their limited resources during the testing and maintenance processes. This proactive approach ensures a more efﬁcient and effective bug detection and resolution, enhancing overall software reliability and performance. This study aims to develop aging-related bug prediction models using source code metrics as input. In particular, our objective is to investigate metrics selections, data balancing, and weighted ELM to detect software runtime failure. Experimental results show that ELM with data imbalance SMOTE technique performs the best compared to weighted ELM for addressing the class imbalance problem. The weighted ELM and ELM + SMOTE can predict SA bugs, and these models can be applied to the future releases of software projects for online failure prediction well in advance. The experimental ﬁnding shows that the models trained using normal ELM with SMOTE data sampling techniques have signiﬁcant performance improvement.",2023-10-11,2024-07-29 09:28:12,2024-10-10 12:21:12,2024-07-29 09:28:12,187-194,,,,,,,,,,,,,en,,,,,DOI.org (Crossref),,,"<div data-schema-version=""8""><p>结合特征选择和加权极限学习机（WELM），并使用SMOTE技术，有效处理类不平衡问题。</p> </div>",C:\Users\tristone\Zotero\storage\M7HJ9CZQ\Kumar 等 - 2023 - An Empirical Framework for Software Aging-Related Bug Prediction using Weighted Extreme Learning Mac.pdf,,"老化影响：内存消耗&性能降级; 验证方法：实验实证&比较分析&对比分析; 系统类型：Linux，MySQL; 会议：CSIS; 模型：SMOTE，ELM; 判定指标：AUC, Accuracy, F1; 指标：静态代码度量; 分析方式：ARB prediction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,18th Conference on Computer Science and Intelligence Systems,,,,,,,,,,,,,,,
WLIBCLPZ,journalArticle,2022,"Melo, Carlos; Oliveira, Felipe; Dantas, Jamilson; Araujo, Jean; Pereira, Paulo; Maciel, Ronierison; Maciel, Paulo",Performance and availability evaluation of the blockchain platform hyperledger fabric,The Journal of Supercomputing,,1573-0484,10.1007/s11227-022-04361-2,https://doi.org/10.1007/s11227-022-04361-2,"Through the blockchain-as-a-service paradigm, one can provide the infrastructure required to host blockchain-based applications regarding performance and dependability-related attributes. Many works evaluated issues and mitigated them to reach a high throughput or better downtime and availability indexes. However, to the best of our acknowledgment, studies regarding both characteristics are yet to be performed. This paper presents a performance evaluation of a private infrastructure hosting a blockchain-based application. As we monitored the system, we noticed some increase in resource consumption that may be associated with software aging issues on the hyperledger fabric platform or its basic components. Also, the impact of this resource increment on the probability of the system being operational has been evaluated. When consumption issues were considered, one of the transaction types increased the RAM consumption by almost 80% in less than 3 h, reducing the system availability to 98.17%. For scenarios without resource increment issues on the infrastructure, the availability reached 99.35%, with an annual downtime of 56.43 h.",2022-07-01,2024-07-02 12:44:39,2024-09-19 11:47:28,2024-07-02 12:44:39,12505-12527,,10.0,78.0,,J. Supercomput.,,,,,,,,en,,,,,Springer Link,,JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 2.5 5年影响因子: 2.4 EI: 是 CCF: C TLDR: A performance evaluation of a private infrastructure hosting a blockchain-based application and noticed some increase in resource consumption that may be associated with software aging issues on the hyperledger fabric platform or its basic components.,,C:\Users\tristone\Zotero\storage\ZXDBRA5J\Melo 等 - 2022 - Performance and availability evaluation of the blockchain platform hyperledger fabric.pdf,,验证方法：数值分析; 模型：SPN; 分析方式：Hybrid; 系统类型：区块链; 老化影响：性能降级&资源消耗&可用性; 指标：可用性，资源耗尽时间; 期刊：The Journal of Supercomputing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6D6BKKXG,journalArticle,2022,"Vinícius, Lucas; Rodrigues, Laécio; Torquato, Matheus; Silva, Francisco Airton",Docker platform aging: a systematic performance evaluation and prediction of resource consumption,The Journal of Supercomputing,,1573-0484,10.1007/s11227-022-04389-4,https://doi.org/10.1007/s11227-022-04389-4,"Software aging is a complex phenomenon that manifests itself in software-based applications and platforms as steady performance and resource deterioration. Previous research has made substantial progress in modeling, assessment, and experimental studies of software aging phenomena in software systems such as virtualized server systems, but has not taken into account software platforms in a platform as a service (PaaS), such as Docker. The Docker platform, which is used to run OS-level virtualization-based containers, is prone to software aging in all cases, necessitating more research. This paper presents a thorough investigation into software aging and rejuvenation, as well as behavior prediction on Docker platform. For 30 days, a collection of software aging experiments was executed continuously to explore the accumulation and variation of aging-related problems on different hardware configurations. Furthermore, in software aging and software rejuvenation studies, the Stress-Wait-Rejuvenation (SWARE) approach is used to detect aging signs and examine the efficiency of software rejuvenation strategies in a single trial. We can integrate the software platform’s resource usage under the workload in this way. Even after the stressful workload is stopped, the resource consumption remains significant, according to the findings. Experiments show that the Docker platform has had serious aging issues since its early phases of implementation. However, rejuvenation approaches, such as just rebooting the operating system, can drastically cut down on resource utilization. For predicting aging phenomena in the chosen Docker platform and comparing aging prediction models, the experimental data are gathered and supplied to different data prediction models based on time series and a long short-term memory (LSTM) machine-learning algorithm. The prediction results show that the LSTM model beats the other examined models in terms of aging forecast accuracy. The findings of this study can aid in the management and maintenance of Docker-based PaaS systems by taking into account the effects of software aging and using appropriate software rejuvenation strategies in Docker platforms.",2022-07-01,2024-07-22 02:36:28,2024-09-24 07:01:26,2024-07-22 02:36:28,12898-12928,,10.0,78.0,,J. Supercomput.,Docker platform aging,,,,,,,en,,,,,Springer Link,,JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 2.5 5年影响因子: 2.4 EI: 是 CCF: C,"<div data-schema-version=""8""><p>采用时间序列和长短期记忆（LSTM）机器学习算法预测Docker平台的老化现象</p> </div>",C:\Users\tristone\Zotero\storage\32E4AVTM\Vinícius 等 - 2022 - Docker platform aging a systematic performance evaluation and prediction of resource consumption.pdf,,"验证方法：实验实证&对比分析; 分析方式：Measurement-based（时间序列+ML）; 系统类型：Docker; 指标：内存，CPU，响应时间; 老化影响：内存消耗，CPU利用率上升，性能降级; 模型：LSTM, ARIMA，漂移模型（Drift）、Holt模型和Holt-Winters模型",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7XX2ZVHT,journalArticle,2022,"Cotroneo, Domenico; De Simone, Luigi; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",Software Micro-Rejuvenation for Android Mobile Systems,Journal of Systems and Software,,0164-1212,10.1016/j.jss.2021.111181,https://www.sciencedirect.com/science/article/pii/S0164121221002636,"Software aging – the phenomenon affecting many long-running systems, causing performance degradation or an increasing failure rate over mission time, and eventually leading to failure – is known to affect mobile devices and their operating systems, too. Software rejuvenation – the technique typically used to counteract aging – may compromise the user’s perception of availability and reliability of the personal device, if applied at a coarse grain, e.g., by restarting applications or, worse, rebooting the entire device. This article proposes a configurable micro-rejuvenation technique to counteract software aging in Android-based mobile devices, acting at a fine-grained level, namely on in-memory system data structures. The technique is engineered in two phases. Before releasing the (customized) Android version, a heap profiling facility is used by the manufacturer’s developers to identify potentially bloating data structures in Android services and to instrument their code. After release, an aging detection and rejuvenation service will safely clean up the bloating data structures, with a negligible impact on user perception and device availability, as neither the device nor operating system’s processes are restarted. The results of experiments show the ability of the technique to provide significant gains in aging mobile operating system responsiveness and time to failure.",2022-04-01,2022-01-22 06:59:14,2024-09-22 03:43:25,2022-01-22 06:59:14,111181,,,186.0,,J. Syst. Software,,,,,,,,en-US,,,,,3.514,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.7 5年影响因子: 3.7 EI: 是 CCF: B,"<div data-schema-version=""8""><p>不足：实验中仅涉及Android5，老化指标仅考虑了LT</p> </div>; <div data-schema-version=""8""><p>概述：基于Android设备的一种微重生技术</p> </div>; <div data-schema-version=""8""><p>优点：在容器级别重生，用户完全感知不到</p> </div>",C:\Users\tristone\Zotero\storage\Z7ZPQWJ7\Cotroneo 等 - 2022 - Software Micro-Rejuvenation for Android Mobile Systems.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：实验实证&对比分析; 系统类型：Android; 期刊：JSS; 分析方式：rej; 指标：LT、TTAF; 重生层级：容器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Q8IGXC8T,journalArticle,2022,"Kaur, Harguneet; Kaur, Arvinder",An Empirical Study of Aging Related Bug Prediction Using Cross Project in Cloud Oriented Software,Informatica,,1854-3871,10.31449/inf.v46i8.4197,https://www.informatica.si/index.php/informatica/article/view/4197,"Cloud oriented applications enable users to increase the scalability of computing infrastructure by using shared computer resources. These applications include the characteristics such as NoSQL database, BigData Analytics, distributed file system and MapReduce architecture which may face issues like software aging due to which ongoing system's performance decreases and failure rate increases. Aging Related Bugs (ARB) are bugs that are caused due to memory leakage, null pointer exception, resource depletion etc. in the ongoing system whose impact can be dangerous, so it’s better to predict them before releasing the software. Manual extraction of ARB reports are common but finding ARBs within thousand of bug reports is challenging. This is the first paper that presents the empirical study to automatically search aging related bug reports through SEARCH_KEYWORD algorithm and implement the ARB prediction in cross project for cloud oriented applications/softwares. To compare the efficacy of the prediction results, With-in Project Defect Prediction (WPDP) of ARBs is also performed. The work is divided in three phases: 1. ARB reports are extracted from the summary/description of bug in bug repository through automatic process. 2. Cross project bug prediction (CPDP) is performed to predict ARB due to limited availability of training data which is not implemented yet in cloud oriented softwares to the best of our knowledge. 3. Machine learning techniques are applied for ARB prediction to build fault prediction models. There is an imbalanced proportion between ARB-prone and ARB-free files, therefore Recall, FPR(False Positive Rate), Balance are used as major performance measures to predict ARBs. Kruskal Wallis Test and Friedman Test, are applied on the prediction results and it is proved that Naive Bayes performed significantly better than other classifiers. The results suggested that CPDP performed better than WPDP of ARBs using machine learning classifiers in cloud oriented datasets.",2022-11-25,2024-07-22 02:26:58,2024-10-10 12:20:55,2024-07-22 02:26:58,,,8.0,46.0,,Informatica (ljubl.),,,,,,,,en,"I assign to  Informatica ,  An International Journal of Computing and Informatics  (""Journal"") the copyright in the manuscript identified above and any additional material (figures, tables, illustrations, software or other information intended for publication) submitted as part of or as a supplement to the manuscript (""Paper"") in all forms and media throughout the world, in all languages, for the full term of copyright, effective when and if the article is accepted for publication. This transfer includes the right to reproduce and/or to distribute the Paper to other journals or digital libraries in electronic and online forms and systems.  I understand that I retain the rights to use the pre-prints, off-prints, accepted manuscript and published journal Paper for personal use, scholarly purposes and internal institutional use.  In certain cases, I can ask for retaining the publishing rights of the Paper. The Journal can permit or deny the request for publishing rights, to which I fully agree.  I declare that the submitted Paper is original, has been written by the stated authors and has not been published elsewhere nor is currently being considered for publication by any other journal and will not be submitted for such review while under review by this Journal.  The Paper contains no material that violates proprietary rights of any other person or entity. I have obtained written permission from copyright owners for any excerpts from copyrighted works that are included and have credited the sources in my article. I have informed the co-author(s) of the terms of this publishing agreement.           Copyright ©  Slovenian Society Informatika",,,,www.informatica.si,,Number: 8 JCR分区: Q1 中科院分区升级版: 计算机科学4区 影响因子: 3.3 5年影响因子: 3.2 EI: 是 南农高质量: A,"<div data-schema-version=""8""><p>通过JIRA的REST API从错误报告库中自动化提取老化错误报告，并使用交叉项目缺陷预测（CPDP）和项目内缺陷预测（WPDP）来构建错误预测模型</p> </div>",C:\Users\tristone\Zotero\storage\35PRLLMB\Kaur和Kaur - 2022 - An Empirical Study of Aging Related Bug Prediction Using Cross Project in Cloud Oriented Software.pdf,,验证方法：实验实证&比较分析; 系统类型：云; 模型：朴素贝叶斯、逻辑回归、随机森林等传统机器学习; 判定指标：Recall、FPR和Balance; 指标：程序大小相关度量、复杂性度量; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4PZSAL47,journalArticle,2022,"Bai, Jing; Chang, Xiaolin; Machida, Fumio; Jiang, Lili; Han, Zhen; Trivedi, Kishor S.",Impact of Service Function Aging on the Dependability for MEC Service Function Chain,IEEE Transactions on Dependable and Secure Computing,,1941-0018,10.1109/TDSC.2022.3150782,,"The Multi-access Edge Computing (MEC) and Network Function Virtualization (NFV) integrated architecture is a key enabling platform for 5G to run multiple customized services in the form of service function chain (SFC) configured as an ordered set of service functions (SFs). However, memory-related software aging in the SF that can be exploited by attackers becomes a new threat to the dependability of MEC-SFC services. To provide dependable MEC-SFC services, proactive rejuvenation techniques to counteract the SF aging problem are essential. In this paper, we develop a semi-Markov model to quantitatively investigate the transient availability and steady-state dependability (availability and reliability) of MEC-SFC services. Our model enables the analysis of a MEC-SFC with any number of SFs, and can capture complex time-dependent behaviors of aging, failure, and recovery. The approximate accuracies of the presented model on dependability measures are comprehensively evaluated through comparative studies with simulation experiments. We then detect potential bottlenecks for a MEC-SFC system through sensitivity analysis and further analyze the impact of event-time interval distributions on steady-state dependability. Finally, we investigate the transient behaviors of a MEC-SFC service when varying system parameters during MEC-SFC operation.",2022,2022-03-11 06:42:18,2024-09-19 11:47:37,,1-1,,,,,IEEE Trans. Depend. Sec. Comput.,,,,,,,,en-US,,,,,6.791,2.0,"Conference Name: IEEE Transactions on Dependable and Secure Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 CCF: A TLDR: A semi-Markov model is developed to quantitatively investigate the transient availability and steady-state dependability of MEC-SFC services and can capture complex time-dependent behaviors of aging, failure, and recovery.","<div data-schema-version=""8""><p>概述：<code>通过半马尔科夫模型定量研究MEC-SFC服务的瞬态可用性和稳态可靠性</code></p> </div>",C:\Users\tristone\Zotero\storage\2LVXZ8C3\Bai 等 - 2022 - Impact of Service Function Aging on the Dependability for MEC Service Function Chain.pdf; C:\Users\tristone\Zotero\storage\2CQLPDKQ\9712343.html,,分析方式：Model-based; 老化影响：非特定的; 验证方法：仿真模拟&数值分析; 模型：SMP; 期刊：TDSC; 系统类型：MEC-SFC; 指标：MTTF，Steady-state Availability，transient availability; 重生层级：操作系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KX2B288D,journalArticle,2022,"Du, Xiaoting; Sui, Yulei; Liu, Zhihao; Ai, Jun",An Empirical Study of Fault Triggers in Deep Learning Frameworks,IEEE Transactions on Dependable and Secure Computing,,1941-0018,10.1109/TDSC.2022.3152239,,"Deep learning frameworks play a key rule to bridge the gap between deep learning theory and practice. With the growing of safety- and security-critical applications built upon deep learning frameworks, their reliability is becoming increasingly important. To ensure the reliability of these frameworks, several efforts have been taken to study the causes and symptoms of bugs in deep learning frameworks, however, relatively little progress has been made in investigating the fault triggering conditions of those bugs. This paper presents the first comprehensive empirical study on fault triggering conditions in three widely-used deep learning frameworks (i.e., TensorFlow, MXNET, and PaddlePaddle). We have collected 3,555 bug reports from GitHub repositories of these frameworks. A bug classification is performed based on fault triggering conditions, followed by the analysis of frequency distribution of different bug types and the evolution features. The correlations between bug types and fixing time are investigated. Moreover, we have also studied the root causes of Bohrbugs and Mandelbugs and investigated the important consequences of each bug type. Finally, the analysis of regression bugs in deep learning frameworks is conducted. We have revealed 12 important findings based on our empirical results and have provided 10 implications for developers and users.",2022,2022-03-09 07:34:51,2024-09-19 11:47:31,,1-1,,,,,IEEE Trans. Depend. Sec. Comput.,,,,,,,,en-US,,,,,6.791,2.0,"Conference Name: IEEE Transactions on Dependable and Secure Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 CCF: A TLDR: This paper presents the first comprehensive empirical study on fault triggering conditions in three widely-used deep learning frameworks (i.e., TensorFlow, MXNET and PaddlePaddle) and reveals 12 important findings and provides 10 implications for developers and users.",,C:\Users\tristone\Zotero\storage\CKN6KGRQ\Du 等 - 2022 - An Empirical Study of Fault Triggers in Deep Learning Frameworks.pdf; C:\Users\tristone\Zotero\storage\2XV3L8ED\9716780.html,,老化影响：非特定的; 期刊：TDSC; 分析方式：分析bug报告&Classification; 系统类型：深度学习库(TensorFlow，MXNET，PaddlePaddle); 验证方法：人工分析&总结归纳,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CIKAQVLR,journalArticle,2022,"Bai, Jing; Chang, Xiaolin; Ning, Gaorong; Zhang, Zhenjiang; Trivedi, Kishor S.",Service Availability Analysis in a Virtualized System: A Markov Regenerative Model Approach,IEEE Transactions on Cloud Computing,,2168-7161,10.1109/TCC.2020.3028648,,"With the rapid and wide development and deployment of system virtualization, service availability analysis has become increasingly important in a virtualized system (VS) which suffers from software aging. Software rejuvenation techniques can be applied to improve service availability but its effectiveness depends on the rejuvenation policy, which defines when and where to rejuvenate, and which rejuvenation technique to be triggered. This article aims to analyze the optimal inspection time interval for maximizing application service (AS) availability under a three-level rejuvenation policy, in which rejuvenation techniques are deployed at each level, namely, AS, virtual machine (VM), and virtual machine monitor (VMM) levels. We first apply Markov regenerative process to construct an analytical model for the VS. Experiments of injecting memory leaks are conducted to measure aging-related parameters. Furthermore, numerical analysis is carried out to study the quantitative relationship between AS availability and inspection time interval, and determine the approximate optimal inspection time interval.",2022-07,2023-02-22 07:01:40,2024-09-19 11:47:35,,2118-2130,,3.0,10.0,,IEEE Trans. On Cloud Comput.,Service Availability Analysis in a Virtualized System,,,,,,,,,,,,5.697,2.0,"Conference Name: IEEE Transactions on Cloud Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.3 5年影响因子: 4.6 EI: 是 CCF: C TLDR: This article aims to analyze the optimal inspection time interval for maximizing application service (AS) availability under a three-level rejuvenation policy, in which rejuvenation techniques are deployed at each level, namely, AS, virtual machine (VM), and virtual machine monitor (VMM) levels.",,C:\Users\tristone\Zotero\storage\2VNQISUX\Bai 等 - 2022 - Service Availability Analysis in a Virtualized System A Markov Regenerative Model Approach.pdf; C:\Users\tristone\Zotero\storage\WEX8JUB6\9212594.html,,老化影响：非特定的; 验证方法：数值分析; 分析方式：Model-based&rej; 模型：MRGP; 指标：availability; 期刊：TCC; 实验方法：故障注入; 系统类型：虚拟化系统KVM; 重生策略：三级重生; 重生层级：AS（APP Software），VM，VMM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NA2Y9GF9,journalArticle,2022,"Jang, Eun-Tae; Baek, Sung Hoon; Park, K.",Aging Analysis Framework of Windows-Based Systems through Differential-Analysis of System Snapshots,"Computers, Materials & Continua",,,10.32604/cmc.2022.026663,https://www.semanticscholar.org/paper/Aging-Analysis-Framework-of-Windows-Based-Systems-Jang-Baek/82dfcb766731b837b5cf337761731daef8f2f828,"In the proposed system aging analysis framework, the framework aims to forcibly age a Windows-based system by repeating the software installation/removal operation by utilizing the system forced aging module. : When a Windows-based system is used for an exceedingly long time, its performance degrades, and the error occurrence rate tends to increase. This is generally called system aging. To investigate the reasons for system aging, various studies have been conducted within the range of the operating system kernel to the user application. However, finding an accurate reason for system performance degradation remains challenging research topic. In this study, system monitoring was conducted by dividing a system into ‘before software installation,’ ‘after software installation,’ and ‘after software removal.’ We confirmed that when a software installed in a system is removed, various system elements, such as storage and memory, are not restored to the level prior to the software installation. Consequently, we established a hypothesis regarding the performance degradation of a computer system owing to repeated software installation/removal operations, investigated the correlation between system aging and repeated software installation/removal operations, and proposed a system aging analysis framework for analyzing the reason behind system aging. In the proposed system aging analysis framework, we aim to forcibly age a Windows-based system by repeating the software installation/removal operation by utilizing the system forced aging module. The framework identifies the elements affecting system performance through a differential data analysis of the system time-series data extracted by the system performance extraction and system component snapshot modules. Consequently, the aging analysis framework presented in this study is expected to be effectively utilized as an index for studying",2022,2022-10-13 13:41:19,2024-09-20 02:18:12,2022-10-13 13:41:19,,,,,,"Computers, Materials & Continua",,,,,,,,en-US,,,,,www.semanticscholar.org,,"EI: 是 TLDR: In the proposed system aging analysis framework, the framework aims to forcibly age a Windows-based system by repeating the software installation/removal operation by utilizing the system forced aging module.","<div data-schema-version=""8""><p>概述：通过软件安装/删除进行老化，并借由对系统快照提取的时间序列进行差分分析。识别老化因素。</p> </div>",C:\Users\tristone\Zotero\storage\EMQLGHE7\Jang 等 - 2022 - Aging Analysis Framework of Windows-Based Systems through Differential-Analysis of System Snapshots.pdf; C:\Users\tristone\Zotero\storage\HN5TK85T\82dfcb766731b837b5cf337761731daef8f2f828.html,,老化影响：性能降级; 验证方法：实验实证; 分析方式：testing; 测试方法：差分测试; 期刊：CMC; 系统类型：Windows; 指标：CPU，memory，storage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XR2CEJAM,journalArticle,2022,"Rahman, Tajmilur; Nwokeji, Joshua C.; Manjunath, Tejas",Analysis of Current Trends in Software Aging: A Literature Survey,Computer and Information Science,,,,https://www.semanticscholar.org/paper/Analysis-of-Current-Trends-in-Software-Aging%3A-A-Rahman-Nwokeji/60724d754e1939e6d26236de803ea84610b16e8a,"Using recursive literature review (RLR) and Bootstrapping techniques, this research identifies and analyzes the causes of software aging and architecture degradation in software systems and found that architectural degradation is one of the key reasons that causeSoftware aging and acts as a barrier to the sustainability of software architecture. Software aging and architecture degradation are important areas in software quality assurance. Existing research in these areas has developed mitigation strategies for software aging, other researchers have analyzed strategies for identifying software aging. Regarding architectural degradation, current studies have designed techniques for reducing degradation. However, there appears to be a paucity of studies on the causes of software aging and architectural degradation. Insight into the causes of software aging and architectural degradation can provide a critical perspective and further strengthen the research endeavors on prevention techniques. Using recursive literature review (RLR) and Bootstrapping techniques, this research identifies and analyzes the causes of software aging and architecture degradation in software systems. We found that besides many other causes, architectural degradation is one of the key reasons that cause software aging and acts as a barrier to the sustainability of software architecture.",2022,2022-10-13 13:40:26,2024-08-14 07:53:15,2022-10-13 13:40:26,,,,,,Stud. Comp. Intell.,Analysis of Current Trends in Software Aging,,,,,,,en-US,,,,,www.semanticscholar.org,,,"<div data-schema-version=""8""><p>概述：回顾软件老化和体系结构退化的文献，提出架构退化是导致软件老化的关键原因之一</p> </div>",C:\Users\tristone\Zotero\storage\4CDRBPN6\Rahman 等 - 2022 - Analysis of Current Trends in Software Aging A Literature Survey.pdf; C:\Users\tristone\Zotero\storage\8U6EQD89\60724d754e1939e6d26236de803ea84610b16e8a.html,,分析方式：综述; 老化影响：软件结构降级; 期刊：Computer and Information Science,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4YZMXIAV,conferencePaper,2022,"Zhang, Jun; Li, Shuo; He, Pan",A Multi-State Aperiodic Inspection Strategy Optimizing Method in Software Rejuvenation,"2022 International Conference on Wearables, Sports and Lifestyle Management (WSLM)",,,10.1109/WSLM54683.2022.00014,,"To further reduce the maintenance cost in the process of software aging, a multi-state aperiodic inspection method in the field of software rejuvenation is proposed. In this method, the inspection target reliability (ITR) in different state intervals is used as a decision variable, and the decision parameters can be dynamically adjusted according to the system operating state to flexibly determine the optimal inspection period. By establishing a discrete maintenance cost model under the constraints of multi-state reliability, the optimal decision configuration parameters are solved using an improved genetic algorithm. The final experimental results show that the proposed method can significantly reduce system maintenance cost compared with existing single-state methods.",2022-01,2023-02-22 06:58:49,2024-08-14 07:51:13,,47-51,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\EPHCTE8U\Zhang 等 - 2022 - A Multi-State Aperiodic Inspection Strategy Optimizing Method in Software Rejuvenation.pdf,,老化影响：非特定的; 重生层级：非特定的; 系统类型：非特定的; 验证方法：数值分析&比较分析; 分析方式：Measurement-based（检查时间间隔）; 会议：WSLM; 模型：遗传算法; 指标：inspection target reliability (ITR)，单位时间系统维护成本,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2022 International Conference on Wearables, Sports and Lifestyle Management (WSLM)",,,,,,,,,,,,,,,
KXFR6H8I,conferencePaper,2022,"Wada, Takeru; Yamada, Hiroshi",Towards Making Unikernels Rejuvenatable,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00062,https://ieeexplore.ieee.org/document/9985202/keywords,"Software rejuvenation is a simple but powerful method for improving the availability of computer systems. Software rejuvenation faces a challenge to apply itself to a new type of application, the Unikernel which is a library OS where OS functions are linked to the target applications like libraries. Since the unikernel layer is tightly coupled to applications, rebooting the unikernel layers involves the applications' reboots, eliminating and reconstructing memory contents unrelated to the unikernels. This paper presents VampOS that allows us to rejuve-nate the only unikernellayer. VampOS performs component-level rejuvenation of the unikernel by logging interactions between the components and replaying them to restarted components while simultaneously keeping the linked applications running. We implemented a prototype of VampOS, not well-optimized, on Unikraft 0.8.0 and the experimental results show that its runtime overhead is up to 13.6x and the VampOS-linked SQLite mitigates the effects of the intentionally injected memory leak bugs without any downtime. This paper also describes the next directions for efficient rejuvenation of the unikernel-linked applications.",2022-10,2024-09-02 13:08:57,2024-10-03 13:29:08,2024-09-02 13:08:57,154-161,,,,,,,,,,,,,,,,,,IEEE Xplore,,TLDR: This paper presents VampOS that allows us to rejuve-nate the only unikernellayer and describes the next directions for efficient rejuvenation of the unikernel-linked applications.,,C:\Users\tristone\Zotero\storage\V8DJMI5A\keywords.html; C:\Users\tristone\Zotero\storage\2GARN4BS\Wada和Yamada - 2022 - Towards Making Unikernels Rejuvenatable.pdf,,老化影响：内存泄漏; 分析方式：rej; 会议：ISSREW; 验证方法：实验实证; 系统类型：Unikernels操作系统; 重生层级：Unikernel层,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
ZWZ4G5HW,conferencePaper,2022,"Fantechi, Alessandro; Gori, Gloria; Papini, Marco",Software rejuvenation and runtime reliability monitoring,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00063,,"The overall system reliability of complex Cyber Physical systems is contributed both by hardware reliability and software reliability. The former can be often increased through fault-tolerant mechanisms and architectures, while the latter can take advantage of a suitable rejuvenation policy. These characteristics call for flexible runtime safety checks of system executions that go beyond conventional runtime mon-itoring of pre-programmed safety conditions, also in order to minimize maintenance costs. Defining a satisfying monitoring model for complex systems is still a challenge. In this paper, we investigate the application of a novel approach, named Reliability Based Monitoring (RBM), that allows for a flexible runtime monitoring of software reliability in complex systems. The approach leverages a hierarchical reliability model periodically applied to runtime diagnostics data: this allows to dynamically plan rejuvenation activities that are able to prevent software failures.",2022-10,2023-01-04 07:43:28,2024-09-22 03:42:58,,162-169,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>不足：所用工具为非集成的</p> </div>; <div data-schema-version=""8""><p>概述：研究了一种基于可靠性监控的应用，其可以动态计划软件重生</p> </div>",C:\Users\tristone\Zotero\storage\75BKH54N\Fantechi 等 - 2022 - Software rejuvenation and runtime reliability monitoring.pdf; C:\Users\tristone\Zotero\storage\3AXV7QMI\9985091.html,,老化影响：非特定的; 重生层级：非特定的; 分析方式：Hybrid; 会议：ISSREW; 系统类型：CPS; 验证方法：实验实证; 模型：RBM（RBD+STPN）; 指标：Residual reliability，Probability of failure，Remaining Useful Life (RUL),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
KAYRH74F,conferencePaper,2022,"Miranda, Leonardo; Lima, Cabral; Menasché, Daniel Sadoc; Domingues, Guilherme",Sequential Performance Analysis of Systems that Age and Rejuvenate,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00061,,"Sequential performance analysis aims at evaluating performance indicators in an online fashion. The process stops in accordance with a pre-defined stopping rule, as soon as an anomaly that should produce an alarm is observed. Traditional sequential performance analysis techniques include CUSUM and sequential probability ratio test (SPRT). More recent techniques include the bucket algorithm, wherein tokens are accumulated into buckets when the system degrades, and removed when the system naturally recovers. If the number of tokens in the system reaches a threshold, an alarm is triggered. In this paper, we analyze sequential performance analysis algorithms applied to a system that is subject to rejuvenation. Among our results, we indicate how rejuvenation impacts the time until false alarms, and how to set the optimal rejuvenation rate accounting for the fact that systems can recover from transient performance degradation either naturally, as in standard sequential performance analysis models, or due to rejuvenation.",2022-10,2023-01-04 07:43:28,2024-10-12 03:23:54,,146-153,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: This paper indicates how rejuvenation impacts the time until false alarms, and how to set the optimal rejuvenation rate accounting for the fact that systems can recover from transient performance degradation either naturally, as in standard sequential performance analysis models, or due to rejuvenation.","<div data-schema-version=""8""><p>概述：分析<span style=""color: rgb(0, 0, 0)"">在包含老化、重生及自然恢复的软件系统中，</span>序列性能分析算法在异常负载下的<span style=""color: rgb(0, 0, 0)"">老化、重生及自然恢复的相互作用。</span></p> </div>; <div data-schema-version=""8""><p>优点：扩展了Huang的模型，考虑了系统自然从老化恢复和S0发生异常的可能</p> </div>",C:\Users\tristone\Zotero\storage\6MNPNBJ6\9985201.html; C:\Users\tristone\Zotero\storage\C3FTJYMD\Miranda 等 - 2022 - Sequential Performance Analysis of Systems that Age and Rejuvenate.pdf,,分析方式：Model-based; 重生层级：非特定的; 老化影响：故障率增加; 系统类型：非特定的; 验证方法：仿真模拟; 会议：ISSREW; 模型：MMPP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
MVHYPYJE,conferencePaper,2022,"Dias, Douglas; Machida, Fumio; Andrade, Ermeson",Analysis of Software Aging in a Blockchain Platform,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00064,,"Blockchain platforms have gained popularity in recent years and integrated with other digital technologies like Internet of Things (IoT) and Artificial Intelligence (AI) for multiple-business purposes. Software aging is a common issue in many long-running software systems, but little has been experienced in the context of blockchain platforms. To narrow this gap, this work aims to characterize potential software aging issues in the Cardano blockchain platform that is considered the largest cryptocurrency adopting proof-of-stake. By performing statistical analysis on the measurement data of the Cardano blockchain deployed in two environments with different configurations, we found a symptom of software aging through memory degradation that was confirmed by the Mann-Kendall test. By analyzing the running processes, we identify the cardano-node (the main process of the platform) as the process possibly responsible for such degradation.",2022-10,2023-01-04 07:43:28,2024-09-20 02:27:04,,170-177,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：验证区块链平台存在以内存消耗为主要表现的软件老化</p> </div>",C:\Users\tristone\Zotero\storage\863BKFUR\Dias 等 - 2022 - Analysis of Software Aging in a Blockchain Platform.pdf; C:\Users\tristone\Zotero\storage\5I7M8FQR\9985120.html,,老化影响：资源消耗; 会议：ISSREW; 验证方法：实验实证; 指标：内存; 分析方式：度量; 分析方法：MK、Sen's; 系统类型：区块链,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
TXEZ83U5,conferencePaper,2022,"Zhou, Yancai; Zhang, Chen; Jia, Kai; Zhao, Dongdong; Xiang, Jianwen",A Software Aging-Related Bug Prediction Framework Based on Deep Learning and Weakly Supervised Oversampling,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00066,,"Software aging refers to the phenomenon of sys-tem performance degradation and eventual failure caused by Aging-Related Bugs (ARBs). Software aging seriously affects the reliability and availability of software systems. To discover and remove ARBs, ARBs prediction is presented, and most of them only employed static code metrics to predict those buggy codes. However, static code metrics do not capture the syntactic and semantic features of the code, which are important to building accurate prediction models. To address this problem, we design a deep neural network by combining the bidirectional long short-term memory (BLSTM) and the attention mechanism to extract context-sensitive semantic features of the code. In addition, we apply a weakly supervised oversampling (WSO) method to alleviate class imbalance problems in datasets. We named our framework ABLSTM-WSO. We conduct experiments with five classifiers on two widely used open-source projects(MySQL and Linux) and use AUC, Balance, and F1-score as the evaluation metrics. Experimental results show that ABLSTM-WSO can significantly improve the ARBs prediction performance.",2022-10,2023-01-04 07:34:06,2024-10-10 12:21:01,,185-192,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：将双向长期记忆和注意力机制相结合，设计了一个深度神经网络来提取代码的上下文敏感语义特征，从而更好的预测ARB</p> </div>; <div data-schema-version=""8""><p>优点：在静态分析中考虑了代码的语义信息对老化的影响</p> </div>",C:\Users\tristone\Zotero\storage\CEBNCNXJ\9985003.html; C:\Users\tristone\Zotero\storage\NVV52D42\Zhou 等 - 2022 - A Software Aging-Related Bug Prediction Framework Based on Deep Learning and Weakly Supervised Overs.pdf,,会议：ISSREW; 验证方法：实验实证; 测试方法：静态代码预测; 模型：AVLSTM-WSO+LR，KNN，MLP，DT，NB; 系统类型：Linux，MySQL; 指标：balance，AUC，FI-score; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
9BJYEW84,conferencePaper,2022,"Carnevali, Laura; Paolieri, Marco; Reali, Riccardo; Scommegna, Leonardo; Vicario, Enrico",A Markov Regenerative Model of Software Rejuvenation Beyond the Enabling Restriction,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW55968.2022.00060,,"Software rejuvenation is a proactive maintenance technique that counteracts software aging by restarting a system or some of its components. We present a non-Markovian model of software rejuvenation where the underlying stochastic process is a Markov Regenerative Process (MRGP) beyond the enabling restriction, i.e., beyond the restriction of having at most one general (GEN, i.e., non-exponential) timer enabled in each state. The use of multiple concurrent GEN timers allows more accurate fitting of duration distributions from observed statistics (e.g., mean and variance), as well as better model expressiveness, enabling the formulation of mixed rejuvenation strategies that combine time-triggered and event-triggered rejuvenation. We leverage the functions for regenerative analysis based on stochastic state classes of the ORIS tool (through its SIRIO library) to evaluate this class of models and to select the rejuvenation period achieving an optimal tradeoff between two steady-state metrics, availability and undetected failure probability. We also show that, when G EN timers are replaced by exponential timers with the same mean (to satisfy enabling restriction), transient and steady-state are affected, resulting in inaccurate rejuvenation policies.",2022-10,2023-01-04 07:43:28,2024-08-14 08:04:41,,138-145,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：基于扩展马尔可夫再生过程模型的软件重生技术</p> </div>; <div data-schema-version=""8""><p>优点：扩展了Garg的MRSPN模型</p> </div>",C:\Users\tristone\Zotero\storage\TW4RKQA3\Carnevali 等 - 2022 - A Markov Regenerative Model of Software Rejuvenation Beyond the Enabling Restriction.pdf; C:\Users\tristone\Zotero\storage\8JJZ3KPR\9985156.html,,分析方式：Model-based; 验证方法：数值分析; 重生层级：非特定的; 系统类型：非特定的; 老化影响：性能降级; 会议：ISSREW; 模型：MRGP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
3JPUXD52,conferencePaper,2022,"Watanabe, Kengo; Machida, Fumio",Availability Analysis of a Drone System with Proactive Offloading for Software Life-extension,2022 IEEE International Conference on Omni-layer Intelligent Systems (COINS),,,10.1109/COINS54846.2022.9854966,,"Real-time image processing on a drone to recognize the real-world environment has become popular recently in many applications. However, continuous image processing on a drone may entail the degradation of performance and reliability over the long-time operation, also known as software aging. Since the degradation due to software aging progresses with the amount of the workload to process, offloading the image processing tasks to other computers can mitigate the progression of the software aging. In this paper, we propose a new software life-extension method to counteract software aging on a drone image processing system by means of proactive task offloading. To evaluate the effectiveness of the proposed method, we develop continuous-time Markov chains (CTMCs) to analyze the stochastic behaviors of the system. Through numerical experiments, we show that proactive offloading improves the steady-state availability, the mean time to down (MTTD), and the average throughput by 1.85%, 1.57x, 1.48x, respectively. We also show that the combination of offloading and software rejuvenating further improves the steady-state availability and the average throughput.",2022-08,2023-02-22 05:59:36,2024-10-05 08:52:04,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,TLDR: A new software life-extension method to counteract software aging on a drone image processing system by means of proactive task offloading is proposed and continuous-time Markov chains (CTMCs) are developed to analyze the stochastic behaviors of the system.,,C:\Users\tristone\Zotero\storage\GBTIRDPT\Watanabe和Machida - 2022 - Availability Analysis of a Drone System with Proactive Offloading for Software Life-extension.pdf,,验证方法：数值分析; 老化影响：性能降级; 模型：CTMC; 会议：COINS; 系统类型：无人机图像处理系统; 指标：稳态可用性、MTTD、平均吞吐量; 分析方式：Model-based&other; 重生策略：Offloading、Life-extension&rejuvenation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE International Conference on Omni-layer Intelligent Systems (COINS),,,,,,,,,,,,,,,
WCX84HP5,conferencePaper,2022,"Jia, Kai; Yu, Xiao; Zhang, Chen; Hu, Wenhua; Zhao, Dongdong; Xiang, Jianwen",The Impact of Software Aging and Rejuvenation on the User Experience for Android System,2022 IEEE 33rd International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE55969.2022.00049,,"In the Android system, software aging is an essential factor affecting user experience. Its occurrence will lead to poor responsiveness or crash/hang failure of the system. Recently, the strategies to schedule rejuvenation are marching toward a situation that needs to consider both usage behavioral aspects of its users (i.e., switch between active and sleep modes) and two-level software aging process (i.e., Operating System (OS) and Application Software (AS)), because rejuvenating the OS or AS during active time slot contributes to terrible user experience. To be able to achieve higher user experience and lower user interference, in this paper, we present to employ the Continuous Time Markov Chain (CTMC) model to study the impact of software aging and rejuvenation on user experience on two different rejuvenation strategies: condition-based and time-based rejuvenations. In contrast to the existing works, our models capture the interactions between usage behavioral aspects of users and two-level aging and rejuvenation. We then define three metrics to evaluate the user experience, including User-perceived (1) Fluency (UF), (2) Failure Probability (UFP), and (3) Availability (UA). The numerical analysis has the following noticed conclusions. The optimal value of UF yielded by condition-based rejuvenation reaches a 3.486% improvement over that of time-based. Therefore, the former is an appealing rejuvenation solution. Moreover, compared with single-level (OS and AS) rejuvenation models, two-level rejuvenation indeed improves the user experience. Concretely, the values of three metrics achieve 80.20% and 14.45%,83.39% and 98.45%, 0.004% and 0.048% improvements, respectively.",2022-10,2023-02-22 06:57:01,2024-10-12 06:09:05,,435-445,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2332-6549 CCF: B TLDR: The Continuous Time Markov Chain (CTMC) model is employed to study the impact of software aging and rejuvenation on user experience on two different rejuvenation strategies: condition-based and time-based rejuvenations.,,C:\Users\tristone\Zotero\storage\XHBIGSIG\9978973.html; C:\Users\tristone\Zotero\storage\IBVJW5AX\Jia 等 - 2022 - The Impact of Software Aging and Rejuvenation on the User Experience for Android System.pdf,,"分析方式：Model-based; 会议：ISSRE; 老化影响：非特定的; 模型：CTMC+用户行为模型; 系统类型：Android; 验证方法：数值分析; 指标：Fluency，Fluency (UF), Failure Probability (UFP), Availability (UA); 重生策略：two-level rejuvenation+用户行为; 重生层级：OS，APP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE 33rd International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
R797WH33,conferencePaper,2022,"Liu, Zhihao; Zheng, Yang; Du, Xiaoting; Hu, Zheng; Ding, Wenjie; Miao, Yanming; Zheng, Zheng",Taxonomy of Aging-related Bugs in Deep Learning Libraries,2022 IEEE 33rd International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE55969.2022.00048,,"Deep learning libraries are the cornerstone of deep learning systems, and millions of deep learning applications are built on top of deep learning libraries. Due to long-term continuous running, many numerical operations and heavy dependence on resources, deep learning libraries are prone to the effects of software aging. Aging in deep learning libraries can threaten the reliability of deep learning systems and make training and application of deep learning more time-consuming and expensive, causing users to lose confidence in it. In this work, we manually screened 138 bug reports containing aging-related bugs from a total of 13,694 bug reports in four popular deep learning libraries (i.e., TensorFlow, MXNET, PaddlePaddle and MindSpore). We analyzed the information in these 138 bug reports to answer three questions: What categories of aging-related bugs exist in deep learning libraries? What is the distribution of different categories of aging-related bugs in deep learning libraries? Which deep learning phases are most susceptible to software aging? Finally, we conducted a fine-grained taxonomy of aging-related bugs, including four levels and seventeen categories, and obtained eight important findings with corresponding practical implications.",2022-10,2023-01-04 02:12:53,2024-10-05 03:46:39,,423-434,,,,,,,,,,,,,,,,,,IEEE Xplore,,"ISSN: 2332-6549 CCF: B TLDR: This work manually screened 138 bug reports containing aging-related bugs from a total of 13,694 bug reports in four popular deep learning libraries, conducted a fine-grained taxonomy of aging- related bugs, including four levels and seventeen categories, and obtained eight important findings with corresponding practical implications.","<div data-schema-version=""8""><p>概述：<code>通过对深度学习库缺陷的实证研究分析深度学习库中的老化相关缺陷类别和特征</code></p> </div>; <div data-schema-version=""8""><p>优点：根据深度学习库的特点将缺陷分为了17各类别，并分析了深度学习生命周期五个阶段中哪个阶段更容易出现老化相关的失败</p> </div>",C:\Users\tristone\Zotero\storage\FDELG52Q\9978954.html; C:\Users\tristone\Zotero\storage\SCDPDH3E\Liu 等 - 2022 - Taxonomy of Aging-related Bugs in Deep Learning Libraries.pdf,,会议：ISSRE; 老化影响：非特定的; 验证方法：逻辑推理; 系统类型：深度学习库; 分析方式：分析bug报告,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2022 IEEE 33rd International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
BW82YFTC,conferencePaper,2022,"Tan, Xueyong; Liu, Jing",EWDLL: Software Aging State Identification based on LightGBM-LR Hybrid Model,"2022 IEEE 22nd International Conference on Software Quality, Reliability and Security (QRS)",,,10.1109/QRS57517.2022.00117,https://ieeexplore.ieee.org/document/10062368/?arnumber=10062368,"Android systems are prone to software aging due to the accumulation of numerical errors and storage-related bugs during long-term operation, resulting in gradual performance degradation and sudden system hang-ups. Thus, it is very critical to accurately identify the aging state for improving the running reliability of Android systems. In this paper, we propose a novel software aging state identification method, named EWDLL. It first introduces the exponential Weibull distribution to simulate the aging state transfer process of the Android system, then it uses Fuzzy Analytical Hierarchy Process (FAHP) to weight the model parameters and resource utilization parameters. Finally, the weighted dataset is fed into the LightGBM-LR model to identify the software state. The experimental results show that our EWDLL method performs better in identifying the software aging state for Android system, i.e., it is 0.86% to 1.09% higher in identification accuracy than the pure LightGBM-LR model, about 10.00% and 4.54% to 4.95% higher than the traditional models KNN and RF, and 1.97% to 3.09% higher than single LightGBM model. Compared with the LR model, it has a maximum accuracy improvement of about 33.29% to 35.64%.",2022-12,2024-07-23 08:53:18,2024-08-14 07:55:26,2024-07-23 08:53:18,1146-1158,,,,,,EWDLL,,,,,,,,,,,,IEEE Xplore,,ISSN: 2693-9177 CCF: C,"<div data-schema-version=""8""><p>通过整合EW分布、FAHP和LightGBM-LR模型，有效提高了Android系统软件老化状态的识别准确性</p> </div>",C:\Users\tristone\Zotero\storage\LTME2A5N\10062368.html; C:\Users\tristone\Zotero\storage\NYUF3V6D\Tan和Liu - 2022 - EWDLL Software Aging State Identification based on LightGBM-LR Hybrid Model.pdf,,系统类型：Android; 分析方式：Hybrid; 会议：QRS; 验证方法：实验实证&比较分析&对比分析; 老化影响：内存消耗，CPU利用率上升，性能降级; 模型：EW分布，LightGBM; 指标：内存，CPU，帧绘制指标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2022 IEEE 22nd International Conference on Software Quality, Reliability and Security (QRS)",,,,,,,,,,,,,,,
2T786WLD,conferencePaper,2022,"Pietrantuono, Roberto; Cotroneo, Domenico; Andrade, Ermeson; Machida, Fumio",An Empirical Study on Software Aging of Long-Running Object Detection Algorithms,"2022 IEEE 22nd International Conference on Software Quality, Reliability and Security (QRS)",,,10.1109/QRS57517.2022.00112,https://ieeexplore.ieee.org/document/10062425,"Efficient and effective object detection is a key problem in Computer Vision. Numerous object detection algorithms have been developed, whose aim is to achieve two conflicting goals, namely accuracy and efficiency, while being executed in real-time with high robustness. Many of these algorithms must run for an extended period of time, i.e., in video surveillance or in self-driving cars – a working condition that make them subject to the risk of software aging.In this work, we focus on evaluating several object detection algorithms to understand if and to what extent they are affected by software aging. A measurement-based aging approach was adopted, with a series of long-running tests and subsequent data analysis. The results report significant trends of performance degradation, sometimes leading to aging-related failures, as well as memory consumption trends, which turned out to be the main issue across all the experiments.",2022-12,2024-07-23 08:32:22,2024-08-16 02:47:22,2024-07-23 08:32:22,1091-1102,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2693-9177 CCF: C,"<div data-schema-version=""8""><p>评估几种目标检测算法在长时间运行中是否会受到软件老化的影响，以及影响的程度</p> </div>",C:\Users\tristone\Zotero\storage\7GDGHRDE\10062425.html; C:\Users\tristone\Zotero\storage\796W6TDA\Pietrantuono 等 - 2022 - An Empirical Study on Software Aging of Long-Running Object Detection Algorithms.pdf,,会议：QRS; 验证方法：实验实证; 分析方式：现象分析&度量; 老化影响：性能降级&资源消耗; 模型：MK，Sen's; 系统类型：深度学习系统（目标检测软件）; 指标：处理帧数，内存,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2022 IEEE 22nd International Conference on Software Quality, Reliability and Security (QRS)",,,,,,,,,,,,,,,
L23SZMWV,journalArticle,2021,"Zheng, Junjun; Okamura, Hiroyuki; Dohi, Tadashi",Availability Analysis of Software Systems with Rejuvenation and Checkpointing,Mathematics,,2227-7390,10.3390/math9080846,https://www.mdpi.com/2227-7390/9/8/846,"In software reliability engineering, software-rejuvenation and -checkpointing techniques are widely used for enhancing system reliability and strengthening data protection. In this paper, a stochastic framework composed of a composite stochastic Petri reward net and its resulting non-Markovian availability model is presented to capture the dynamic behavior of an operational software system in which time-based software rejuvenation and checkpointing are both aperiodically conducted. In particular, apart from the software-aging problem that may cause the system to fail, human-error factors (i.e., a system operator’s misoperations) during checkpointing are also considered. To solve the stationary solution of the non-Markovian availability model, which is derived on the basis of the reachability graph of stochastic Petri reward nets and is actually not one of the trivial stochastic models such as the semi-Markov process and the Markov regenerative process, the phase-expansion approach is considered. In numerical experiments, we illustrate steady-state system availability and find optimal software-rejuvenation policies that maximize steady-state system availability. The effects of human-error factors on both steady-state system availability and the optimal software-rejuvenation trigger timing are also evaluated. Numerical results showed that human errors during checkpointing both decreased system availability and brought a significant effect on the optimal rejuvenation-trigger timing, so that it should not be overlooked during system modeling.",2021-01,2024-07-29 07:23:37,2024-10-03 03:19:15,2024-07-29 07:23:37,846,,8.0,9.0,,Mathematics,,,,,,,,en,http://creativecommons.org/licenses/by/3.0/,,,,www.mdpi.com,,Number: 8 Publisher: Multidisciplinary Digital Publishing Institute JCR分区: Q1 中科院分区升级版: 数学3区 影响因子: 2.3 5年影响因子: 2.2 南农高质量: A,"<div data-schema-version=""8""><p>建立一个宏观系统模型，包含复合随机奖励网（SRN）及其非马尔可夫状态转移图，以模拟系统的动态行为。通过数值实验，本文评估了系统的稳态可用性，确定了最大化稳态系统可用性的最优软件再生策略，并量化了人为错误因素的影响。</p> </div>",C:\Users\tristone\Zotero\storage\4YY3CK85\Zheng 等 - 2021 - Availability Analysis of Software Systems with Rejuvenation and Checkpointing.pdf,,分析方式：Model-based; 验证方法：数值分析; 老化影响：崩溃/挂起故障; 系统类型：非特定的; 模型：SRN，相图扩展,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3HC74TNP,journalArticle,2021,"Khleel, Nasraldeen Alnor Adam; Nehéz, K.",Comprehensive Study on Machine Learning Techniques for Software Bug Prediction,International Journal of Advanced Computer Science and Applications,,,10.14569/ijacsa.2021.0120884,,"The results of this study demonstrated that the proposed models performed better than other models that used the same data sets and show that machine learning algorithms can be used effectively for prediction of bugs. Software bugs are defects or faults in computer programs or systems that cause incorrect or unexpected operations. These negatively affect software quality, reliability, and maintenance cost; therefore many researchers have already built and developed several models for software bug prediction. Till now, a few works have been done which used machine learning techniques for software bug prediction. The aim of this paper is to present comprehensive study on machine learning techniques that were successfully used to predict software bug. Paper also presents a software bug prediction model based on supervised machine learning algorithms are Decision Tree (DT), Naïve Bayes (NB), Random Forest (RF) and Logistic Regression (LR) on four datasets. We compared the results of our proposed models with those of the other studies. The results of this study demonstrated that our proposed models performed better than other models that used the same data sets. The evaluation process and the results of the study show that machine learning algorithms can be used effectively for prediction of bugs. Keywords—Static code analysis; software bug prediction; software metrics; machine learning techniques",2021,2022-10-13 12:40:09,2024-10-12 06:21:25,,,,,,,International Journal of Advanced Computer Science and Applications,,,,,,,,en-US,,,,,Semantic Scholar,,影响因子: 0.7 5年影响因子: 0.8 EI: 是 TLDR: The results of this study demonstrated that the proposed models performed better than other models that used the same data sets and show that machine learning algorithms can be used effectively for prediction of bugs.,"<div data-schema-version=""8""><p>概述：将一种新的TLAP方法应用于ARB的跨项目预测中</p> </div>",C:\Users\tristone\Zotero\storage\TIPNM22P\Khleel和Nehéz - 2021 - Comprehensive Study on Machine Learning Techniques for Software Bug Prediction.pdf; ,https://www.semanticscholar.org/paper/Comprehensive-Study-on-Machine-Learning-Techniques-Khleel-Neh%C3%A9z/b9c71088cd490c66e47025f0b2d52dfb98285ae2,测试方法：静态代码预测; 分析方式：ARB prediction; 模型：DT，NB，RF，LR; 期刊：IJACSA; 系统类型：Linux，MySQL; 验证方法：实验实证&比较分析; 指标：F1-score，Accuracy，Recall，Precision,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDBL84I8,journalArticle,2021,"Chouhan, S. S.; Rathore, S.",Generative Adversarial Networks-Based Imbalance Learning in Software Aging-Related Bug Prediction,IEEE Transactions on Reliability,,,10.1109/TR.2021.3052510,,"An oversampling approach, generative adversarial networks-based synthetic data generation-based ARBs prediction models and experimental results showed that the presented approach led to the improved performance of prediction models for the ARBs Prediction as compared to the other state-of-the-art models. Software aging refers to a problem of performance decay in the software systems, which are running for a long period. The primary cause of this phenomenon is the accumulation of run-time errors in the software, which are also known as aging-related bugs (ARBs). Many efforts have been reported earlier to predict the origin of ARBs in the software so that these bugs can be identified and fixed during testing. Imbalanced dataset, where the representation of ARBs patterns is very less as compared to the representation of the non-ARBs pattern significantly hinders the performance of the ARBs prediction models. Therefore, in this article, we present an oversampling approach, generative adversarial networks-based synthetic data generation-based ARBs prediction models. The approach uses generative adversarial networks to generate synthetic samples for the ARBs patterns in the given datasets implicitly and build the prediction models on the processed datasets. To validate the performance of the presented approach, we perform an experimental study for the seven ARBs datasets collected from the public repository and use various performance measures to evaluate the results. The experimental results showed that the presented approach led to the improved performance of prediction models for the ARBs prediction as compared to the other state-of-the-art models.",2021,2022-10-13 12:40:09,2024-10-10 12:20:11,,,,,,,IEEE Trans. Rel.,,,,,,,,en-US,,,,,5.883,2.0,"JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C TLDR: An oversampling approach, generative adversarial networks-based synthetic data generation-based ARBs prediction models and experimental results showed that the presented approach led to the improved performance of prediction models for the ARBs Prediction as compared to the other state-of-the-art models.","<div data-schema-version=""8""><p>备注：静态分析度量指标预测ARB位置</p> </div>; <div data-schema-version=""8""><p>不足：研究结果仅限于文章中考虑的系统</p> </div>; <div data-schema-version=""8""><p>概述：基于生成对抗网络的合成数据ARB预测模型</p> </div>; <div data-schema-version=""8""><p>优点：进行ARB预测的指标及数据集都相当充分</p> </div>",C:\Users\tristone\Zotero\storage\EMVU6YUP\Chouhan和Rathore - 2021 - Generative Adversarial Networks-Based Imbalance Learning in Software Aging-Related Bug Prediction.pdf; ,https://www.semanticscholar.org/paper/Generative-Adversarial-Networks-Based-Imbalance-in-Chouhan-Rathore/cd671333d39700fba4d0e0945117775779cae94d,验证方法：实验实证&比较分析; 老化影响：非特定的; 期刊：TR; 测试方法：静态代码预测; 系统类型：Linux，MySQL; 模型：GANSYN+KNN，RF，LR，NB，SVM，Decision Tree; 指标：程序大小相关度量、Cyclomatic复杂性、Halstead度量和老化相关度量等82个源代码和复杂性度量；Accuracy，Precision，recall，MCC，G-mean，AUC，F1-score等; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X2KGFNM4,journalArticle,2021,"Du, Xiaoting; Zheng, Zheng; Xiao, Guanping; Zhou, Zenghui; Trivedi, Kishor S.",DeepSIM: Deep Semantic Information-Based Automatic Mandelbug Classification,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2021.3110096,,"Understanding and predicting types of bugs are of practical importance for developers to improve the testing efficiency and take appropriate steps to address bugs in software releases. However, due to the complex conditions under which faults manifest and the complexity of the classification rules, the automatic classification of Mandelbugs is a difficult task. In this article, we present a deep semantic information-based Mandelbug classification method that combines a semantic model with a deep learning classifier and makes use of both labeled and unlabeled bug reports. By training the bug report semantic model on millions of bug reports, each word in the text of a bug report is represented as a word embedding that preserves the semantic relationship among the words. Then, a convolutional neural network model is designed to capture the high-level features of bug reports to obtain a more accurate classification. Moreover, the effects of the semantic model size and domain on the classification results are investigated, and the quality of word embeddings is evaluated by analyzing several important parameters.",2021,2022-03-09 08:06:59,2024-09-19 11:51:59,,1-15,,,,,IEEE Trans. Rel.,DeepSIM,,,,,,,en-US,,,,,5.883,2.0,Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C TLDR: A deep semantic information-based Mandelbug classification method that combines a semantic model with a deep learning classifier and makes use of both labeled and unlabeled bug reports is presented.,"<div data-schema-version=""8""><p>概述：<code>基于word2vec和CNN的缺陷报告自动分类</code></p> </div>",C:\Users\tristone\Zotero\storage\W5RA2V3L\Du 等 - 2021 - DeepSIM Deep Semantic Information-Based Automatic Mandelbug Classification.pdf; C:\Users\tristone\Zotero\storage\CKEHYAXZ\9551693.html,,验证方法：实验实证&比较分析; 老化影响：非特定的; 期刊：TR; 分析方式：Classification; 指标：F度量、准确性; 模型：Word2vec+CNN; 系统类型：Linux、MySQL、AXIS、HTTPD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VTGM2E4W,journalArticle,2021,"Vizarreta, Petra; Sieber, Christian; Blenk, Andreas; Van Bemten, Amaury; Ramachandra, Vinod; Kellerer, Wolfgang; Mas-Machuca, Carmen; Trivedi, Kishor",ARES: A Framework for Management of Aging and Rejuvenation in Softwarized Networks,IEEE Transactions on Network and Service Management,,1932-4537,10.1109/TNSM.2020.3030589,,"The recent trend of network softwarization suggests a radical shift in the implementation of traditional network intelligence. In Software Defined Networking (SDN), for instance, the control plane functions of forwarding devices are outsourced to the controller. Softwarized network components are expected to provide uninterrupted service during long periods of time, which makes them prone to the effects of software aging, a phenomena that has been observed in operational software systems where the failure rate increases or the performance of the software degrades with the elapsed time since the last restart. The effects of software aging in operational networks are typically mitigated by software rejuvenation, i.e., planned restarts cleaning the internal system state in order to prevent or postpone aging-related failures. This article presents ARES, a three-step methodological framework for the management of the effects of software aging in softwarized networks, applied to the case study of open source SDN orchestration platforms. Using ARES, we demonstrate that software aging is a systematic problem that cannot be neglected in network orchestration systems. It stems not only from aging-related bugs and natural aging due to fragmentation, but also from design choices, e.g., when implementing distributed systems. Measurements for Open Network Operating System (ONOS) and OpenDaylight (ODL) demonstrate how “simple” and common networking tasks let network performance degrade rapidly and even lead to crashes: for instance, adding and removing 300 intents per second in ONOS significantly increases the response time by 50% per day and depletes the memory at the rate of 18GB per day. Moreover, we demonstrate a first rejuvenation approach that can mitigate the effects of aging in ONOS.",2021-06,2023-01-10 09:06:53,2024-09-20 07:27:54,,1389-1400,,2.0,18.0,,IEEE Trans. Netw. Service Manag.,ARES,,,,,,,,,,,,4.758,2.0,"Conference Name: IEEE Transactions on Network and Service Management JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 4.7 5年影响因子: 4.6 EI: 是 CCF: C TLDR: ARES, a three-step methodological framework for the management of the effects of software aging in softwarized networks, is applied to the case study of open source SDN orchestration platforms and demonstrated that software aging is a systematic problem that cannot be neglected in network orchestration systems.","<div data-schema-version=""8""><p>概述：介绍了<span style=""color: rgb(0, 0, 0)"">一种用于管理软件定义网络中软件老化影响的三步方法框架——ARES</span></p> </div>",C:\Users\tristone\Zotero\storage\JNSEFS23\9222270.html; C:\Users\tristone\Zotero\storage\DXQQA6VC\Vizarreta 等 - 2021 - ARES A Framework for Management of Aging and Rejuvenation in Softwarized Networks.pdf; C:\Users\tristone\Zotero\storage\QD4Q5WVY\Vizarreta 等 - 2021 - ARES A Framework for Management of Aging and Rejuvenation in Softwarized Networks.pdf,,验证方法：实验实证; 老化影响：性能降级，资源泄露; 期刊：TNSM; 系统类型：SDN; 指标：CPU利用率，内存利用率; 重生层级：docker容器; 分析方式：Measurement-based（阈值）&bug report&measure,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMZT6DXE,journalArticle,2021,"Padhy, Neelamadhab; Panigrahi, Rasmita; Neeraja, K.","Threshold estimation from software metrics by using evolutionary techniques and its proposed algorithms, models",Evolutionary Intelligence,,1864-5917,10.1007/s12065-019-00201-0,https://doi.org/10.1007/s12065-019-00201-0,"The software metrics play the important role in the software industry. As the software industry growing in size and complexity enhanced support is mandatory for computing and managing the software quality. Quality measurement is one of the key features of the manager in the software industry; where threshold plays the crucial role. Software measurement is necessary by means for evaluating different quality attributes and characteristics, such as size, complexity, maintainability, and usability. Instead of that effective and efficient software system is straightforward dependent on the meaning of suitable thresholds. The objective of this paper is to estimate the threshold values from software metrics by using novel evolutionary intelligence techniques. The threshold and aging software design optimization algorithms and models to prevent software aging by using machine learning (evolutionary algorithms). Apart from the above-mentioned techniques, this paper also proposed a novel threshold estimation, aging, and survivability aware (sensitive) reusability optimization model of an object-oriented software system. To expand firmness, aging and survivability aware (sensitive) optimization threshold scheme aging prediction and software rejuvenation model and algorithms proposed.",2021-06-01,2022-01-22 06:52:49,2024-10-12 06:22:55,2022-01-22 06:52:49,315-329,,2.0,14.0,,Evolutionary Intelligence,,,,,,,,en-US,,,,,,,影响因子: 2.3 5年影响因子: 2.4 EI: 是 TLDR: The objective of this paper is to estimate the threshold values from software metrics by using novel evolutionary intelligence techniques to prevent software aging by using machine learning (evolutionary algorithms).,"<div data-schema-version=""8""><p>概述：基于进化算法的软件老化预测与重生模型的阈值估计方法</p> </div>",C:\Users\tristone\Zotero\storage\SQI8YKTE\Padhy 等 - 2021 - Threshold estimation from software metrics by using evolutionary techniques and its proposed algorit.pdf,,分析方式：度量; 模型：ASROM; 期刊：EI; 系统类型：面向对象的软件; 验证方法：实验实证,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PLWC9IPC,conferencePaper,2021,"Araujo, Jean; Melo, Carlos; Oliveira, Felipe; Pereira, Paulo; Matos, Rubens",A Software Maintenance Methodology: An Approach Applied to Software Aging,2021 IEEE International Systems Conference (SysCon),,,10.1109/SysCon48628.2021.9447082,,"The increasing use of computational systems has highlighted concerns about attributes that may influence the quality of service, such as performance, availability, reliability, and maintenance capacity. Failures in the software development process may impact these attributes. Flawed code and overall software misdesign may cause internal errors, leading to system malfunction. Some errors might be identified and fixed during the software testing process. However, other errors may manifest only during the production stage. This is the case of the software aging phenomenon, which is related to the progressive degradation that a software performance or reliability suffers during its operational life. This paper proposes a methodology for software maintenance that is tailored to identify, correct, and mitigate the software aging effects. If the source code can be modified and a new version deployed with minimal impact, thus data from aging detection is used for corrective maintenance, i.e., for fixing the bug that causes the aging effects. If the software cannot be fixed nor its version updated without long system interruption or other bad consequences, then our approach can mitigate the aging effects, in a preventive maintenance to avoid service outages. The proposed methodology is validated through both Stochastic Petri Net (SPN) models and experiments in a controlled environment. The model evaluation considering a hybrid maintenance routine (preventive and corrective) yielded an availability of 99.82%, representing an annual downtime of 15.9 hours. By contrast, the baseline scenario containing only reactive maintenance (i.e., repairing only after failure) had more than 1342 hours of annual downtime- 80 times higher than the proposed approach.",2021-04,2022-01-22 06:51:55,2024-08-14 07:51:35,,1-8,,,,,,A Software Maintenance Methodology,,,,,,,en-US,,,,,,,ISSN: 2472-9647,"<div data-schema-version=""8""><p>不足：？</p> </div>; <div data-schema-version=""8""><p>概述：提出了一种结合预防性和反应性维护的老化软件维护方案</p> </div>; <div data-schema-version=""8""><p>优点：采用了应用程序和系统状态的混合维护策略，在缓解老化影响中有显著改善</p> </div>",C:\Users\tristone\Zotero\storage\P6BND38T\Araujo 等 - 2021 - A Software Maintenance Methodology An Approach Applied to Software Aging.pdf; C:\Users\tristone\Zotero\storage\7URDHTEB\9447082.html,,分析方式：Model-based; 重生层级：非特定的; 会议：SysCon; 老化影响：崩溃/挂起故障; 模型：SPN; 系统类型：非特定的; 验证方法：数值分析&实验实证; 指标：downtime cost,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Systems Conference (SysCon),,,,,,,,,,,,,,,
8IEFE5DA,conferencePaper,2021,"Liang, Mengting; Li, Dimeng; Xu, Bin; Zhao, Dongdong; Yu, Xiao; Xiang, Jianwen",Within-Project Software Aging Defect Prediction Based on Active Learning,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00037,https://ieeexplore.ieee.org/document/9700247,"Long-running software systems tend to exhibit performance degradation and increase failure rate, and the phenomenon is known as software aging. The bugs that cause the aging phenomenon are called Aging-Related Bugs (ARBs), and may bring serious economic loss or even endanger human security. To discover and remove ARBs, ARBs prediction is presented. But ARBs prediction model often needs a large number of training data in order to train a high performance classification model. In practice, the labeled data are rare in many cases. In addition, it is difficult to label all samples manually. Furthermore, there is a serious class imbalance problem in ARBs datasets. In order to address the two problems, we propose a framework named QUIRE-HUE. On the one hand, we use a approach named Active Learning by Querying Informative and Representative Examples (QUIRE) to select a few informative and representative samples to label for training set, which can reduce the cost of labeling and get a high performance classification model. On the other hand, we apply a Hashing-Based Undersampling Ensemble (HUE) by constructing diversified training subspaces for undersampling to alleviate class imbalance problem. A set of experiments are performed on two large open-source projects (MySQL, Linux) with six different machine learning classifiers. We use Balance and AUC as the evaluation metrics. Experimental results indicate that QUIRE-HUE achieves encouraging results. Average AUC and Balance are 0.769 and 0.812 respectively on MySQL dataset, 0.772 and 0.828 respectively on Linux dataset, which significantly outperforms all baseline methods.",2021-10,2024-07-23 08:55:10,2024-10-10 12:20:49,2024-07-23 08:55:10,1-8,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>基于主动学习选择少量信息量大且具有代表性的样本进行标注，散列下采样集成缓解类别不平衡问题，进行老化缺陷预测</p> </div>",C:\Users\tristone\Zotero\storage\RMGDRI6U\Liang 等 - 2021 - Within-Project Software Aging Defect Prediction Based on Active Learning.pdf,,"验证方法：实验实证&对比分析; 会议：ISSREW; 系统类型：Linux，MySQL; 模型：QUIRE-HUE; 判定指标：AUC, Balance; 指标：程序大小相关度量、复杂性度量和老化相关度量; 分析方式：ARB prediction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
63FTI2TJ,conferencePaper,2021,"Beierlieb, Lukas; Avritzer, Alberto; Iffländer, Lukas; Antunes, Nuno; Milenkoski, Aleksandar; Kounev, Samuel",Software Testing Strategies for Detecting Hypercall Handlers' Aging-related Bugs,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00043,,"With the continuing rise of cloud technology hypervisors play a vital role in the performance and reliability of current services. As long-running applications, they are susceptible to software aging. Hypervisors offer so-called hypercall interfaces for communication with the hosted virtual machines. These interfaces require thorough testing to ensure their long-term reliability. Existing research deals with the aging properties of hypervisors in general without considering the hypercalls. In this work, we share our experience that we collected during trying to understand hypercalls and their parameters and use them to construct test cases for hypervisor aging of Microsoft Hyper-V. We present a bug that we detected, which was reported and acknowledged by Microsoft. Further, based on our manual binary code analysis, we propose the idea of automating the analysis process to detect valid parameter ranges and execution conditions of hypercalls without manual effort.",2021-10,2023-02-22 06:43:36,2024-09-19 12:12:51,,48-55,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: This work shares the experience that is collected during trying to understand hypercalls and their parameters and uses them to construct test cases for hypervisor aging of Microsoft Hyper-V, and proposes the idea of automating the analysis process to detect valid parameter ranges and execution conditions of hyperc calls without manual effort.",,,,老化影响：非特定的; 会议：ISSREW; 验证方法：实验实证; 分析方式：testing; 测试方法：构建测试用例; 系统：虚拟化系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
HFWA8V6H,conferencePaper,2021,"Zheng, Junjun; Okamura, Hiroyuki; Dohi, Tadashi",Sensitivity Analysis of Software Rejuvenation Model with Markov Regenerative Process,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00038,,"This paper considers the parametric sensitivity of a software rejuvenation model for transaction systems whose system behavior is described by a quasi birth-and-death (QBD) process with Markovian arrivals, and the software rejuvenation model is represented by a Markov regenerative process (MRGP). The stationary analysis of the MRGP model is based on the embedding Markov chain (EMC) approach. Then the sensitivities of the stationary solution and the performance criteria of interest, i.e., the loss probability of transactions, with respect to all model parameters, are formulated. Finally, a numerical experiment was conducted to illustrate the critical parameters for a transaction system with software rejuvenation. The numerical results showed that the proposed approach effectively revealed critical model parameters and provided significant insights into performance optimization and parameter estimation.",2021-10,2023-02-22 06:50:56,2024-09-19 11:49:42,,9-16,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B TLDR: The numerical results showed that the proposed approach effectively revealed critical model parameters and provided significant insights into performance optimization and parameter estimation.,,,,分析方式：其他,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
XRQESHPS,conferencePaper,2021,"Flora, José; Gonçalves, Paulo; Teixeira, Miguel; Antunes, Nuno",My Services Got Old! Can Kubernetes Handle the Aging of Microservices?,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00042,https://ieeexplore.ieee.org/stampPDF/getPDF.jsp?tp=&arnumber=9700336&ref=aHR0cHM6Ly9pZWVleHBsb3JlLmllZWUub3JnL2RvY3VtZW50Lzk3MDAzMzY=,"The exploding popularity of microservice based applications is taking companies to adopt them along with cloud services to support them. Containers are the common deployment infrastructures that currently serve millions of customers daily, being managed using orchestration platforms that monitor, manage, and automate most of the work. However, there are multiple concerns with the claims put forward by the developers of such tools. In this paper, we study the effects of aging in microservices and the utilization of faults to accelerate aging effects while evaluating the capacity of Kubernetes to detect microservice aging. We consider three operation scenarios for a representative microservice-based system through the utilization of stress testing and fault injection as a manner to potentiate aging in the services composing the system to evaluate the capacity of Kubernetes mechanisms to detect it. The results demonstrate that even though some services tend to accumulate aging effects, with increasing resource consumption, Kubernetes does not detect them nor acts on them, which indicates that the probe mechanisms may be insufficient for aging scenarios. This factor may indicate the necessity for more effective mechanisms, capable of detecting aging early on and act on it in a more proactive manner without requiring the services to become unresponsive.",2021-10,2024-09-02 13:16:07,2024-09-02 13:46:15,2024-09-02 13:16:06,40-47,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\JD9LFLSA\Flora 等 - 2021 - My Services Got Old! Can Kubernetes Handle the Aging of Microservices.pdf,,老化影响：内存泄漏; 会议：ISSREW; 验证方法：实验实证; 分析方式：testing; 测试方法：故障注入+压力测试; 系统类型：微服务架构Kubernetes,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
BF98EGK9,conferencePaper,2021,"Andrade, Ermeson; Machida, Fumio; Pietrantuono, Roberto; Cotroneo, Domenico",Memory Degradation Analysis in Private and Public Cloud Environments,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00041,https://ieeexplore.ieee.org/document/9700176/?arnumber=9700176,"Memory degradation trends have been observed in many continuously running software systems. Applications running on cloud computing can also suffer from such memory degradation that may cause severe performance degradation or even experience a system failure. Therefore, it is essential to monitor such degradation trends and find the potential causes to provide reliable application services on cloud computing. In this paper, we consider both private and public cloud environments for deploying an image classification system and experimentally investigate the memory degradation that appeared in these environments. The degradation trends in the available memory statistics are confirmed by the Mann-Kendall test in both cloud environments. We apply causal structure discovery methods to process-level memory statistics to identify the causality of the observed memory degradations. Our analytical results identify the suspicious processes potentially leading to memory degradations in public and private cloud environments.",2021-10,2024-09-02 13:13:35,2024-09-02 14:01:02,2024-09-02 13:16:57,33-39,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\XMHU5RZH\Andrade 等 - 2021 - Memory Degradation Analysis in Private and Public Cloud Environments.pdf; C:\Users\tristone\Zotero\storage\64YKJVJ4\9700176.html,,会议：ISSREW; 验证方法：实验实证; 指标：内存; 分析方式：度量; 分析方法：MK、Sen's; 实验时长：72H; 老化影响：性能降级&内存退化; 系统类型：云环境图像分类,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
Z6RRGIQ9,conferencePaper,2021,"Parri, Jacopo; Sampietro, Samuele; Scommegna, Leonardo; Vicario, Enrico",Evaluation of software aging in component-based Web Applications subject to soft errors over time,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00040,,"Modern Web Applications rely on architectures usually designed with modular software components whose be-haviour is shaped over fundamental principles and characteristics of the HTTP protocol. Dependency Injection frameworks support designers and developers in the automated management of components lifecycle, binding them to predefined scopes, thus delegating to an outer and independent participant the responsibility of creation, destruction and inter-dependencies definition of runtime instances. In this way, different scopes configurations implicitly act as different software micro-rejuvenation policies, emphasising the importance of choices in the assignment of component scopes; while supporting the stateful behaviour in data-retention mechanism, wider scopes may majorly expose inmemory components to software aging processes. We report a practical experience illustrating how the memory maintained in the business logic of a Web Application may give space to aging processes affecting the runtime behaviour of a stateful web application, and we show how this threat is contrasted by micro-rejuvenation at component level implemented by the container under different assignment strategies for components scopes. To this end, we propose an accelerated testing approach relying on a fault injection process that executes an event-driven simulation of arising soft errors over time. Experimentation on an exemplary web application implemented on the stack of Java Enterprise Edition show how manifestation, correction, and propagation of errors are conditioned by different scopes assigned to components by the software developer.",2021-10,2023-02-22 06:00:39,2024-08-14 07:55:19,,25-32,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,,C:\Users\tristone\Zotero\storage\4B8G5B9H\9700290.html; C:\Users\tristone\Zotero\storage\JYCWSLWQ\Parri 等 - 2021 - Evaluation of software aging in component-based Web Applications subject to soft errors over time.pdf,,系统类型：服务器; 会议：ISSREW; 验证方法：实验实证; 测试方法：故障注入（组件级）+加速寿命测试; 分析方式：testing,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
GLW5QKWT,conferencePaper,2021,"Czekster, Ricardo M.; Avritzer, Alberto; Menasché, Daniel Sadoc",Aging and Rejuvenation Models of Load Changing Attacks in Micro-Grids,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW53611.2021.00039,https://ieeexplore.ieee.org/document/9700323/keywords#keywords,"Recent cyber-attacks in critical infrastructures have highlighted the importance of investigating how to improve Smart-Grids (SG) resiliency. In the future, it is envisioned that grid connected micro-grids would have the ability of operating in 'islanded mode’ in the event of a grid-level failure. In this work, we propose a method for unfolding aging and rejuvenation models into their sequential counterparts to enable the computation of transient state probabilities in the proposed models. We have applied our methodology to one specific security attack scenario and four large campus micro-grids case studies. We have shown how to convert the software aging and rejuvenation, with cycles, to its unfolded counterpart. We then used the unfolded counterpart to support the survivability computation. We were able to analytically evaluate the transient failure probability and the associated Instantaneous Expected Energy Not Supplied metric, for each of the four case studies, from one specific attack. We envision several practical applications of the proposed methodology. First, because the micro-grid model is solved analytically, the approach can be used to support micro-grid engineering optimizations accounting for security intrusions. Second, micro-grid engineers could use the approach to detect security attacks by monitoring for unexpected deviations of the Energy Not Supplied metric.",2021-10,2024-09-02 13:13:06,2024-10-12 06:18:38,2024-09-02 13:13:06,17-24,,,,,,,,,,,,,,,,,,IEEE Xplore,,TLDR: This work proposes a method for unfolding aging and rejuvenation models into their sequential counterparts to enable the computation of transient state probabilities in the proposed models and analytically evaluates the transient failure probability and the associated Instantaneous Expected Energy Not Supplied metric.,,C:\Users\tristone\Zotero\storage\XX24M9NM\Czekster 等 - 2021 - Aging and Rejuvenation Models of Load Changing Attacks in Micro-Grids.pdf; C:\Users\tristone\Zotero\storage\Y9TR55W4\keywords.html,,分析方式：Model-based; 会议：ISSREW; 老化影响：网络安全; 模型：马尔可夫; 系统类型：智能电网; 验证方法：数值分析; 指标：瞬时失效概率，相关的瞬时预期未提供能量指标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
SHWVLRBI,conferencePaper,2021,"Li, Dimeng; Liang, Mengting; Xu, Bin; Yu, Xiao; Zhou, Junwei; Xiang, Jianwen",A Cross-Project Aging-Related Bug Prediction Approach Based on Joint Probability Domain Adaptation and k-means SMOTE,"2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)",,,10.1109/QRS-C55045.2021.00059,,"In long-running systems, the phenomenon of performance degradation and failure rate increase caused by Aging-Related Bugs (ARBs) is known as software aging. Because of the low presence and reproducing difficulty of ARBs, collecting enough training data to predict ARBs in a project is not easy. Thus, cross-project ARB prediction has been proposed. There are two main challenges in cross-project ARB prediction, namely distribution differences and severe class imbalance. As for the first challenge, existing cross-project ARB prediction approaches only focus on the transferability between domains while ignoring the discriminability between classes. As for the second challenge, existing approaches only consider the imbalance between the classes while ignoring the within-class imbalance problem. To solve these problems, a cross-project ARB prediction approach based on Joint Probability Domain Adaptation (JPDA) and k- means SMOTE (KS), called JPKS, is proposed. JPDA is used to consider the transferability and discriminability simultaneously, and KS solves the within-class and between-class imbalance problems. Experiments are conducted on two natural software systems to verify the performance of JPKS. The results show that JPKS can improve the performance of ARB prediction.",2021-12,2023-01-12 03:44:43,2024-10-10 12:20:29,,350-358,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2693-9371 CCF: C,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">基于联合概率域自适应和的跨项目ARB预测方法</span></p> </div>",; C:\Users\tristone\Zotero\storage\X57VSB8M\9741983.html; C:\Users\tristone\Zotero\storage\DEFQHPK9\Li 等 - 2021 - A Cross-Project Aging-Related Bug Prediction Approach Based on Joint Probability Domain Adaptation a.pdf,https://ieeexplore.ieee.org/document/9741983,老化影响：非特定的; 验证方法：实验实证; 测试方法：静态代码预测; 系统类型：Linux，MySQL; 会议：QRS-C; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)",,,,,,,,,,,,,,,
9C8PX47Q,conferencePaper,2021,"Tan, Xueyong; Liu, Jing",ACLM:Software Aging Prediction of Virtual Machine Monitor Based on Attention Mechanism of CNN-LSTM Model,"2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",,,10.1109/QRS54544.2021.00085,,"Because Virtual Machine Monitor (VMM) runs continuously with high load for a long time, the accumulated errors in the system can easily lead to software aging problems such as performance degradation, so that it can not provide high-quality software services. However, software rejuvenation techniques can improve the performance of software systems by cleaning up the aging factor. Therefore, how to accurately predict the occurrence time of software aging in VMM system is a crucial and valuable problem. This paper proposes a novel software aging prediction model, called the ACLM model, which integrates the Attention mechanism, the Convolutional Neural Network (CNN) and the Long Short-term Memory (LSTM) model. It can extract the temporal and spatial features of the time series more quickly and effectively. The experimental results show that compared with other models, the ACLM model has improved by 0.97% to 9.33 % and 1.48 % to 5.49 % on the MAE and the RMSE, which demonstrates that the ACLM model has higher accuracy in predicting software aging of the VMM.",2021-12,2023-02-22 05:55:53,2024-10-12 03:23:05,,759-767,,,,,,ACLM,,,,,,,,,,,,IEEE Xplore,,"ISSN: 2693-9177 CCF: C TLDR: A novel software aging prediction model, called the ACLM model, which integrates the Attention mechanism, the Convolutional Neural Network (CNN) and the Long Short-term Memory (LSTM) model is proposed, which can extract the temporal and spatial features of the time series more quickly and effectively.",,C:\Users\tristone\Zotero\storage\JMWUJESB\Tan和Liu - 2021 - ACLMSoftware Aging Prediction of Virtual Machine Monitor Based on Attention Mechanism of CNN-LSTM M.pdf,,验证方法：实验实证&比较分析; 分析方式：Measurement-based（ML）; 老化影响：性能降级; 会议：QRS; 模型：ACLM（集成注意力机制、CNN、LSTM）; 系统类型：VMM; 指标：MAE、RMSE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2021 IEEE 21st International Conference on Software Quality, Reliability and Security (QRS)",,,,,,,,,,,,,,,
YJLNI4JQ,conferencePaper,2021,"Yakovyna, Vitaliy; Uhrynovskyi, Bohdan",Aging of Native and Flutter Applications in Android OS in Various Usage Scenarios,2021 IEEE 16th International Conference on Computer Sciences and Information Technologies (CSIT),,,10.1109/CSIT52700.2021.9648777,,Android operating system and third-party applications are vulnerable to the effects of software aging. Software rejuvenation models and other approaches to counteract aging effects requires aging-related metrics to fit their needs. This paper considers aging manifestation in native Java/Kotlin and cross-platform Flutter applications. Study considers these sets of applications in two usage scenarios: with usage delays of mobile device and without delays. Study shows that Flutter applications are vulnerable to software aging. Experimental results shows that Frame Draw Time metric can fit needs of software rejuvenation models which are based on user behavior patterns. Frame Draw Time and PSS of main system processes can be considered as metrics for detecting and predicting software aging in future works.,2021-09,2023-01-10 13:08:22,2024-09-22 07:27:18,,313-316,,,1.0,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2766-3639 TLDR: Experimental results shows that Frame Draw Time metric can fit needs of software rejuvenation models which are based on user behavior patterns and frame Draw Time and PSS of main system processes can be considered as metrics for detecting and predicting software aging in future works.,"<div data-schema-version=""8""><p>概述：使用基于帧绘制的指标比较<span style=""color: rgb(0,0,0)"">基于Java/Kotlin的应用和基于跨平台框架Flutter的应用的老化现象区别</span></p> </div>",C:\Users\tristone\Zotero\storage\63IXY6C6\9648777.html; C:\Users\tristone\Zotero\storage\XW8GPFD5\Yakovyna和Uhrynovskyi - 2021 - Aging of Native and Flutter Applications in Android OS in Various Usage Scenarios.pdf,,系统类型：Android; 老化影响：性能降级; 会议：CSIT; 验证方法：实验实证; 指标：帧绘制时间，传统老化指标; 分析方式：度量; 分析方法：MK、ANOVA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 IEEE 16th International Conference on Computer Sciences and Information Technologies (CSIT),,,,,,,,,,,,,,,
RU8C2CPK,conferencePaper,2021,"da Costa, Jackson T.; de S. Matos, Rubens; de Araujo, Jean C. T.; Maciel, Paulo R. M.",Systematic Mapping of Literature on Software Aging and Rejuvenation Research Trends,2021 Annual Reliability and Maintainability Symposium (RAMS),,,10.1109/RAMS48097.2021.9605775,,"SUMMARY & CONCLUSIONSSoftware aging is a topic in the literature that has matured over the past 30 years and can be defined as software degradation during its operational life. On the other hand, the software rejuvenation technique is a proactive measure that includes the application stop, removal of error accumulation conditions, and restart in a clean environment. This paper provides a systematic mapping of the contemporary literature on Software Aging and Rejuvenation (SAR), observing the research trends in this theme in the last decade, from 2010 to 2019. The results highlight which strategic approaches of rejuvenation or aging detection have been approached when designing solutions both in the commercial and academic fields, and thus, researchers can use them when dealing with new software aging phenomena. Besides, it can be of great relevance for the academic community that studies the SAR to provide a current view on state of the art in this topic.",2021-05,2023-02-22 05:51:50,2024-08-14 08:01:16,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2577-0993,,C:\Users\tristone\Zotero\storage\L4E6L89T\da Costa 等 - 2021 - Systematic Mapping of Literature on Software Aging and Rejuvenation Research Trends.pdf; C:\Users\tristone\Zotero\storage\UEB3T5K6\stamp.html,,分析方式：综述; 会议：RAMS; 年份：2010-2019; 篇数：126,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 Annual Reliability and Maintainability Symposium (RAMS),,,,,,,,,,,,,,,
7VZEQ6K6,conferencePaper,2021,"Li, Mingxi; Yin, Bei-Bei",ARB-BERT: An Automatic Aging-Related Bug Report Classification Method based on BERT,2021 8th International Conference on Dependable Systems and Their Applications (DSA),,,10.1109/DSA52907.2021.00071,,"Software aging is a common phenomenon in most software systems. It refers to the increase of failure rates or the decline of performance in a long-running software system, mainly caused by Aging-Related Bugs (ARBs). Failure incurred by software aging may cause economic loss and may lead to casualties in security-critical systems. Automatic classification of ARB reports is an effective method to ensure the software system's quality by helping us detect and fix the bugs in software systems. There are two challenges in the automatic classification of ARB reports at present. Firstly, it is difficult to distinguish the ARB reports since the semantics of the text is ambiguous and hard to be recognized; secondly, the number of ARB reports is much smaller than other types of bugs, which may lead to class imbalance. Therefore, An ARB Report Automatic Classification Method based on BERT(ARB-BERT) is proposed in this paper to alleviate these problems. We combined back-translation, random under-sampling and random over-sampling to reduce the class imbalance problem in classification. By considering the ARB reports' characteristics, we utilize BERT as the semantic model, extracting feature vectors containing more accurate and sufficient information. The experimental results show that our method can improve the accuracy, precision, F-measure, and recall value compared with previous methods.",2021-08,2023-01-04 02:21:39,2024-10-05 03:42:24,,474-483,,,,,,ARB-BERT,,,,,,,,,,,,IEEE Xplore,,"ISSN: 2767-6684 TLDR: The experimental results show that the proposed An ARB Report Automatic Classification Method based on BERT(ARB-BERT) can improve the accuracy, precision, F-measure, and recall value compared with previous methods.","<div data-schema-version=""8""><p>概述：<code>基于BERT进行ARB缺陷分类</code></p> </div>",C:\Users\tristone\Zotero\storage\BIKPTNC4\9623011.html; C:\Users\tristone\Zotero\storage\XUWQ6B7M\Li和Yin - 2021 - ARB-BERT An Automatic Aging-Related Bug Report Classification Method based on BERT.pdf,,验证方法：实验实证&比较分析; 老化影响：非特定的; 系统类型：Linux; 分析方式：Classification; 会议：DSA; 模型：BERT; 指标：F度量、准确性,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 8th International Conference on Dependable Systems and Their Applications (DSA),,,,,,,,,,,,,,,
X5ICKJZT,conferencePaper,2021,"Khanna, Megha; Aggarwal, Mehak; Singhal, Naman",Empirical Analysis of Artificial Immune System Algorithms for Aging Related Bug Prediction,2021 7th International Conference on Advanced Computing and Communication Systems (ICACCS),,,10.1109/ICACCS51430.2021.9441809,https://ieeexplore.ieee.org/document/9441809,"The complex nature of human immunology algorithms has motivated the research community to explore their practical applications in various other fields. As a result, Artificial Immune Systems (AISs) is one such class of algorithms that has found its way into software quality predictive modeling. In this paper, we evaluate AIS algorithms for developing Aging-Related Bug (ARB) prediction models. Software Aging, the gradual degradation and resource exhaustion in software systems, is said to be caused by ARBs, which may or may not be identified during software testing. Therefore, predicting ARBs before software release can help software managers in reducing their impact. This paper presents an empirical study that statistically analyzes the effectiveness of AIS classifiers for ARB prediction on five open-source software datasets. In order to account for the imbalanced nature of the investigated datasets, we used resampling and cost-sensitive classifiers. The results of the study indicate the effectiveness of AIS algorithms for developing ARB prediction models.",2021-03,2024-08-15 09:33:50,2024-10-10 12:20:21,2024-08-15 09:33:50,692-697,,,1.0,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2575-7288,"<div data-schema-version=""8""><p>概述：统计分析了AIS分类器在五个开源软件数据集上对ARB预测的有效性</p> </div>",C:\Users\tristone\Zotero\storage\S5AGXJKL\9441809.html; C:\Users\tristone\Zotero\storage\R47M9BE8\Khanna 等 - 2021 - Empirical Analysis of Artificial Immune System Algorithms for Aging Related Bug Prediction.pdf; ,https://www.semanticscholar.org/paper/Empirical-Analysis-of-Artificial-Immune-System-for-Khanna-Aggarwal/d78c59eb385ee089315f09f3e971165e38d9c2be,验证方法：实验实证&比较分析; 老化影响：非特定的; 测试方法：静态代码预测; 系统类型：Linux，MySQL; 会议：ICACCS; 模型：AIS; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 7th International Conference on Advanced Computing and Communication Systems (ICACCS),,,,,,,,,,,,,,,
D7AIG3T5,conferencePaper,2021,"Oliveira, Felipe; Araujo, Jean; Matos, Rubens; Maciel, Paulo",Software Aging in Container-based Virtualization:An Experimental Analysis on Docker Platform,2021 16th Iberian Conference on Information Systems and Technologies (CISTI),,,10.23919/CISTI52073.2021.9476625,,"Lightweight virtualization, and specifically containers, has become widespread in the information technology industry to provide an efficient operational environment for the execution of scalable services on the Internet. Containers rely on a set of technologies different from the features that enable hardware virtualization (i.e., hypervisor-based virtual machines). However, both types of virtualized environments are employed to host applications that will be accessible anytime, anywhere. Thus, they are prone to software aging, which usually affects systems that run for long time intervals. Researchers have identified software aging effects in distinct types of cloud computing environments and hypervisors over recent years. However, a few works have dealt with this phenomenon in container-based platforms. This paper presents an experimental analysis of the software aging effects observed on Docker platforms while also evaluating a time- series model's fitness to predict resource consumption's progress caused by software aging. We employ a stress test workload tailored for the scenario of containers arranged in a cluster managed by Docker Swarm. The obtained results indicate an increasing usage of resident memory, virtual memory, and CPU usage, as the system undergoes subsequent scale-up and scale-down operations. The quadratic trend model was the best fitting approach for predicting resident and virtual memory usage, with less than 5% of prediction error. The experimental approach presented here may help systems administrators detect evidence of software aging in container- based environments, allowing them to choose a proper method and time for deploying rejuvenation actions to mitigate the dependability issues raised in similar scenarios described here.",2021-06,2022-01-22 06:55:31,2024-09-24 11:10:25,,1-7,,,,,,Software Aging in Container-based Virtualization,,,,,,,en-US,,,,,,,ISSN: 2166-0727,"<div data-schema-version=""8""><p>概述：评估时间序列模型在预测软件老化引起的资源消耗趋势方面的适用性</p> <p></p> </div>",C:\Users\tristone\Zotero\storage\AX5H2TDA\9476625.html; C:\Users\tristone\Zotero\storage\ZY4QU9AA\Oliveira 等 - 2021 - Software Aging in Container-based VirtualizationAn Experimental Analysis on Docker Platform.pdf,,"老化影响：资源消耗; 验证方法：实验实证; 会议：CISTI; 系统类型：Docker; 分析方式：Measurement-based（时间序列）; 指标：常驻内存，虚拟内存，CPU利用率; 模型：linear, quadratic, exponential growth, and Pearl-Reed logistic",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2021 16th Iberian Conference on Information Systems and Technologies (CISTI),,,,,,,,,,,,,,,
5XBC9I4A,journalArticle,2020,"Xiang, Jianwen; Weng, Caisheng; Zhao, Dongdong; Andrzejak, Artur; Xiong, Shengwu; Li, Lin; Tian, Jing",Software Aging and Rejuvenation in Android: New Models and Metrics,Software Quality Journal,,"0963-9314, 1573-1367",10.1007/s11219-019-09475-0,http://link.springer.com/10.1007/s11219-019-09475-0,"Android users are occasionally troubled by the slow UI responses and sudden application/OS crashes. These problems are mainly caused by software aging, a phenomenon of progressive degradation of performance and dependability typically observed in long-running software systems. A countermeasure to software aging is software rejuvenation, i.e., manual or scheduled restart at different levels, such as application, OS, and device. Various software aging and rejuvenation models have been proposed for different software systems. However, these traditional models cannot be applied in the context of mobile devices, as they seldom consider the patterns of usage behavior and user experience specific to mobile phones. We address this problem based on the observations that the usage time of mobile phones is typically fragmented in daily life, with frequent and periodical switches between active and sleep modes, and that the user experience on fluent operation in the active mode is a key concern for mobile users. These insights are exploited to model the usage behavior and aging process by individual Stochastic Petri-Nets, and then to compose them into a Continuous Time Markov Chain (CTMC). Furthermore, we propose proactive rejuvenation strategies based on such CTMCs to achieve the best user experience and the least user interference, such as restarting the device when it is in sleep mode and before it enters an aged state. To consider user experience - a key concern of mobile users which is still less prominent in traditional dependability measurements – we propose new related metrics: for fluency (i.e., the probability that a phone offers a fast UI response to the users), and for the degree of overall user experience. We demonstrate the effectiveness and advantages of the proposed models and metrics via simulations as well as an empirical study.",2020-03,2022-01-22 06:57:54,2024-08-14 08:15:17,2022-01-22 06:57:54,85-106,,1.0,28.0,,Software Qual. J.,Software aging and rejuvenation in android,,,,,,,en-US,,,,,1.813,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 CCF: C,"<div data-schema-version=""8""><p>不足：关于分布和过渡率的假设非常简单，可能不太适合实际环境；为了得出不同用户和不同手机的最佳恢复频率，应考虑更多因素，例如手机的硬件和软件规格以及各种用户行为模式；结合机器学习和基于模型的方法的混合方法可以为不同的用户提供个性化的最佳复兴策略</p> </div>; <div data-schema-version=""8""><p>概述：<code>首次结合用户行为模式对老化过程建模，并提出以流畅性和总体用户体验程度作为度量</code></p> </div>",C:\Users\tristone\Zotero\storage\4U9YMKZD\Xiang 等 - 2020 - Software Aging and Rejuvenation in Android New Models and Metrics.pdf,,分析方式：Model-based; 模型：CTMC+用户行为模型; 系统类型：Android; 验证方法：数值分析; 老化影响：性能降级; 重生层级：操作系统; 期刊：SQJ; 指标：流畅度、总体用户体验度,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
67HZQXBB,journalArticle,2020,"Koutras, V. P.; Platis, A. N.",On the performance of software rejuvenation models with multiple degradation levels,Software Quality Journal,,1573-1367,10.1007/s11219-019-09491-0,https://doi.org/10.1007/s11219-019-09491-0,"Continuously running software systems suffer from performance degradation due to aging phenomena and resource exhaustion that are mainly due to error conditions accumulation or due to exhaustion of system resources such as the physical memory. To counteract such phenomena, a periodic preemptive rollback to prevent software failures in the future, called software rejuvenation, can be applied. During the past 20 years, software rejuvenation has been extensively studied with the aim to design rejuvenation policies that optimize system availability, reliability, and performance, mainly in terms of operational cost. In this paper, we propose to model software systems’ overall performance capacity by assigning a performance capacity level at each of the possible states that it can be in, using a continuous time Markov process. A performance capacity indicator for all possible rejuvenation models incorporating partial, full, or both rejuvenation actions is defined and evaluated in the transient, and the steady state phase and the impact of various rejuvenation policies on it are further examined. Our aim is to distinguish the optimal, in terms of performance, rejuvenation strategy consisting of the type of rejuvenation to be implemented and the rejuvenation interval as well. Multi-objective optimization problems are additionally formulated for deriving the rejuvenation policies that optimize the system’s overall performance capacity with respect to availability and operational cost constraints. Numerical examples, in which through comparisons among the rejuvenation models and policies we can distinguish the optimal rejuvenation strategy to be followed, are also presented.",2020-03-01,2024-07-29 07:07:21,2024-08-14 08:12:52,2024-07-29 07:07:21,135-171,,1.0,28.0,,Software Qual. J.,,,,,,,,en,,,,,Springer Link,,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 南农高质量: C CCF: C,"<div data-schema-version=""8""><p>通过建立连续时间马尔可夫过程模型，研究了多级退化状态下的软件再生模型的性能，提出了性能容量指标（PCI），并通过数值实验分析了不同再生策略的效果。</p> </div>",C:\Users\tristone\Zotero\storage\M2JBXRUK\Koutras和Platis - 2020 - On the performance of software rejuvenation models with multiple degradation levels.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：数值分析; 分析方式：Model-based&rej; 模型：CTMC; 期刊：SQJ; 指标：性能容量、可用性和操作成本（多目标优化）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
KUQJMBW4,journalArticle,2020,"Wu, Xiaoxue; Zheng, Wei; Pu, Minchao; Chen, Jie; Mu, Dejun",Invalid bug reports complicate the software aging situation,Software Quality Journal,,"0963-9314, 1573-1367",10.1007/s11219-019-09481-2,http://link.springer.com/10.1007/s11219-019-09481-2,"Symptoms of software aging include performance degradation and failure occurrence increasing when software systems run for a period of time. Therefore, software aging is closely related to system performance. Understanding and analyzing performance issues in the software system is critical to mastering software aging information. Instead of focusing on normal valid bug reports (VBRs), this paper advocates the usage of invalid bug reports (IBRs) to capture software aging signals. We use performance bugs that are highly related to software aging as an example to construct a binary classification model for bug report classification. We conduct a rigorous evaluation of the constructed models via different performance measures (i.e., recall, precision, F1-score, AUC). Then, the model is used to predict the performance bug reports (PBRs) in IBRs, and a manual analysis of the prediction results is conducted to identify aging-related bug reports (ABRs). The final results show that the ratio of PBRs in IBRs ranges from 4.9 to 42.18% for the two real opensource projects HDFS and HBase when considering five different classifiers. Among these five classifiers, Support Vector Machine (SVM) classifier can achieve the best performance. The ratios of PBRs in IBRs by using this classifier are 11.1% and 15.35% for these two datasets and the performances in terms of F1-score are 85% and 74%. Further analysis of the predicted PBRs of IBRs in the project HDFS is conducted through a manual user case study; some surprising findings revealing the relationship between IBRs, PBRs, and ABRs are presented: (1) Around 50% of the PBRs in IBRs are related to software aging; (2) components that undertake major tasks are more prone to aging problems; (3) more than 50% ARBs lead to timeout, 33% ARBs are caused by improper control of memory or threats, and 29% ARBs are caused by inappropriate management of file operation or disk usage; (4) hard to reproduce is the major reason that ARBs are usually closed as invalid because many aging-related bugs would temporarily disappear by restarting the system.",2020-03,2022-01-22 06:54:17,2024-10-10 12:19:00,2022-01-22 06:54:17,195-220,,1.0,28.0,,Software Qual. J.,,,,,,,,en-US,,,,,1.813,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 CCF: C,"<div data-schema-version=""8""><p>概述：<code>使用无效错误报告捕获软件老化信号</code></p> </div>",C:\Users\tristone\Zotero\storage\9ISCQ73S\Wu 等 - 2020 - Invalid bug reports complicate the software aging situation.pdf,,老化影响：性能降级; 期刊：SQJ; 分析方式：Classification; 系统类型：云计算系统; 模型：NB、LR、SVM、MLP、RF; 验证方法：实验实证&人工分析; 指标：F度量、准确性、召回率、AUC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QHQ6DQF4,journalArticle,2020,"Qin, Fangyun; Wan, Xiaohui; Yin, Beibei",An empirical study of factors affecting cross-project aging-related bug prediction with TLAP,Software Quality Journal,,1573-1367,10.1007/s11219-019-09460-7,https://doi.org/10.1007/s11219-019-09460-7,"Software aging is a phenomenon in which long-running software systems show an increasing failure rate and/or progressive performance degradation. Due to their nature, Aging-Related Bugs (ARBs) are hard to discover during software testing and are also challenging to reproduce. Therefore, automatically predicting ARBs before software release can help developers reduce ARB impact or avoid ARBs. Many bug prediction approaches have been proposed, and most of them show effectiveness in within-project prediction settings. However, due to the low presence and reproducing difficulty of ARBs, it is usually hard to collect sufficient training data to build an accurate prediction model. A recent work proposed a method named Transfer Learning based Aging-related bug Prediction (TLAP) for performing cross-project ARB prediction. Although this method considerably improves cross-project ARB prediction performance, it has been observed that its prediction result is affected by several key factors, such as the normalization methods, kernel functions, and machine learning classifiers. Therefore, this paper presents the first empirical study to examine the impact of these factors on the effectiveness of cross-project ARB prediction in terms of single-factor pattern, bigram pattern, and triplet pattern and validates the results with the Scott-Knott test technique. We find that kernel functions and classifiers are key factors affecting the effectiveness of cross-project ARB prediction, while normalization methods do not show statistical influence. In addition, the order of values in three single-factor patterns is maintained in three bigram patterns and one triplet pattern to a large extent. Similarly, the order of values in the three bigram patterns is also maintained in the triplet pattern.",2020-03-01,2022-10-13 12:30:38,2024-10-10 12:20:04,2022-10-13 12:30:38,107-134,,1.0,28.0,,Software Qual. J.,,,,,,,,en-US,,,,,1.813,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 CCF: C,"<div data-schema-version=""8""><p>备注：第一个用TLAP分析跨项目ARB预测影响因素的实证研究</p> </div>; <div data-schema-version=""8""><p>概述：检验归一化方法，核函数和机器学习分类器在基于迁移学习的软件老化预测方法的影响</p> </div>",C:\Users\tristone\Zotero\storage\ZG6H6A4U\Qin 等 - 2020 - An empirical study of factors affecting cross-project aging-related bug prediction with TLAP.pdf,,验证方法：实验实证&比较分析; 期刊：SQJ; 测试方法：静态代码预测; 系统类型：Linux，MySQL，Apache HTTPD; 指标：度量相关复杂性指标; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
U8CN9VFA,journalArticle,2020,"Pietrantuono, Roberto; Russo, Stefano",A survey on software aging and rejuvenation in the cloud,Software Quality Journal,,1573-1367,10.1007/s11219-019-09448-3,https://doi.org/10.1007/s11219-019-09448-3,"The adoption of cloud computing for providing resource and delivering services is an irreversible trend. For most IT companies, the quality of provided services is strongly dependent on reliability and performance of the underlying cloud technologies. A widely studied problem that can greatly affect the user experience is runtime software aging, whose main countermeasure is a proactive maintenance action known as rejuvenation. This article reviews the effort conducted so far by the software aging and rejuvenation (SAR) community in the cloud domain. A set of 105 papers has been examined from three source digital libraries in order to have a clear view of the state of the art. The paper characterizes the cloud-related SAR literature according to four dimensions: the publication trends, the aging analysis methods and metrics, the rejuvenation solutions, the validation approach. Results witness an increasing interest in this area (with 58% of the studies published in the last 5 years), an equivalent role of measurement-based and model-based solutions for aging analysis (42 and 40 studies, respectively) and a prevalent interest for rejuvenation (76/105 of the studies deals with rejuvenation).",2020-03-01,2022-01-22 07:04:03,2024-08-14 08:07:50,2022-01-22 07:04:03,7-38,,1.0,28.0,,Software Qual. J.,,,,,,,,en-US,,,,,1.813,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 CCF: C,"<div data-schema-version=""8""><p>概述：<code>回顾了在云领域的软件老化和恢复（SAR）研究</code></p> </div>",C:\Users\tristone\Zotero\storage\NBQS66YK\Pietrantuono和Russo - 2020 - A survey on software aging and rejuvenation in the cloud.pdf,,系统类型：云; 期刊：SQJ; 分析方式：综述,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
B2PXUB3R,journalArticle,2020,"P., Shruthi; Cholli, Nagaraj G.",An analysis of software aging in cloud environment,International Journal of Electrical and Computer Engineering (IJECE),,"2722-2578, 2088-8708",10.11591/ijece.v10i6.pp5985-5991,http://ijece.iaescore.com/index.php/IJECE/article/view/21847,"Cloud computing is the environment in which several virtual machines (VM) run concurrently on physical machines. The cloud computing infrastructure hosts multiple cloud services that communicate with each other using the interfaces. During operation, the software systems accumulate errors or garbage that leads to system failure and other hazardous consequences. This status is called software aging. Software aging happens because of memory fragmentation, resource consumption in large scale and accumulation of numerical error. Software aging degrads the performance that may result in system failure. This happens because of premature resource exhaustion. The errors that cause software agings are of special types and target the response time and its environment. This issue is to be resolved only during run time as it occurs because of the dynamic nature of the problem. To alleviate the impact of software aging, software rejuvenation technique is being used. Rejuvenation process reboots the system or reinitiates the softwares. Software rejuvenation removes accumulated error conditions, frees up deadlocks and defragments operating system resources like memory. Software aging and rejuvenation has generated a lot of research interest recently. This work reviews some of the research works related to detection of software aging and identifies research gaps.",2020-12-01,2022-01-22 07:05:33,2024-10-12 06:22:52,2022-01-22 07:05:33,5985,,6.0,10.0,,International Journal of Electrical and Computer Engineering (IJECE),,,,,,,,en-US,,,,,,,TLDR: This work reviews some of the research works related to detection of software aging and identifies research gaps.,"<div data-schema-version=""8""><p>不足：仅总结了7篇老化重生论文</p> </div>; <div data-schema-version=""8""><p>概述：部分软件重生工作的综述</p> </div>; <div data-schema-version=""8""><p>优点：总结的一些论文的完成工作比较完善</p> </div>",C:\Users\tristone\Zotero\storage\AKKI8XVH\P.和Cholli - 2020 - An analysis of software aging in cloud environment.pdf,,分析方式：综述; 会议：IJECE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3AALVFFA,journalArticle,2020,"Jia, Yun-Fei; Zhou, Zhi Quan; Wu, Renbiao",Software ageing process as an evolving dynamic system,IET Software,,1751-8814,10.1049/iet-sen.2019.0155,https://onlinelibrary.wiley.com/doi/abs/10.1049/iet-sen.2019.0155,"Software ageing is correlated with available computing resources of the computer system. These available resources evolve with time, reflecting the developing mechanism of the ageing process. This study is the first to consider a degrading computer system as an evolving dynamic system. The authors proposed a non-linear dynamic model of software ageing, where the coefficients are estimated using a dynamic inversion method, and conduct controlled software experiments, where the experimental conditions are controlled to expedite ageing. The model can be used to forecast mutations of resource variables such as the buffer, cache and central processing unit usage, which have a direct impact on software performance. The stability of the model is assessed by the Jacobi matrix method, and the results show that, when part of a resource has become unallocable, the Linux operating system can readjust the resources to keep the system's performance stable. This process repeats until some of the resources are exhausted, when the system will crash or hang. This study provides hints on the ageing mechanism of computer systems, which are rarely reported in the past.",2020,2024-07-29 07:15:08,2024-10-12 06:08:46,2024-07-29 07:15:08,702-710,,6.0,14.0,,IET Software,,,,,,,,en,© 2020 The Institution of Engineering and Technology,,,,Wiley Online Library,,"_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/iet-sen.2019.0155 JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.5 5年影响因子: 1.5 EI: 是 南农高质量: C CCF: B TLDR: This study is the first to consider a degrading computer system as an evolving dynamic system, and proposes a non-linear dynamic model of software ageing, where the coefficients are estimated using a dynamic inversion method and conducted controlled software experiments.","<div data-schema-version=""8""><p>通过动态方程建模老化过程，提出了一种非线性复合模型，用于描述软件老化过程的动态特性</p> </div>",C:\Users\tristone\Zotero\storage\GMV4IWZU\Jia 等 - 2020 - Software ageing process as an evolving dynamic system.pdf; C:\Users\tristone\Zotero\storage\MVDMPQY9\iet-sen.2019.html,,系统类型：服务器; 分析方式：Hybrid; 验证方法：实验实证; 老化影响：内存消耗，CPU利用率上升，性能降级; 模型：非线性动态方程; 指标：CPU，Cache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7CQP6TZH,journalArticle,2020,"Li, Jingwei; Qi, Yong; Wang, Guanghua; Lin, Jinwei",Planning Optimal Rejuvenation Policy for Aging Software Systems via a Two-Layer Model,IEEE Access,,2169-3536,10.1109/ACCESS.2020.3011813,,"Software rejuvenation is a proactive fault management technique widely used for preventing performance degradation and failures due to software aging. It works by proactively terminating the system, cleaning the internal state of the system, and restarting the system. Since rejuvenation incurs extra system overhead and downtime cost, it is important to determine the optimal time to trigger rejuvenation. This paper proposes a two-layer model to characterize the system failure behavior and rejuvenation process under aging condition, planning a time-based rejuvenation policy maximizing the system availability and minimizing downtime cost. The lower layer is a failure model that uses an analytical model and runtime measurements to build the failure distribution of the aging system. The upper layer is a rejuvenation model that takes the failure distribution from the lower layer as input to formulate the availability function and downtime cost function. Taking these two functions as optimization targets, we can obtain the optimal rejuvenation time. Compared with the traditional analytical model, the two-layer model modeling software failure considers runtime measurements, which can describe the aging behavior more accurately. In the experimental part, we comprehensively evaluate the two-layer model by studying the aging of the web search system. The results show that the two-layer model reduces unavailability by 18.18% and reduces downtime cost by 31.22% in comparison with the traditional analytical model.",2020,2023-02-22 06:44:24,2024-08-14 07:58:24,,136725-136735,,,8.0,,IEEE Access,,,,,,,,,,,,,3.476,3.0,Conference Name: IEEE Access JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 3.4 5年影响因子: 3.7 EI: 是,,C:\Users\tristone\Zotero\storage\7PQEP9Q7\9146843.html; C:\Users\tristone\Zotero\storage\DJTKQ2RB\Li 等 - 2020 - Planning Optimal Rejuvenation Policy for Aging Software Systems via a Two-Layer Model.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：数值分析; 重生层级：非特定的; 分析方式：Hybrid; 指标：可用性，停机成本; 期刊：IEEE Access; 系统类型：网络搜索系统; 重生策略：下层故障模型（测量构建故障分布），上层重生模型,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WPKR88H5,journalArticle,2020,"Bai, Jing; Chang, Xiaolin; Machida, Fumio; Trivedi, Kishor S.; Han, Zhen",Analyzing Software Rejuvenation Techniques in a Virtualized System: Service Provider and User Views,IEEE Access,,2169-3536,10.1109/ACCESS.2019.2963397,,"Virtualization technology has promoted the fast development and deployment of cloud computing, and is now becoming an enabler of Internet of Everything. Virtual machine monitor (VMM), playing a critical role in a virtualized system, is software and hence it suffers from software aging after a long continuous running as well as software crashes due to elusive faults. Software rejuvenation techniques can be adopted to reduce the impact of software aging. Although there existed analytical model-based approaches for evaluating software rejuvenation techniques, none analyzed both application service (AS) availability and job completion time in a virtualized system with live virtual machine (VM) migration. This paper aims to quantitatively analyze software rejuvenation techniques from service provider and user views in a virtualized system deploying VMM reboot and live VM migration techniques for rejuvenation, under the condition that all the aging time, failure time, VMM fixing time and live VM migration time follow general distributions. We construct an analytical model by using a semi-Markov process (SMP) and derive formulas for calculating AS availability and job completion time. By analytical experiments, we can obtain the optimal migration trigger intervals for achieving the approximate maximum AS availability and the approximate minimum job completion time, and then service providers can make decisions for maximizing the benefits of service providers and users by adjusting parameter values.",2020,2022-03-15 12:57:44,2024-10-12 03:19:47,,6448-6459,,,8.0,,IEEE Access,Analyzing Software Rejuvenation Techniques in a Virtualized System,,,,,,,en-US,,,,,3.476,3.0,"Conference Name: IEEE Access JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 3.4 5年影响因子: 3.7 EI: 是 TLDR: This paper aims to quantitatively analyze software rejuvenation techniques from service provider and user views in a virtualized system deploying VMM reboot and live virtual machine migration techniques for rejuvenation, under the condition that all the aging time, failure time, VMM fixing time and live VM migration time follow general distributions.","<div data-schema-version=""8""><p>不足：未考虑重生成本</p> </div>; <div data-schema-version=""8""><p>概述：从服务提供商和用户的角度对一个<span style=""color: rgb(0, 0, 0)"">部署VMM重启和虚拟机实时迁移技术进行重生的虚拟系统进行定量分析</span></p> </div>; <div data-schema-version=""8""><p>优点：第一篇同时分析带有实施虚拟机迁移的虚拟系统中应用程序服务的可用性和作业完成时间的文章</p> </div>",C:\Users\tristone\Zotero\storage\HMPXNSQG\Bai 等 - 2020 - Analyzing Software Rejuvenation Techniques in a Virtualized System Service Provider and User Views.pdf; C:\Users\tristone\Zotero\storage\XGAWQ3JE\8948016.html,,老化影响：崩溃/挂起故障&性能降级; 分析方式：Model-based; 验证方法：仿真模拟&数值分析; 系统类型：VMM; 模型：SMP; 重生层级：VMM，动态VM迁移; 会议：ACCESS; 指标：作业完成速率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A7DCTW8V,journalArticle,2020,"Wang, Shuguang; Lu, Minyan; Kong, Shiyi; Ai, J.",A Dynamic Anomaly Detection Approach Based on Permutation Entropy for Predicting Aging-Related Failures,Entropy,,,10.3390/e22111225,,"Perutation entropy is modified to Multidimensional Multi-scale Permutation Entropy (MMPE) as a novel aging indicator to detect performance anomalies, since MMPE is sensitive to dynamic state changes. Software aging is a phenomenon referring to the performance degradation of a long-running software system. This phenomenon is an accumulative process during execution, which will gradually lead the system from a normal state to a failure-prone state. It is a crucial challenge for system reliability to predict the Aging-Related Failures (ARFs) accurately. In this paper, permutation entropy (PE) is modified to Multidimensional Multi-scale Permutation Entropy (MMPE) as a novel aging indicator to detect performance anomalies, since MMPE is sensitive to dynamic state changes. An experiment is set on the distributed database system Voldemort, and MMPE is calculated based on the collected performance metrics during execution. Finally, based on MMPE, a failure prediction model using the machine learning method to reveal the anomalies is presented, which can predict failures with high accuracy.",2020,2022-08-01 08:20:25,2024-10-12 06:23:51,,,,,,,Entropy,,,,,,,,en-US,,,,,2.738,3.0,"JCR分区: Q2 中科院分区升级版: 物理与天体物理3区 影响因子: 2.1 5年影响因子: 2.2 TLDR: Perutation entropy is modified to Multidimensional Multi-scale Permutation Entropy (MMPE) as a novel aging indicator to detect performance anomalies, since MMPE is sensitive to dynamic state changes.","<div data-schema-version=""8""><p>概述：通过多维多尺度置换熵来预测老化</p> </div>; <div data-schema-version=""8""><p>优点：应用动力系统的复杂性测度排列熵来预测老化故障</p> </div>",; C:\Users\tristone\Zotero\storage\EFFNGMFK\Wang 等 - 2020 - A Dynamic Anomaly Detection Approach Based on Permutation Entropy for Predicting Aging-Related Failu.pdf,https://www.semanticscholar.org/paper/A-Dynamic-Anomaly-Detection-Approach-Based-on-for-Wang-Lu/159e8b52c44b8b3f6e668075b840fa3309d99c10,分析方式：度量&Measurement-based（ML）; 老化影响：崩溃/挂起故障; 模型：Isolation Forest and OC-SVM; 期刊：Entropy; 系统类型：分布式数据库; 验证方法：实验实证&对比分析; 指标：Multidimensional Multi-scale Permutation Entropy（MMPE）; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Y4AZUW9M,journalArticle,2020,"Cotroneo, Domenico; Iannillo, Antonio Ken; Natella, Roberto; Pietrantuono, Roberto",A comprehensive study on software aging across android versions and vendors,Empirical Software Engineering,,1573-7616,10.1007/s10664-020-09838-3,https://doi.org/10.1007/s10664-020-09838-3,"This paper analyzes the phenomenon of software aging – namely, the gradual performance degradation and resource exhaustion in the long run – in the Android OS. The study intends to highlight if, and to what extent, devices from different vendors, under various usage conditions and configurations, are affected by software aging and which parts of the system are the main contributors. The results demonstrate that software aging systematically determines a gradual loss of responsiveness perceived by the user, and an unjustified depletion of physical memory. The analysis reveals differences in the aging trends due to the workload factors and to the type of running applications, as well as differences due to vendors’ customization. Moreover, we analyze several system-level metrics to trace back the software aging effects to their main causes. We show that bloated Java containers are a significant contributor to software aging, and that it is feasible to mitigate aging through a micro-rejuvenation solution at the container level.",2020-09-01,2022-01-22 07:03:25,2024-08-15 09:35:52,2022-01-22 07:03:25,3357-3395,,5.0,25.0,,Empir. Softw. Eng.,,,,,,,,en-US,,,,,3.762,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.5 5年影响因子: 4.5 EI: 是 CCF: B,"<div data-schema-version=""8""><p>不足：每组实验仅做了一次实验，可能会有误差，没有考虑不同供应商的手机硬件可能不同。</p> </div>; <div data-schema-version=""8""><p>概述：讨论了跨安卓版本以及供应商下软件老化现象的存在及其原因的研究</p> </div>; <div data-schema-version=""8""><p>优点：考虑了多种因素，设置了一系列比较充分的实验，将软件老化的原因缩小到了某个线程上，并提出了一种可行的微重生策略</p> </div>",C:\Users\tristone\Zotero\storage\KNIL4KD8\Cotroneo 等 - 2020 - A comprehensive study on software aging across android versions and vendors.pdf,,系统类型：Android; 老化影响：性能降级&内存消耗; 重生层级：容器; 分析方式：现象分析&度量&rej; 会议：ESE; 验证方法：数值分析&实验实证&对比分析; 指标：LT，内存，GC，task-level,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TTLVKJLA,conferencePaper,2020,"Yue, Jing; Wu, Xiaojun; Xue, Yunqing",Microservice Aging and Rejuvenation,2020 World Conference on Computing and Communication Technologies (WCCCT),,,10.1109/WCCCT49810.2020.9170005,,"Due to ‘aging’, not only the service rate of the software decreases with time but the software itself experiences occasional crash/hang failures. Software rejuvenation involves occasional stopping the executing software, ‘cleaning’ the ‘internal state’ and restarting. Moreover, container technology promotes the process of fair and efficient allocation of physical resources among virtual machines. However, the emergence of distributed cloud platform undoubtedly increase the flexibility and complexity of the system. In this paper, we propose a method of predicting microservice [1] aging by deep learning, and a rejuvenation policy by the CVA architecture. From the perspective of container, it can provide a technology of vertical expansion and contraction of container resources, improve the utilization of resources in the clustered environment, and improve the availability of microservice system.",2020-05,2023-02-22 06:56:02,2024-10-04 13:22:52,,1-5,,,,,,,,,,,,,,,,,,IEEE Xplore,,"TLDR: This paper proposes a method of predicting microservice aging by deep learning, and a rejuvenation policy by the CVA architecture that can provide a technology of vertical expansion and contraction of container resources, improve the utilization of resources in the clustered environment, and improve the availability of microservice system.",,C:\Users\tristone\Zotero\storage\R6J4BN9P\9170005.html; C:\Users\tristone\Zotero\storage\RW62CHSM\Yue 等 - 2020 - Microservice Aging and Rejuvenation.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：实验实证; 分析方式：Measurement-based（ML）&rej; 会议：WCCCT; 模型：CNN+LSTM; 系统类型：分布式云平台; 指标：网络吞吐量、CPU、内存、磁盘使用率等; 重生层级：容器资源Docker？,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2020 World Conference on Computing and Communication Technologies (WCCCT),,,,,,,,,,,,,,,
QIJN2EKM,conferencePaper,2020,"Tang, Minghao; Zhang, Peng; Sun, Haoqi; Zhang, Lei",A Task Execution Framework Based on Aging Indicator and SARIMI,"2020 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)",,,10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00029,,"The long-term running characteristics of spatiotemporal related tasks increase the risk of software aging of the basic supporting software of cloud platform, such as operating system, virtual machine and virtual machine monitor, and reduce the stability of platform services. In addition, software aging, as a process that accumulates over time, does not immediately cause system function failure. Moreover, the existing time series analysis methods do not give enough consideration to the seasonality of load characteristics, which makes it difficult to accurately determine the degree of software aging and the time of software rejuvenation. Therefore, this paper proposes a task execution method integrated with software rejuvenation means. Through the detection and evaluation of software aging, when the virtual machine aging reaches a certain extent, the rejuvenation module will be started to restore the service capacity of the virtual machine in time, so as to improve the task execution efficiency. And through the use of aging indicator and the software aging evaluation method based on Multiplicative Seasonal Autoregressive Integrated Moving Average (SARIMA), the current software aging situation and the periodicity of the system load are considered. At the same time, the dynamic trend of software aging is evaluated, and the software is rejuvenated near the optimal rejuvenation time point, which improves the applicability of resource aging evaluation and task execution efficiency in the cloud platform. Experimental results show that our method is effective in the aging of cloud platform software.",2020-12,2023-02-22 06:46:21,2024-09-20 08:49:14,,18-25,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\AM8MHBM3\9443695.html; C:\Users\tristone\Zotero\storage\QJQ4H5G2\Tang 等 - 2020 - A Task Execution Framework Based on Aging Indicator and SARIMI.pdf,,老化影响：性能降级; 验证方法：实验实证; 会议：ISPA/BDCloud/SocialCom/SustainCom; 模型：SARIMA乘法季节自回归综合移动平均; 系统类型：云平台; 指标：内存利用率; 重生层级：虚拟机; 分析方式：Measurement-based（时间序列）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2020 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)",,,,,,,,,,,,,,,
X9HJZ7SN,conferencePaper,2020,"Oliveira, Felipe; Araujo, Jean; Matos, Rubens; Lins, Luan; Rodrigues, André; Maciel, Paulo",Experimental Evaluation of Software Aging Effects in a Container-Based Virtualization Platform,"2020 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",,,10.1109/SMC42975.2020.9283358,https://ieeexplore.ieee.org/abstract/document/9283358,"Cloud-based architectures have grown in recent years, especially the interest in container-based solutions have sharply increased by enterprises worldwide. Containers are a form of lightweight virtualization that can be used to provide cloud services. Adopting this kind of technology in a bare- metal context is becoming strong because they can offer many benefits, like performance efficiency and costs reduction. Docker is a widespread platform for the creation and management of containers. As in any computational cloud service, Docker environments must deal with the intensive workload and may have a long-term life cycle, which might trigger some problems that compromise the system dependability. The software aging phenomenon is one of these likely problems. It is a process of cumulative errors or system misbehavior that leads to application failures and performance degradation throughout its runtime. This paper aims to monitor and evaluate software aging effects on the Docker platform in a cloud computing environment. We conducted two experimental studies with automated workloads to simulate containers' life cycle and the intensive use of Docker features, while the system was monitored. The results show high resource consumption by the operating system's network utility, in addition to memory fragmentation in the sub-processes of the Docker platform. Trends of increasing resident memory consumption were also observed in one of these scenarios.",2020-10,2024-07-22 02:19:26,2024-08-14 07:55:29,2024-07-22 02:19:26,414-419,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2577-1655 CCF: C,"<div data-schema-version=""8""><p>通过模拟容器生命周期和对Docker特性的密集使用来研究云计算环境中Docker平台的软件老化效应</p> </div>",C:\Users\tristone\Zotero\storage\YZQXVTJ2\Oliveira 等 - 2020 - Experimental Evaluation of Software Aging Effects in a Container-Based Virtualization Platform.pdf,,分析方式：度量&Measurement-based（ML）; 验证方法：实验实证; 会议：SMC; 指标：内存，CPU; 系统类型：Docker; 老化影响：内存消耗，内存碎片化，CPU利用率上升,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2020 IEEE International Conference on Systems, Man, and Cybernetics (SMC)",,,,,,,,,,,,,,,
4SWWMEW9,conferencePaper,2020,"Paing, Aye Myat Myat",Analysis of Availability Model Based on Software Aging in SDN Controllers with Rejuvenation,2020 IEEE Conference on Computer Applications(ICCA),,,10.1109/ICCA49400.2020.9022818,,"Deficiency of flexibility and programmability of legacy network architecture has been the concern of many networking admirers for some years. Software defined networking (SDN) is a new emerging concept to logically centralize the network control plane in order to automate the configuration of individual network elements. However, the failures of SDN controller are every large impact on the network performance and availability. There are different failure modes in SDN controller outages such as hardware and software. Unplanned downtime is mostly caused by software failure due to software aging rather than hardware failure. The aging related faults have a huge effect on the availability for software components, SDN controllers. For that reason, the work presented in this paper offers the availability model for software aging of SDN controllers by applying software rejuvenation. A stochastic reward net (SRN) is proposed to evaluate the availability assessment of a cluster of SDN controllers. And then how software rejuvenation can improve the performance of SDN controllers is studied. To evaluate the availability of proposed model, mathematical analysis is performed.",2020-02,2023-02-22 06:01:05,2024-08-14 07:53:13,,1-7,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\AWHNZC7D\9022818.html; C:\Users\tristone\Zotero\storage\NJTDCBJT\Paing - 2020 - Analysis of Availability Model Based on Software Aging in SDN Controllers with Rejuvenation.pdf,,分析方式：Model-based; 验证方法：数值分析; 老化影响：性能降级; 重生层级：操作系统; 模型：SRN; 会议：ICCA; 系统类型：SDN控制器; 指标：downtime cost、system unavailability；,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2020 IEEE Conference on Computer Applications(ICCA),,,,,,,,,,,,,,,
FHPZVT4A,conferencePaper,2020,"Xu, Bin; Zhao, Dongdong; Jia, Kai; Zhou, Junwei; Tian, Jing; Xiang, Jianwen",Cross-Project Aging-Related Bug Prediction Based on Joint Distribution Adaptation and Improved Subclass Discriminant Analysis,2020 IEEE 31st International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE5003.2020.00038,,"Software aging, which is caused by Aging-Related Bugs (ARBs), refers to the phenomenon of performance degradation and eventual crash in long running systems. In order to discover and remove ARBs, ARB prediction is proposed. However, due to the low presence and reproducing difficulty of ARBs, it is usually difficult to collect sufficient ARB data within a project. Therefore, cross-project ARB prediction is proposed as a solution to build the target project's ARB predictor by using the labeled data from the source project. A key point for cross-project ARB prediction is to reduce distribution difference between source and target project. However, existing approaches mainly focus on the marginal distribution difference while somehow overlook the conditional distribution difference, and they mainly use random oversampling to alleviate the class imbalance which may lead to overfitting. To address these problems, we propose a new crossproject ARB prediction approach based on Joint Distribution Adaptation (JDA) and Improved Subclass Discriminant Analysis (ISDA), called JDA-ISDA. The key idea of JDA-ISDA is first to use JDA to reduce the marginal distribution and conditional distribution difference jointly and then apply ISDA to alleviate the severe class imbalance problem. A set of experiments are carried out on two large open-source projects with six different machine learning (ML) classifiers. The experimental results demonstrate that compared with the state-of-the-art Transfer Learning based Aging-related bug Prediction (TLAP) and Supervised Representation Learning Approach (SRLA), JDA-ISDA is much more robust to different ML classifiers than TLAP, and the average improvement in terms of the balance value can be achieved up to 31.8%, and JDA-ISDA also outperforms TLAP and SRLA on average when logistic regression is chosen as the classifier for best performance prediction.",2020-10,2022-01-22 07:07:18,2024-10-10 12:20:08,,325-334,,,,,,,,,,,,,en-US,,,,,,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>不足：评价模型的指标比较单一（仅考虑了bal），选取的数据集比较有限，选择的系统均为C/C++编写，不确定能扩展到其他系统</p> </div>; <div data-schema-version=""8""><p>概述：基于联合分布适应(JDA)和改进的子类判别分析(ISDA)改进跨项目ARB预测</p> </div>; <div data-schema-version=""8""><p>优点：解决了单个项目中数据集不够的问题</p> </div>",C:\Users\tristone\Zotero\storage\QXP7LDNW\9251079.html; C:\Users\tristone\Zotero\storage\4WSHZUE7\Xu 等 - 2020 - Cross-Project Aging-Related Bug Prediction Based on Joint Distribution Adaptation and Improved Subcl.pdf,,"验证方法：实验实证&对比分析; 会议：ISSRE; 测试方法：静态代码预测; 系统类型：Linux，MySQL; 模型：NB, LR, KNN, DT, RF, and SVM（JDA-ISDA）; 指标：PD（检测概率）、PF（误报概率）、平衡（Balance）; 分析方式：ARB prediction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2020 IEEE 31st International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
6WID275K,conferencePaper,2020,"Wang, Sihang; Liu, Jing",HARRD: Real-time Software Rejuvenation Decision Based on Hierarchical Analysis under Weibull Distribution,"2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)",978-1-72818-913-0,,10.1109/QRS51102.2020.00023,https://ieeexplore.ieee.org/document/9282793/,"Software rejuvenation are developed to mitigate serious consequences caused by software aging mainly through restarting software systems. As such restart actions will temporarily stop the software service, how to select the restart time precisely becomes the core research issue. Current mainstream machine learning based software rejuvenation methods predict the trend of resource usage of hardware parameters to determine the restart time. However the actual aging status in many software systems are not strongly related to the resource usage of hardware parameters, it is not rigorous to deﬁne the aging status with single hardware parameters. In this paper, we propose a novel real-time software rejuvenation decision method, named HARRD, where classic Weibull distribution in the ﬁeld of reliability analysis is well utilized to simulate and model the state transition process of software aging. Then, based on this model with real-time resource usage of hardware monitoring parameters, and together integrating three model indicators, we construct the rejuvenation decision function using the analytic hierarchy process(AHP) to weight above parameters, which could ﬁnally be used as the rejuvenation decision basis for aging software systems. Our rejuvenation decision method could balance the unpredictable factors in software aging process by using accurate simulation models, and consider more indicators for rejuvenation time decision. The experimental results show that the software system based on our proposed method could achieve better software rejuvenation effects in terms of time consumption performance, average task processing speed and system stability.",2020-12,2022-06-29 07:11:04,2024-08-14 07:55:59,2022-06-29 07:11:04,83-90,,,,,,HARRD,,,,,IEEE,"Macau, China",en-US,,,,,,,CCF: C,"<div data-schema-version=""8""><p>概述：提出一种新的混合老化预测模型HARRD，将Weibull分布和层次分析法结合起来更好的预测软件系统的老化状态</p> </div>; <div data-schema-version=""8""><p>优点：解决了单一决策指标的不稳定性缺点</p> </div>",C:\Users\tristone\Zotero\storage\IWCNMW35\Wang和Liu - 2020 - HARRD Real-time Software Rejuvenation Decision Based on Hierarchical Analysis under Weibull Distrib.pdf,,分析方式：Model-based; 重生层级：非特定的; 验证方法：数值分析&实验实证; 老化影响：性能降级; 会议：QRS; 指标：单位时间完成工作量; 模型：HARRD; 系统类型：高可靠性软件系统&移动软件系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2020 IEEE 20th International Conference on Software Quality, Reliability and Security (QRS)",,,,,,,,,,,,,,,
QR7JJ4KP,conferencePaper,2020,"Yakovyna, Vitaliy; Uhrynovskyi, Bohdan",User-Perceived Response Metrics in Android OS for Software Aging detection,2020 IEEE 15th International Conference on Computer Sciences and Information Technologies (CSIT),,,10.1109/CSIT49958.2020.9322031,,"Empirical studies have shown that the Android platform is exposed to the software aging effects. Aging effects, such as poor performance and increased response times for systems and applications, have a negative impact on the user experience. This paper considers user-perceived response metrics: Frame Draw Time and Janky Frames. The proposed metrics are compared with Android Activity Launch Time and memory usage metrics. The expediency of using the proposed metrics in future studies of the aging phenomenon in the Android operating system is substantiated.",2020-09,2022-01-22 06:49:05,2024-09-19 02:10:31,,436-439,,,1.0,,,,,,,,,,en-US,,,,,,,ISSN: 2766-3639 TLDR: This paper considers user-perceived response metrics: Frame Draw Time and Janky Frames and compares them with Android Activity Launch Time and memory usage metrics to show the expediency of using the proposed metrics in future studies of the aging phenomenon in the Android operating system.,"<div data-schema-version=""8""><p>不足：实验结果表明新引入的两种指标与已知老化指标PSS相关性并不大</p> </div>; <div data-schema-version=""8""><p>概述：引入了两个用户感知的指标：帧绘制时间与帧卡顿时间</p> </div>; <div data-schema-version=""8""><p>优点：两种新引进的指标提供了构建连续时间序列的能力</p> </div>",C:\Users\tristone\Zotero\storage\UTZ3SW8V\9322031.html; C:\Users\tristone\Zotero\storage\HPEDU3AS\Yakovyna和Uhrynovskyi - 2020 - User-Perceived Response Metrics in Android OS for Software Aging detection.pdf,,老化影响：非特定的; 系统类型：Android; 会议：CSIT; 验证方法：实验实证; 分析方式：度量; 模型：时间序列; 指标：帧绘制时间，帧卡顿时间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2020 IEEE 15th International Conference on Computer Sciences and Information Technologies (CSIT),,,,,,,,,,,,,,,
IWBGU7FE,conferencePaper,2020,"Liu, Qinchen; Xiang, Jianwen; Xu, Bin; Zhao, Dongdong; Hu, Wenhua; Wang, Jian",Aging-Related Bugs Prediction Via Convolutional Neural Network,2020 7th International Conference on Dependable Systems and Their Applications (DSA),,,10.1109/DSA51864.2020.00020,,"Software aging refers to the phenomenon of system performance degradation or system crash in long-term running systems, which is mainly caused by Aging-Related Bugs (ARBs). To predict Aging-Related Bugs, previous studies usually focused on manually designing features, which extracted from the programs, and utilized different machine learning algorithms to detect those buggy codes. However, these traditional features often failed to distinguish programs' semantic differences.To explore deeply programs' semantics and make full use of these information, in this paper, we proposed a method, which based on deep learning method to automatically learn programs' semantic features of source codes. Specifically, we utilized Convolutional Neural Network (CNN) to automatically generate more distinguished features which based on the Abstract Syntax Trees (ASTs) of programs. Meanwhile, we combined these features with conventional aging-related metrics for more accurate ARB prediction. Finally, we evaluated our model on Linux and MySQL datasets, the experiment results showed that our approach was better than the baselines. The improvement can be achieved up to 6.9% on Linux, and 24.1% on MySQL in terms of balance, compared to traditional Naive Bayes method. And compared to Naive Bayes with logarithmic transformation, the improvement is 1% and 4.7% respectively.",2020-11,2023-01-04 07:34:45,2024-10-10 12:20:00,,90-98,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：基于深度学习方法的自动学习源代码中程序语义特征的方法，并与传统的ARB指标相结合来更准确的预测ARB</p> </div>",C:\Users\tristone\Zotero\storage\VV4J5ARE\Liu 等 - 2020 - Aging-Related Bugs Prediction Via Convolutional Neural Network.pdf,,验证方法：实验实证&比较分析; 测试方法：静态代码预测; 系统类型：Linux，MySQL; 会议：DSA; 模型：CNN; 指标：传统老化指标; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2020 7th International Conference on Dependable Systems and Their Applications (DSA),,,,,,,,,,,,,,,
2Y5Q4YEY,conferencePaper,2020,"Hao, Zeming; Liu, Jing",GAN-ASD: Precise Software Aging State Detection for Android System Based on BEGAN Model and State Clustering,"2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)",,,10.1109/CCGrid49817.2020.00-72,,"Software applications may become no response or stop running due to performance degradation, system crashes, or program cumulative failures, after long-term execution in Android system. These phenomena have been validated to be common in mobile systems which is caused by software aging. To handle the software aging dilemma, software rejuvenation is an efficient way. In order to make rejuvenation more efficient, identifying the aging state of Android system precisely is the key point. In this paper, we propose a novel Android system aging state detection method based on the Boundary Equilibrium Generative Adversarial Network (BEGAN) and state clustering technology, which is named as GAN-ASD. The method has three phases: Firstly, Interpolation Clipping Processing is used to processes the time series dataset which is constituted by the sample of Android Aging Indicators. Secondly, according to the time series dataset, BEGAN based generation method will fit the user's usage habits and generate the dataset which has software aging characteristics. At last, we use the generative dataset to train a K-Means clustering model. With the trained model, we can precisely determine whether the current Android system enters into the aging state or remains in the normal state. In order to validate the effectiveness of the GAN-ASD, we use two evaluation criterion in our comparison experiment. One is rejuvenation coefficient (RC) which evaluates the user experience and the other one is rejuvenation frequency (RF) which evaluates the rejuvenation cost. The results show that our method performs better than the fixed-interval rejuvenation and random rejuvenation operations.",2020-05,2022-01-22 07:04:45,2024-08-14 07:55:54,,212-221,,,,,,GAN-ASD,,,,,IEEE,,en-US,,,,,,,,"<div data-schema-version=""8""><p>概述：基于BEGAN和状态聚类技术的Android系统老化状态检测方法</p> </div>; <div data-schema-version=""8""><p>优点：可以在低质量样本数据集的基础上生成改进的系统运行数据集</p> </div>",C:\Users\tristone\Zotero\storage\U7EI8FFG\Hao和Liu - 2020 - GAN-ASD Precise Software Aging State Detection for Android System Based on BEGAN Model and State Cl.pdf; C:\Users\tristone\Zotero\storage\43NKFZMG\9139705.html,,分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 老化影响：非特定的; 系统类型：Android; 重生层级：操作系统; 会议：CCGRID; 模型：GAN-ASD; 指标：RC（重生系数），RF（重生频率）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2020 20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGRID)",,,,,,,,,,,,,,,
YMND4R9S,journalArticle,2019,"Qiao, Yu; Zheng, Zheng; Fang, Yunyu; Qin, Fangyun; Trivedi, Kishor S.; Cai, Kai-Yuan",Two-Level Rejuvenation for Android Smartphones and Its Optimization,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2018.2881306,,"The Android operating system (OS) is a sophisticated man-made system and is the dominant OS in the current smartphone market. Due to the accumulation of errors in the system internal state and the incremental consumption of resources, such as the Dalvik heap memory of software applications and the physical memory, software aging is observed frequently and recognized as a chronic problem of Android smartphones. To mitigate this problem, we propose a two-level software rejuvenation, with the two levels referring to software applications and the OS, in this paper. Based on this strategy, a Markov regenerative process model is constructed to evaluate the steady-state availability and to optimize the time required to trigger rejuvenation for Android smartphones. The parameters of the model, such as the degradation rate and failure rate of software applications and the Android OS, are obtained via our testing platform. Experiments on two real Android applications show that the availability of an Android smartphone increases by 10.81% and 10.18% for the two subjects in our experiments, respectively. An empirical study comparing our two-level strategy with one-level strategies (single application-level and system-level rejuvenation) further verifies the effectiveness of our approach.",2019-06,2022-05-25 07:54:35,2024-09-22 07:52:40,,633-652,,2.0,68.0,,IEEE Trans. Rel.,,,,,,,,en-US,,,,,5.883,2.0,"Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C TLDR: A Markov regenerative process model is constructed to evaluate the steady-state availability and to optimize the time required to trigger rejuvenation for Android smartphones, and shows that the availability of an Android smartphone increases by 10.81% and 10.18% for the two subjects in the authors' experiments, respectively.","<div data-schema-version=""8""><p>不足：仅考虑内存消耗的老化影响，植入作者人为构建的内存泄漏缺陷已达到稳定的内存增长，而在真实情况下，类似的内存泄漏可能直接被系统清理机制清理掉，实验过于理想化</p> </div>; <div data-schema-version=""8""><p>概述：安卓手机的双层级重生模型</p> </div>; <div data-schema-version=""8""><p>优点：考虑了操作系统和应用程序两个层级的重生策略；模型状态中考虑了LMK状态，更贴近真实</p> </div>",C:\Users\tristone\Zotero\storage\TGXDDJSC\8556513.html; C:\Users\tristone\Zotero\storage\T7UXIN55\Qiao 等 - 2019 - Two-Level Rejuvenation for Android Smartphones and Its Optimization.pdf,,验证方法：实验实证&对比分析; 系统类型：Android; 老化影响：内存泄漏; 期刊：TR; 模型：MRGP; 重生策略：双层级重生; 重生层级：应用程序&操作系统; 指标：Dalvik堆内存&物理内存；steady-state availability; 分析方式：Hybrid&rej,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4DD35YD6,journalArticle,2019,"Liu, Jing; Meng, Lingze",Integrating Artificial Bee Colony Algorithm and BP Neural Network for Software Aging Prediction in IoT Environment,IEEE Access,,2169-3536,10.1109/ACCESS.2019.2903081,,"Software aging is a common phenomenon that exists in systems that require long periods of operation, especially in Internet-of-Things environments. The back propagation (BP) neural network has been adopted widely to predict the trend of software aging. However, the weight and threshold of the BP neural network are randomly initialized, so it is easy to get the unsatisfactory local optimal solutions and the convergence speed of computing is slow. In this paper, we propose a novel software aging prediction method using the artificial bee colony algorithm to optimize the BP neural network model for achieving better software aging prediction accuracy. The experiment results show that our method fits the prediction trend of software aging more accurately than the traditional BP neural network, and our method also has faster convergence speed and more stable prediction results.",2019,2022-01-22 07:08:33,2024-10-12 06:22:06,,32941-32948,,,7.0,,IEEE Access,,,,,,,,en-US,,,,,3.476,3.0,Conference Name: IEEE Access JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 3.4 5年影响因子: 3.7 EI: 是 TLDR: A novel software aging prediction method using the artificial bee colony algorithm to optimize the BP neural network model for achieving better software Aging prediction accuracy and faster convergence speed and more stable prediction results are proposed.,"<div data-schema-version=""8""><p>不足：？</p> </div>; <div data-schema-version=""8""><p>概述：利用人工蜂群算法对BP神经网络进行优化，并应用在软件老化的预测当中</p> </div>; <div data-schema-version=""8""><p>优点：收敛速度与精准度比BP网络更优</p> </div>",C:\Users\tristone\Zotero\storage\KKQXVQNE\8660633.html; C:\Users\tristone\Zotero\storage\WR4SS766\Liu和Meng - 2019 - Integrating Artificial Bee Colony Algorithm and BP Neural Network for Software Aging Prediction in I.pdf,,分析方式：Measurement-based（ML）; 会议：ACCESS; 老化影响：崩溃/挂起故障&性能降级; 模型：ABC-BP; 系统类型：物联网; 验证方法：实验实证&对比分析; 指标：Dalvik堆内存&物理内存；steady-state availability; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2Q6MH6NQ,conferencePaper,2019,"Guedes, Erico; Maciel, Paulo",Stochastic Model for Availability Analysis of Service Function Chains using Rejuvenation and Live Migration,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2019.00074,https://ieeexplore.ieee.org/document/8990273,"Service function chains aim to replace proprietary and expensive appliances by similar ones provided through virtual services running over some virtualization technique. Such a replacement put pressure over availability because proprietary devices are hardware-based, i.e., more reliable. To tackle this issue, we propose a modeling approach to produce recommendations of high available cloud infrastructures responsible for the provision of VNF chains. Our proposal is based on rejuvenation of both cloud infrastructure and SFC adopting conditional virtual machines live migration. We performed SFC migration experiments in an assembled high available private cloud based on openstack to measure live migration times and inject these values into proposed models. The results of the presented case studies show that so-called five 9's availability can be reached in a 2N redundant environment.",2019-10,2024-09-02 12:55:04,2024-10-07 12:42:33,2024-09-02 12:55:04,211-217,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\V3TGF4HW\Guedes和Maciel - 2019 - Stochastic Model for Availability Analysis of Service Function Chains using Rejuvenation and Live Mi.pdf; C:\Users\tristone\Zotero\storage\28U2MW32\8990273.html,,模型：SPN; 分析方式：Model-based&rej; 会议：ISSREW; 验证方法：实验实证; 重生层级：VMM，动态VM迁移; 重生策略：基于时间; 系统类型：云（VMM）SFC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
6GTBL966,conferencePaper,2019,"Andrade, Ermeson; Machida, Fumio",Analysis of Software Aging Impacts on Plant Anomaly Detection with Edge Computing,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2019.00073,,"Edge computing allows data-intensive analytic processes running on a cloud server to migrate to a local computing environment near the data sources, and as a result the architecture can benefit from a significant bandwidth reduction as well as improved security. However, due to the scarcity of resources on an edge device, a problem of software aging is likely to occur after longtime execution. The consequence of software aging should be significant, whereas such a risk has not been studied in the previous literature. In this paper, we propose a deterministic and stochastic Petri Net (DSPN) to quantitatively analyze the impacts of software aging phenomenon on a cyber-physical system using edge computing. As a data analytic application using real-world sensor data, we consider anomaly detection for a water treatment plant. We introduce two application-oriented performance measures, namely detection loss probability and the expected number of false alarms in terms of plant anomaly detection. Our numerical and simulation experiments on the proposed DSPN show that software aging clearly has negative impacts on the defined performance measures that reveal the necessity of greater attention to software aging issues in edge computing systems.",2019-10,2023-01-12 03:42:47,2024-08-14 08:07:57,,204-210,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>备注：模型与实际工厂操作相关</p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一个确定性和随机Petri网，利用边缘计算定量分析软件老化现象对网络物理系统的影响</span></p> </div>",C:\Users\tristone\Zotero\storage\73A8VQAA\Andrade和Machida - 2019 - Analysis of Software Aging Impacts on Plant Anomaly Detection with Edge Computing.pdf; C:\Users\tristone\Zotero\storage\2K3B9MPK\8990213.html,,分析方式：Model-based; 老化影响：性能降级; 模型：DSPN; 会议：ISSREW; 系统类型：CPS; 验证方法：仿真模拟&数值分析; 指标：警报传输时间，带宽，信号丢失率，误报数,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
KVE7RHGJ,conferencePaper,2019,"Cotroneo, Domenico; De Simone, Luigi; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",A Configurable Software Aging Detection and Rejuvenation Agent for Android,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2019.00078,,"This paper presents the design of ADaRTA, an aging detection and rejuvenation tool for Android. The tool is a software agent which i) performs selective monitoring of system processes and of trends in system performance indicators; ii) detects the aging state and estimates the time-to-aging-failure, through heuristic rules; iii) schedules and applies rejuvenation, based on the estimated time-to-aging-failure. The agent rules and parameters have been defined for ease of configuration and tuning by device designers. A stress testing experiment is discussed, showing ADaRTA's configurability for the device under test, and the ability of detecting the aging state to prevent device enter a failure state.",2019-10,2022-01-22 06:58:33,2024-09-24 07:19:18,,239-245,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：老化指标依据的是以往的研究，重生级别也比较粗粒度</p> </div>; <div data-schema-version=""8""><p>概述：提出了ADaRTA，可以自动化软件老化监视并重生过程</p> </div>; <div data-schema-version=""8""><p>优点：是一种完全自动化的工具，可以实时监视系统和工作负载，达到一定阈值时会触发重生操作</p> </div>",C:\Users\tristone\Zotero\storage\5YFMAFFF\Cotroneo 等 - 2019 - A Configurable Software Aging Detection and Rejuvenation Agent for Android.pdf; C:\Users\tristone\Zotero\storage\96GBV7DU\8990289.html,,系统类型：Android; 会议：ISSREW; 验证方法：实验实证; 重生层级：应用程序&操作系统; 老化影响：崩溃/挂起故障&性能降级&内存耗尽; 指标：Dalvik堆内存&物理内存；steady-state availability; 分析方式：Measurement-based（统计+阈值）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
H9ALT7VT,conferencePaper,2019,"Liu, Jing; Tan, Xueyong; Wang, Yan",CSSAP: Software Aging Prediction for Cloud Services Based on ARIMA-LSTM Hybrid Model,2019 IEEE International Conference on Web Services (ICWS),,,10.1109/ICWS.2019.00055,,"Cloud services typically compose of multiple distributed software components that communicate with each other through web service interfaces in the cloud environments. During their long time running, the accumulation of cloud software internal errors or large consumption of computing resources will very likely lead to software aging problems. In order to solve this problem, software rejuvenation technology is proposed to prevent them from causing more serious failures by restarting the services running. In the research field of software aging and rejuvenation for cloud services, how to accurately predict the cloud resource consumption in the aging software system for determining suitable time to perform rejuvenation is a significant and indispensable issue. In this paper, a novel hybrid aging prediction model named CSSAP is proposed, which well integrates the Autoregressive Integrated Moving Average (ARIMA) model and Long Short Term Memory (LSTM) model for better fitting the linear pattern and mining the nonlinear relationship in the time series of computing resource usage data for cloud services. The experiments results show that through such hybrid and unified time series analysis, our CASSP prediction method has 4% to 71% improvements in MAE evaluation criteria and 6% to 66% improvements in RMSE evaluation criteria under different time series scenarios compared with single model used, that is, the more accurate and more comprehensive aging prediction results achieved by CSSAP is definitely conducive to perform more effective and more efficient software aging and rejuvenation for cloud services.",2019-07,2022-01-22 06:50:59,2024-09-24 12:14:46,,283-290,,,,,,CSSAP,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：文章中两种模型只是简单的相加，会影响预测的准确性</p> </div>; <div data-schema-version=""8""><p>概括：一种结合时间序列模型ARIMA和神经网络LSTM的混合老化预测模型，预测云服务软件老化</p> </div>; <div data-schema-version=""8""><p>优点：将线性ARIMA模型与非线性LSTM模型相结合，使得混合模型比单一模型有更好的效果</p> </div>",C:\Users\tristone\Zotero\storage\6LRRYL7X\8818425.html; C:\Users\tristone\Zotero\storage\K43V5I45\Liu 等 - 2019 - CSSAP Software Aging Prediction for Cloud Services Based on ARIMA-LSTM Hybrid Model.pdf,,会议：ICWS; 老化影响：崩溃/挂起故障&性能降级; 系统类型：云; 验证方法：实验实证&对比分析; 指标：cost（rej、nodefail、sysfail）、system unavailability；; 重生层级：节点; 分析方式：Measurement-based（时间序列+ML）; 模型：CSSAP（ARIMA+LSTM）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 IEEE International Conference on Web Services (ICWS),,,,,,,,,,,,,,,
FR63F2H5,conferencePaper,2019,"Wan, Xiaohui; Zheng, Zheng; Qin, Fangyun; Qiao, Yu; Trivedi, Kishor S.",Supervised Representation Learning Approach for Cross-Project Aging-Related Bug Prediction,2019 IEEE 30th International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE.2019.00025,https://ieeexplore.ieee.org/document/8987459,"Software aging, which is caused by Aging-Related Bugs (ARBs), tends to occur in long-running systems and may lead to performance degradation and increasing failure rate during software execution. ARB prediction can help developers discover and remove ARBs, thus alleviating the impact of software aging. However, ARB-prone files occupy a small percentage of all the analyzed files. It is usually difficult to gather sufficient ARB data within a project. To overcome the limited availability of training data, several researchers have recently developed cross-project models for ARB prediction. A key point for cross-project models is to learn a good representation for instances in different projects. Nevertheless, most of the previous approaches neither consider the reconstruction property of new representation nor encode source samples' label information in learning representation. To address these shortcomings, we propose a Supervised Representation Learning Approach (SRLA), which is based on double encoding-layer autoencoder, to perform cross-project ARB prediction. Moreover, we present a transfer cross-validation framework to select the hyper-parameters of cross-project models. Experiments on three large open-source projects demonstrate the effectiveness and superiority of our approach compared with the state-of-the-art approach TLAP.",2019-10,2024-08-14 06:49:00,2024-10-10 12:19:56,2024-08-14 06:49:00,163-172,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一种用于跨项目ARB预测的监督表示学习方法</span></p> </div>; <div data-schema-version=""8""><p>优点：考虑新表示的重构特性，在学习表示中编码源样本的标签信息；比TLAP更有效</p> </div>",C:\Users\tristone\Zotero\storage\MCE6RW3J\8987459.html; ; C:\Users\tristone\Zotero\storage\IXUUUKHP\Wan 等 - 2019 - Supervised Representation Learning Approach for Cross-Project Aging-Related Bug Prediction.pdf,https://www.semanticscholar.org/paper/Supervised-Representation-Learning-Approach-for-Bug-Wan-Zheng/1b5b7186c985e01057b024c3c10b2642ce18a3b3,验证方法：实验实证&比较分析; 会议：ISSRE; 老化影响：非特定的; 测试方法：静态代码预测; 系统类型：Linux，MySQL，Apache HTTPD; 模型：LR+SRLA、TLDA、URLA、TLAP; 指标：度量相关复杂性指标；PD，PF，Bal; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 IEEE 30th International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
EBV43Z3C,conferencePaper,2019,"Torquato, Matheus; Vieira, Marco",An Experimental Study of Software Aging and Rejuvenation in Dockerd,2019 15th European Dependable Computing Conference (EDCC),,,10.1109/EDCC.2019.00014,,"Virtualized containers are being extensively used to host applications as they substantially reduce the overhead caused by conventional virtualization techniques. Therefore, as containers adoption grows, the need for dependability also increases. Dockerd, the process that is in charge of Docker containers management, is supposed to support long-running systems, which makes it prone to the well-known problem of software aging. This paper presents an experimental study of software aging and rejuvenation targeting the dockerd daemon. We used the SWARE approach to conduct the experimentation, which encompasses three phases: i) stress - stress environment with the accelerated workload to induce bugs activation; ii) wait - stop the workload submission to observe possible accumulated effects and; iii) rejuvenation - submit a rejuvenation action to perceive changes in the internal software state. The experiment runs for 26 days, and results show that dockerd suffers from software aging effects after the stress phase. The accumulated effects remain in the system until a complete cleanup, comprising removing all the containers and rebooting the operating system.",2019-09,2023-01-12 03:43:37,2024-09-22 07:51:30,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2641-810X,"<div data-schema-version=""8""><p>备注：<span style=""color: rgb(0, 0, 0)"">第一个在Docker架构中调查软件老化和重生的研究</span></p> </div>; <div data-schema-version=""8""><p>概述：针对dockerd守护进程的软件老化和重生的实验研究</p> <p></p> </div>",C:\Users\tristone\Zotero\storage\5YMG6XLU\8893292.html; C:\Users\tristone\Zotero\storage\URQP72GK\Torquato和Vieira - 2019 - An Experimental Study of Software Aging and Rejuvenation in Dockerd.pdf,,老化影响：崩溃/挂起故障; 验证方法：实验实证; 分析方式：度量; 指标：内存，CPU利用率; 系统类型：Docker; 会议：EDCC; 重生层级：容器&操作系统; 实验时长：26天,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2019 15th European Dependable Computing Conference (EDCC),,,,,,,,,,,,,,,
IA4AGQRS,journalArticle,2018,"Torquato, Matheus; Araujo, Jean; Umesh, I. M.; Maciel, Paulo",SWARE: A Methodology for Software Aging and Rejuvenation Experiments,Journal of Information Systems Engineering & Management,,24684376,10.20897/jisem.201815,http://www.jisem-journal.com/article/sware-a-methodology-for-software-aging-and-rejuvenation-experiments,"Reliability and availability are mandatory requirements for numerous applications. Technical apparatus to study system dependability is essential to support software deployment and maintenance. Software aging is a related issue in this context. Software aging is a cumulative process which leads systems with long-running execution to hangs or failures. Software rejuvenation is used to prevent software aging problems. Software rejuvenation actions comprise system reboot or application restart to bringing software to a stable fresh state. This paper proposes a methodology to conduct software aging and software rejuvenation experiments. The approach has three phases: (i) Stress Phase - stress environment with the accelerated workload to induce bugs activation; (ii) Wait Phase - stop workload submission to observe the system state after workload submission; (iii) Rejuvenation Phase - find the impacts caused by the software rejuvenation. We named our methodology as SWARE (Stress-Wait-Rejuvenation). To validate the SWARE methodology, we present a case study. This case study consists of an experiment of VM Live Migration as rejuvenation mechanism for VMM software aging. The considered testbed is a Private Cloud with OpenNebula and KVM 1.0. The obtained results show that VM live migration is useful as rejuvenation for VMM software aging.",2018-04-07,2022-06-02 12:14:44,2024-10-03 14:27:23,2022-06-02 12:14:44,,,2.0,3.0,,Journal of Information Systems Engineering & Management,SWARE,,,,,,,en-US,,,,,,,"TLDR: A methodology to conduct software aging and software rejuvenation experiments as well as a case study of VM live migration as rejuvenation mechanism for VMM software aging, named as SWARE (Stress-Wait-Rejuvenation).","<div data-schema-version=""8""><p>不足：没有量化老化效应，很难定义软件老化失效时间和重生时间，该方法可能需要很长时间才能产生预期结果</p> </div>; <div data-schema-version=""8""><p>概述：一种全面的软件重生策略，其中包括压力测试阶段、感知软件老化指标阶段和重生阶段</p> </div>; <div data-schema-version=""8""><p>优点：一种软件老化重生的通用方法</p> </div>",C:\Users\tristone\Zotero\storage\4JEHJTKR\Torquato 等 - 2018 - SWARE A Methodology for Software Aging and Rejuvenation Experiments.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：实验实证&对比分析; 指标：cost（rej、nodefail、sysfail）、system unavailability；; 重生层级：节点; 模型：JISE; 期刊：J MANAGE INFORM SYST; 系统类型：KVM; 分析方式：testing&rej; 重生方法：虚拟机实时迁移,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
349EYIR6,journalArticle,2018,"Chen, Pengfei; Qi, Yong; Li, Xinyi; Hou, Di; Lyu, Michael Rung-Tsong",ARF-Predictor: Effective Prediction of Aging-Related Failure Using Entropy,IEEE Transactions on Dependable and Secure Computing,,1941-0018,10.1109/TDSC.2016.2604381,,"Even well-designed software systems suffer from chronic performance degradation, also known as “software aging”, due to internal (e.g., software bugs) or external (e.g., resource exhaustion) impairments. These chronic problems often fly under the radar of software monitoring systems before causing severe impacts (e.g., system failures). Therefore, it is a challenging issue how to timely predict the occurrence of failures caused by these problems. Unfortunately, the effectiveness of prior approaches are far from satisfactory due to the insufficiency of aging indicators adopted by them. To accurately predict failures caused by software aging which are named as Aging-Related Failure (ARFs), this paper presents a novel entropy-based aging indicator, namely Multidimensional Multi-scale Entropy (MMSE) which leverages the complexity embedded in runtime performance metrics to indicate software aging. To the best of our knowledge, this is the first time to leverage entropy to predict ARFs. Based upon MMSE, we implement three failure prediction approaches encapsulated in a proof-of-concept prototype named ARF-Predictor. The experimental evaluations in a Video on Demand (VoD) system, and in a real-world production system, AntVision, show that ARF-Predictor can predict ARFs with a very high accuracy and a low Ahead-Time-To-Failure (ATTF). Compared to previous approaches, ARF-Predictor improves the prediction accuracy by about 5 times and reduces ATTF even by 3 orders of magnitude. In addition, ARF-Predictor is light-weight enough to satisfy the real-time requirement.",2018-07,2022-04-10 08:18:19,2024-09-19 11:50:20,,675-693,,4.0,15.0,,IEEE Trans. Depend. Sec. Comput.,ARF-Predictor,,,,,,,en-US,,,,,6.791,2.0,"Conference Name: IEEE Transactions on Dependable and Secure Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 CCF: A TLDR: A novel entropy-based aging indicator, namely Multidimensional Multi-scale Entropy (MMSE) which leverages the complexity embedded in runtime performance metrics to indicate software aging and is the first time to leverage entropy to predict ARFs.","<div data-schema-version=""8""><p>不足：预测方法的参数难以确定</p> </div>; <div data-schema-version=""8""><p>概述：第一次将熵的概念引入到老化指标当中</p> </div>; <div data-schema-version=""8""><p>优点：提出了一种新式的老化指标衡量方式，解决了已有研究的老化指标不稳定的问题</p> </div>",C:\Users\tristone\Zotero\storage\QMW4VIBN\Chen 等 - 2018 - ARF-Predictor Effective Prediction of Aging-Related Failure Using Entropy.pdf; C:\Users\tristone\Zotero\storage\769BYLNR\7556343.html,,验证方法：实验实证&对比分析; 老化影响：非特定的; 重生层级：非特定的; 期刊：TDSC; 分析方式：度量; 模型：MMSE; 系统类型：视频点播系统与真实世界生产系统; 指标：熵,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CUEMBE75,journalArticle,2018,"Ficco, Massimo; Pietrantuono, Roberto; Russo, Stefano",Aging-related performance anomalies in the apache storm stream processing system,Future Generation Computer Systems,,0167-739X,10.1016/j.future.2017.08.051,https://www.sciencedirect.com/science/article/pii/S0167739X17319027,"Event stream processing has recently emerged as a popular paradigm for implementing high-volume distributed (near-)real time data processing applications. Several open source systems are today available, supporting the development of such applications, many of which developed with the technologies of the Apache Software Foundation. These so called stream processors are long-running complex software systems which may be affected by software aging, a well-known phenomenon among operation engineers, consisting of a progressive increase in the failure rate or in performance degradation of a software system over time. We address the problem of identifying symptoms and sources of software aging in the Apache Storm event stream processing system; this helps to identify proper strategies to prevent or mitigate anomalous behaviors in production environments. To this aim, we present an experimental study investigating aging manifestations in a popular system, namely Apache Storm. Results show that Storm presents anomalous behaviors in long runs, which prevent some topologies from working continuously. These can be attributed to software aging, due to Storm internal resource management mechanisms influenced by the garbage collector and the memory assigned to worker processes. We discuss the aging-related Apache Storm behaviors, and we experiment rejuvenation actions, showing that they are actually able to remove them.",2018-09-01,2023-01-09 14:52:16,2024-10-12 03:37:01,2023-01-09 14:52:16,975-994,,,86.0,,Future Gener. Comp. Sy.,,,,,,,,en,,,,,ScienceDirect,,"EI: 是 CCF: C TLDR: This work addresses the problem of identifying symptoms and sources of software aging in the Apache Storm event stream processing system, and discusses the aging-related Apache Storm behaviors, and experiment rejuvenation actions, showing that they are actually able to remove them.","<div data-schema-version=""8""><p>概述：找到apache storm中的老化来源，并验证了重生的恢复效果。</p> </div>",C:\Users\tristone\Zotero\storage\MRN5W4E5\Ficco 等 - 2018 - Aging-related performance anomalies in the apache storm stream processing system.pdf; C:\Users\tristone\Zotero\storage\QYT9IGI2\Ficco 等 - 2018 - Aging-related performance anomalies in the apache storm stream processing system.pdf; C:\Users\tristone\Zotero\storage\7J8U4LRT\S0167739X17319027.html,,系统类型：服务器; 验证方法：实验实证; 老化影响：性能降级&内存消耗&工作负载&垃圾收集; 期刊：FGCS; 指标：CPU、PSS、USSSWAP等内存; 分析方式：度量&Measurement-based（阈值）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VKCV5MVG,conferencePaper,2018,"Huo, Shouyu; Zhao, Dongdong; Liu, Xing; Xiang, Jianwen; Zhong, Yingshou; Yu, Haiguo",Using Machine Learning for Software Aging Detection in Android System,2018 Tenth International Conference on Advanced Computational Intelligence (ICACI),,,10.1109/ICACI.2018.8377553,,"Software aging is a common experience in Android operating system, as the gradual performance degradation is usually complained by the users. However, the mathematical modelling and detection of such experience is still an emerging issue due to the complexity and relatively young age of Android. This paper applies and compares three machine learning algorithms, namely decision tree, Support Vector Machine (SVM), and Deep Belief Network (DBn), for the detection of software aging in Android. In addition to the traditional aging indicator of launch time (LT), this paper also investigates the effectiveness of page fault (PF) and multiple labels (i.e., the combination of LT and PF). Experimental results show that the accuracy of DBN is comparable to decision tree and SVM when the data volume increases to 5000, which means DBN and other similar algorithms suitable for high dimensional and large data may also play a role in software aging. The results also reveal that PF is a little more stable than LT in terms of variance of accuracy, and it can also be used a good indicator for aging of Android. However, the performance of multiple labels is not improved in our experiments. The observations of this paper are supposed to assist further analysis of software aging in Android and the design of corresponding rejuvenation methods.",2018-03,2022-03-07 09:30:36,2024-09-24 09:28:57,,741-746,,,,,,,,,,,IEEE,,en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：仅使用了8款app进行实验</p> </div>; <div data-schema-version=""8""><p>概述：实验实证了决策树、支持向量机以及深度信赖网络在软件老化检测中的有效性</p> </div>; <div data-schema-version=""8""><p>优点：老化指标中增加了页面故障，实验表明其比启动时间更稳定</p> </div>",C:\Users\tristone\Zotero\storage\XCAHJYY9\Huo 等 - 2018 - Using Machine Learning for Software Aging Detection in Android System.pdf; C:\Users\tristone\Zotero\storage\FDMXPLQ4\8377553.html,,"分析方式：度量&Measurement-based（ML）; 验证方法：实验实证&对比分析; 系统类型：Android; 会议：ICACI; 老化影响：启动时间延长，页面故障增加; 模型：decision tree, SVM, DBN; 指标：LT，页面故障",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2018 Tenth International Conference on Advanced Computational Intelligence (ICACI),,,,,,,,,,,,,,,
TL5UQEBA,conferencePaper,2018,"Li, Jingwei; Qi, Yong; Cai, Lin",A Hybrid Approach for Predicting Aging-Related Failures of Software Systems,2018 IEEE Symposium on Service-Oriented System Engineering (SOSE),,,10.1109/SOSE.2018.00021,https://ieeexplore.ieee.org/document/8359154/?arnumber=8359154,"Software aging is a chronic process that is hidden under system monitoring until a system failure occurs. Aging related failures (ARFs) are the result of a variety of complex factors. Therefore, how to precisely predict the ARFs for a running software system is a challenge problem. Previous studies typically predict ARFs by means of predicting the time to resource exhaustion (TTE), which adopts resource data as aging indicators to predict when the resource data achieve the preset threshold. However, the practical effect of prior approaches are far from satisfactory due to lack of effective aging indicators and difficult to set accurate threshold. In this paper, we propose a hybrid approach, which combines model and measurements to construct a probabilistic aging indicator. The aging indicator is a multifactorial aging indicator that is more effective than traditional ones. Moreover, the hybrid approach is threshold-free in ARFs prediction. We evaluate the hybrid approach in Data caching system and Media streaming system, the results show that the hybrid approach can achieve high precision and recall for ARFs prediction. Compared to previous approaches, our approach increases the prediction precision and recall significantly.",2018-03,2024-07-29 09:18:57,2024-10-11 08:42:32,2024-07-29 09:18:57,96-105,,,,,,,,,,,,,,,,,,IEEE Xplore,,"TLDR: A hybrid approach, which combines model and measurements to construct a probabilistic aging indicator that is more effective than traditional ones is proposed, which is threshold-free in ARFs prediction and can achieve high precision and recall.","<div data-schema-version=""8""><p>本文提出了一种混合方法，结合了模型和运行时测量，构建了概率性老化指标，通过分析多因素对故障概率的影响来描述老化过程</p> </div>",C:\Users\tristone\Zotero\storage\F527UEKH\8359154.html; C:\Users\tristone\Zotero\storage\92TCTELZ\Li 等 - 2018 - A Hybrid Approach for Predicting Aging-Related Failures of Software Systems.pdf,,验证方法：实验实证&对比分析; 老化影响：性能降级; 分析方式：Hybrid; 模型：Cox比例风险模型，Weibull分布; 系统类型：数据缓存系统，媒体流系统; 指标：响应时间，平均延迟，内存，CPU利用率，内核（周期，指令缓存丢失，上下文切换）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2018 IEEE Symposium on Service-Oriented System Engineering (SOSE),,,,,,,,,,,,,,,
SS2KEQ5L,conferencePaper,2018,"Torquato, Matheus; Vieira, Marco",Interacting SRN Models for Availability Evaluation of VM Migration as Rejuvenation on a System under Varying Workload,2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2018.00022,https://ieeexplore.ieee.org/document/8539211,"This paper presents a set of analytical models for availability evaluation of a virtualized system with VMM software rejuvenation enabled by VM migration schedule. The proposed models consider aspects of varying workload. We adopted the interacting models approach to reduce time and cost for models' evaluation. Our metrics of interest are steady-state availability and annual downtime. In our first case study, we compare the monolithic model and interacting models approach. Obtained results show a significant reduction in time for model evaluation in the interacting models approach. Our second case study presents a variety of scenarios with a varying workload. We consider the workload variation with two stages: i) peak - when the workload submitted is high; and ii) off-peak - when the workload submitted is low. The evaluation results comprise from systems without high workload demand (peakDuration = 0h per day) to systems with only high workload demand (peakDuration = 24h per day). For all considered scenarios, we present the best rejuvenation schedule to maximize system availability. In scenarios with a heavy workload, the downtime avoidance caused by software rejuvenation surpass three days.",2018-10,2024-09-02 12:50:22,2024-10-03 14:27:20,2024-09-02 12:50:22,300-307,,,,,,,,,,,,,,,,,,IEEE Xplore,,TLDR: A set of analytical models for availability evaluation of a virtualized system with VMM software rejuvenation enabled by VM migration schedule considers aspects of varying workload and shows a significant reduction in time for model evaluation in the interacting models approach.,,C:\Users\tristone\Zotero\storage\APUTB3T9\8539211.html; C:\Users\tristone\Zotero\storage\P66H8JNC\Torquato和Vieira - 2018 - Interacting SRN Models for Availability Evaluation of VM Migration as Rejuvenation on a System under.pdf,,老化影响：崩溃/挂起故障; 分析方式：Model-based&rej; 会议：ISSREW; 验证方法：实验实证; 模型：SRN; 重生层级：VMM，动态VM迁移; 系统类型：云（VMM）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
R32KEQ5I,conferencePaper,2018,"Qiao, Yu; Zheng, Zheng; Fang, YunYu",An Empirical Study on Software Aging Indicators Prediction in Android Mobile,2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2018.00018,,"The requirements for high reliability, availability, and performance of mobile devices have increased significantly. Android is the most widely used mobile operating system in the world, and it is affected by software aging, resulting in poor responsiveness. This paper investigates the software aging indicators prediction in Android, focusing on aging indicators such as system's free physical memory and application's heap memory. Due to the various user behavior sequences for Android applications and system, we utilize Long Short-Term Memory Neural Network (LSTM NN), which could capture the hidden long-term dependence in a time series to predict these aging indicators. We analyze the prediction results with traditional evaluation metrics like MAPE/MSE for evaluating the whole prediction performance, and with our proposed evaluation metrics TA, FA, SVA for evaluating the trend, fluctuation, and small variation of aging indicators respectively. The results show that LSTM NN has superior performance compared with other prediction methods in the history of software aging researches. Based on the results, proactive management techniques like software rejuvenation could be scheduled by predicting the proper moment to alleviate software aging effects and increase the availability of Android mobile.",2018-10,2022-03-15 09:29:43,2024-08-14 08:07:16,,271-277,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：未考虑模型背后学习的是什么</p> </div>; <div data-schema-version=""8""><p>概述：利用LSTM（长短记忆神经网络）对Android操作系统的系统级指标和应用级指标进行老化预测</p> </div>; <div data-schema-version=""8""><p>优点：LSTM 具有处理长时间数据的能力，在预测老化中具有更好的性能</p> </div>",C:\Users\tristone\Zotero\storage\9IZIUFQK\8539207.html; C:\Users\tristone\Zotero\storage\4WEDKKUH\Qiao 等 - 2018 - An Empirical Study on Software Aging Indicators Prediction in Android Mobile.pdf,,分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 系统类型：Android; 老化影响：崩溃/挂起故障; 会议：ISSREW; 指标：崩溃时间; 模型：LSTM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2018 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
LI6C4CTJ,conferencePaper,2018,"Pereira, Paulo; Araujo, Jean; Matos, Rubens; Preguiça, Nuno; Maciel, Paulo",Software Rejuvenation in Computer Systems: An Automatic Forecasting Approach Based on Time Series,2018 IEEE 37th International Performance Computing and Communications Conference (IPCCC),,,10.1109/PCCC.2018.8711347,,"Distributed computing is bringing many advantages in cost, flexibility and availability. However, it increases the demand for performance and reliability. Resources such as CPU, memory, storage and network bandwidth, are very susceptible of presenting software aging issues. Therefore, proactive actions, also known as software rejuvenation must be performed to avoid these issues. The identification of the best moment to perform software rejuvenation is not a simple task, mostly because it may affect the system's availability and reliability. To overcome this problem, we propose an automatic forecasting strategy to support the system administrators to choose the best moment to perform software rejuvenation. Our strategy uses six time series techniques: Drift, Simple Exponential Smoothing, Holt, Holt-Winters, Linear Regression, and ARIMA. In our proposal, the most suitable one is chosen automatically as the best fit for a particular scenario. Three case studies were performed to evaluate the efficiency of our automatic strategy. Our proposal aims to increase the system's availability while decreasing the QoS violation probability. In one of our experiments, we can observe a reduction of 92.3% in the system's downtime. This research supports decision making activities and opens possibilities to foster the usage of forecasting strategies when dealing with software aging phenomenon.",2018-11,2023-01-10 03:13:29,2024-09-24 02:05:43,,1-8,,,,,,Software Rejuvenation in Computer Systems,,,,,,,,,,,,IEEE Xplore,,ISSN: 2374-9628 CCF: C,"<div data-schema-version=""8""><p>概述：提出了一种基于多种时间序列模型的自动预测策略，自动选择最适合特定场景的软件重生时间。</p> </div>",C:\Users\tristone\Zotero\storage\ZGCGVBUN\8711347.html; C:\Users\tristone\Zotero\storage\6Q5RVAUQ\Pereira 等 - 2018 - Software Rejuvenation in Computer Systems An Automatic Forecasting Approach Based on Time Series.pdf,,老化影响：资源消耗; 验证方法：实验实证&比较分析; 重生层级：非特定的; 会议：IPCCC; 模型：时间序列（漂移、简单指数平滑、Holt、Holt-Winters、线性回归和ARIMA）; 系统类型：Android应用，云（Eucalyptus），C应用; 指标：虚拟内存；MTTF，MTTR；MAPE，MAE; 分析方式：Measurement-based（时间序列 ）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2018 IEEE 37th International Performance Computing and Communications Conference (IPCCC),,,,,,,,,,,,,,,
GPFIQ4E5,conferencePaper,2017,"Xiao, Guanping; Zheng, Zheng; Yin, Beibei; Trivedi, Kishor S.; Du, Xiaoting; Cai, Kaiyuan",Experience Report: Fault Triggers in Linux Operating System: from Evolution Perspective,International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE.2017.21,,"Linux operating system is a complex system that is prone to suffer failures during usage, and increases difficulties of fixing bugs. Different testing strategies and fault mitigation methods can be developed and applied based on different types of bugs, which leads to the necessity to have a deep understanding of the nature of bugs in Linux. In this paper, an empirical study is carried out on 5741 bug reports of Linux kernel from an evolution perspective. A bug classification is conducted based on fault triggering conditions, followed by the analysis of the evolution of bug type proportions over versions and time, together with their comparisons across versions, products and regression bugs. Moreover, the relationship between bug type proportions and clustering coefficient, as well as the relation between bug types and time to fix are presented. This paper reveals 13 interesting findings based on the empirical results and further provides guidance for developers and users based on these findings.",2017-10,2022-03-12 02:50:45,2024-10-10 01:46:29,,101-111,,,,,,Experience Report,,,,,IEEE,,en-US,,,,,,,ISSN: 2332-6549 CCF: B TLDR: 13 interesting findings are revealed based on the empirical results of an empirical study carried out on bug reports of Linux kernel from an evolution perspective and guidance is provided for developers and users based on these findings.,"<div data-schema-version=""8""><p>不足：人工检查，可能有判断误差</p> </div>; <div data-schema-version=""8""><p>概述：基于<code>Linux内核的bug报告分析缺陷特征</code></p> </div>",C:\Users\tristone\Zotero\storage\DNC6CFCK\8109077.html; C:\Users\tristone\Zotero\storage\Q3CAD9KK\Xiao 等 - 2017 - Experience Report Fault Triggers in Linux Operating System from Evolution Perspective.pdf,,会议：ISSRE; 老化影响：非特定的; 系统类型：Linux; 分析方式：分析bug报告&Classification; 验证方法：人工分析&总结归纳,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
UATSXK49,journalArticle,2017,"Umesh, I M; Srinivasan, G N; Torquato, Matheus",Software Aging Forecasting Using Time Series Model,Indonesian Journal of Electrical Engineering and Computer Science,,"2502-4760, 2502-4752",10.11591/ijeecs.v7.i3.pp839-845,http://ijeecs.iaescore.com/index.php/IJEECS/article/view/8942,"<p class=""Normal1"">With the emergence of virtualization and cloud computing technologies, several services are housed on virtualization platform. Virtualization is the technology that many cloud service providers rely on for efficient management and coordination of the resource pool. As essential services are also housed on cloud platform, it is necessary to ensure continuous availability by implementing all necessary measures.  Windows Active Directory is one such service that Microsoft developed for Windows domain networks. It is included in Windows Server  operating systems as a set of processes and services for authentication and authorization of users and computers in a Windows domain type network. The service is required to run continuously without downtime. As a result, there are chances of accumulation of errors or garbage leading to software aging which in turn may lead to system failure and associated consequences. This results in software aging. In this work, software aging patterns of Windows active directory service is studied. Software aging of active directory needs to be predicted properly so that rejuvenation can be triggered to ensure continuous service delivery. In order to predict the accurate time, a model that uses time series forecasting technique is built.</p>",2017-09-23,2023-01-12 03:07:48,2024-10-12 06:23:18,2023-01-12 03:07:48,839,,3.0,7.0,,Indonesian Journal of Electrical Engineering and Computer Science,,,,,,,,,,,,,Semantic Scholar,,TLDR: Software aging of active directory needs to be predicted properly so that rejuvenation can be triggered to ensure continuous service delivery and a model that uses time series forecasting technique is built.,"; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">研究了Windows活动目录服务的软件老化模式</span></p> </div>; [TLDR] Software aging of active directory needs to be predicted properly so that rejuvenation can be triggered to ensure continuous service delivery and a model that uses time series forecasting technique is built.",; C:\Users\tristone\Zotero\storage\T7T3DFH2\Umesh 等 - 2017 - Software Aging Forecasting Using Time Series Model.pdf,https://www.semanticscholar.org/paper/Software-Aging-Forecasting-Using-Time-Series-Model-Umesh-Srinivasan/85365712888d20d43967752814dbc6e799d718dc,分析方式：Measurement-based（时间序列）; 会议：IJEECS; 老化影响：崩溃/挂起故障&工作负载&内存消耗; 模型：时间序列MA; 系统类型：虚拟化系统（Windows active directory服务）; 验证方法：实验实证; 指标：内存，CPU利用率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YW6VH2EY,journalArticle,2017,"Machida, Fumio; Xiang, Jianwen; Tadano, Kumiko; Maeno, Yoshiharu",Lifetime Extension of Software Execution Subject to Aging,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2016.2615880,,"Software aging is a phenomenon of progressive degradation of software execution environment caused by software faults. In this paper, we propose software life-extension as an operational countermeasure against software aging and present the mathematical foundations of software life-extension by means of stochastic modeling. A semi-Markov process is used to capture the behavior of a system with software life-extension and to analyze the system's availability and completion times of jobs running on it. The semi-Markov process can correctly model the time-based life-extension and allows us to derive the optimal trigger for starting life-extension in terms of system availability and mean job completion time. We also present an effective combination of software life-extension and software rejuvenation that can maximize the system availability compared with a system using either rejuvenation or software life-extension.",2017-03,2022-03-15 12:12:35,2024-10-05 08:46:43,,123-134,,1.0,66.0,,IEEE Trans. Rel.,,,,,,,,en-US,,,,,5.883,2.0,"Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C TLDR: An effective combination of software life-extension and software rejuvenation that can maximize the system availability compared with a system using either rejuvenation or software life,extension is presented.","<div data-schema-version=""8""><p>概述：基于SMP的软件寿命延长技术，并将软件寿命延长技术与软件重生技术相结合</p> </div>; <div data-schema-version=""8""><p>优点：SMP 模型使得软件寿命可以是任何分布</p> </div>",C:\Users\tristone\Zotero\storage\56ZXCALG\7707343.html; C:\Users\tristone\Zotero\storage\XQB5M34H\Machida 等 - 2017 - Lifetime Extension of Software Execution Subject to Aging.pdf,,老化影响：崩溃/挂起故障&性能降级; 期刊：TR; 系统类型：VMM; 验证方法：实验实证; 模型：SMP; 指标：单位时间完成工作量; 分析方式：Model-based&other; 重生方法：寿命延长&重生,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GPU57GAE,journalArticle,2017,"Hua, Xiayu; Guo, Chunhui; Wu, Hao; Lautner, Douglas; Ren, Shangping",Schedulability Analysis for Real-Time Task Set on Resource with Performance Degradation and Dual-Level Periodic Rejuvenations,IEEE Transactions on Computers,,0018-9340,10.1109/TC.2016.2602833,http://ieeexplore.ieee.org/document/7552537/,"Researches in real-time scheduling often assume that the performance of a computing resource does not change over time. However, as system softwares and system architectures become increasingly complex, resource performance degradation over time becomes more evident. In this paper, we study the schedulability of a hard real-time task set on a resource which has performance degradation over time with a known pattern and use both cold and warm periodic rejuvenations as countermeasures. Such resource model is referred to as &lt;inline-formula&gt;&lt;tex-math notation=""LaTeX""&gt; $P^2D$&lt;/tex-math&gt;&lt;alternatives&gt;&lt;inline-graphic xlink:href=""hua-ieq1-2602833.gif""/&gt;&lt;/alternatives&gt;&lt;/inline-formula&gt; -resource model for &lt;underline&gt;p&lt;/underline&gt;erformance degradation and &lt;underline&gt;p&lt;/underline&gt;eriodic rejuvenation with &lt;underline&gt;d&lt;/underline&gt;ual-levels. In this paper, we study (1) the formal specification of the &lt;inline-formula&gt;&lt;tex-math notation=""LaTeX""&gt;$P^2D$&lt;/tex-math&gt;&lt;alternatives&gt; &lt;inline-graphic xlink:href=""hua-ieq2-2602833.gif""/&gt;&lt;/alternatives&gt;&lt;/inline-formula&gt;-resource model, (2) &lt;inline-formula&gt;&lt;tex-math notation=""LaTeX""&gt;$P^2D$&lt;/tex-math&gt;&lt;alternatives&gt; &lt;inline-graphic xlink:href=""hua-ieq3-2602833.gif""/&gt;&lt;/alternatives&gt;&lt;/inline-formula&gt;-resource  supply analysis, and (3) task set utilization bounds of a &lt;inline-formula&gt;&lt;tex-math notation=""LaTeX""&gt;$P^2D$&lt;/tex-math&gt;&lt;alternatives&gt; &lt;inline-graphic xlink:href=""hua-ieq4-2602833.gif""/&gt;&lt;/alternatives&gt;&lt;/inline-formula&gt;-resource under Earliest Deadline First (EDF) and Rate Monotonic (RM) scheduling policies.",2017-03-01,2023-01-10 13:11:24,2024-09-23 04:50:30,2023-01-10 13:11:24,553-559,,3.0,66.0,,IEEE Trans. Comput.,,,,,,,,,,,,,3.183,2.0,JCR分区: Q2 中科院分区升级版: 计算机科学2区 影响因子: 3.6 5年影响因子: 3.2 EI: 是 CCF: A,"<div data-schema-version=""8""><p>概述：<code>提出新的资源模型同时考虑冷热重生</code></p> </div>",C:\Users\tristone\Zotero\storage\RIRFRAIQ\Hua 等 - 2017 - Schedulability Analysis for Real-Time Task Set on Resource with Performance Degradation and Dual-Lev.pdf; ,https://www.semanticscholar.org/paper/Schedulability-Analysis-for-Real-Time-Task-Set-on-Hua-Guo/d2be6a2e0958e79dcd05cd6b3bddbf4371db023c,重生层级：非特定的; 分析方式：Model-based&rej; 验证方法：逻辑推理; 期刊：TC; 老化影响：资源消耗&性能退化; 模型：P^2D资源模型; 实验时长：20D; 系统类型：Fermilab control system（实时嵌入式应用程序？）; 指标：CPU利用率，内存使用；最早截止时间优先（EDF）和速率单调（RM）; 重生策略：冷热结合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5RT9YP5N,conferencePaper,2017,"Sukhwani, Harish; Matias, Rivalino; Trivedi, Kishor S.; Rindos, Andy",Monitoring and Mitigating Software Aging on IBM Cloud Controller System,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2017.65,,"As enterprises continue to move their workloads from traditional server-room environments to private cloud-based systems, there is an increasing desire and ability for companies like IBM to centrally monitor the systems on behalf of their customers to proactively help to mitigate any potential failure scenarios. In this paper, we investigate failures caused by software aging affecting an enterprise-class cloud controller system. We describe a service developed to continuously analyze the key system/application metrics from customer systems, identifies potential aging-related failure scenarios within the next two days, and generates a list of tasks for the development-operations team at IBM to mitigate the potential failures. To help the team prioritize the tasks, we propose a prioritization scheme to assign severity to such tasks. From our analysis of two months of offline data, we find that the tasks generated have a precision of around 0.80 and recall of 1, which means that our approach did not miss any aging-related failure event, with around 80% of the failure events being true.",2017-10,2023-01-10 03:49:48,2024-09-24 02:04:44,,266-272,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,,C:\Users\tristone\Zotero\storage\NZN4UVW3\8109294.html; C:\Users\tristone\Zotero\storage\XXIV8PYC\Sukhwani 等 - 2017 - Monitoring and Mitigating Software Aging on IBM Cloud Controller System.pdf; C:\Users\tristone\Zotero\storage\6NM4WJFS\Sukhwani 等 - 2017 - Monitoring and Mitigating Software Aging on IBM Cloud Controller System.pdf,,"系统类型：云; 会议：ISSREW; 验证方法：实验实证; 老化影响：磁盘分区使用率的增加、响应时间的降低和线程泄漏; 模型：Holt, HoltWinters and ARIMA; 指标：RSS等; 分析方式：Measurement-based（时间序列）",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
7Z8TUMID,conferencePaper,2017,"Jumonji, Yuto; Yamada, Hiroshi",Efficient Software Rejuvenation of In-memory Key-Value Storages,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2017.54,https://ieeexplore.ieee.org/document/8109296,"Software rejuvenation is a simple but powerful method for improving the availability of computer systems. Software rejuvenation refreshes the running states of an application by restarting it. This method faces a challenge to apply it to a new type of applications, in-memory databases (DBs). Compared to stateless applications such as web servers, rejuvenating in-memory DBs is significantly expensive. Since inmemory DBs typically allocate a large amount of memory and manage numerous running states such as DB block caches and key-value pairs in their own memory regions, their rejuvenation involves the loss of running states preserved in memory regions, resulting in causing severe performance overhead. This paper presents Rejuvemcached, which allows us to perform efficient software rejuvenation with lower performance overhead. Our key insight is to decouple data content objects from memory objects; Rejuvemcached treats its key-value items as data content objects. During the rejuvenation, Rejuvemcached preserves them and rebuilds the other memory objects that are a major source of software aging. We prototyped Rejuvemcached on memcached 1.4.25 and our preliminary experimental results show that our prototype efficiently performs software rejuvenation.",2017-10,2024-09-02 12:43:10,2024-09-02 13:58:58,2024-09-02 12:43:10,280-285,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\IREBXT9V\8109296.html; C:\Users\tristone\Zotero\storage\LZBXFFX6\Jumonji和Yamada - 2017 - Efficient Software Rejuvenation of In-memory Key-Value Storages.pdf,,老化影响：性能降级; 分析方式：rej; 会议：ISSREW; 验证方法：实验实证; 系统类型：数据库系统（内存数据库）; 重生策略：基于时间，阈值; 重生层级：内存对象,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
BNKP76G6,conferencePaper,2017,"Weng, Caisheng; Zhao, Dongdong; Lu, Liping; Xiang, Jianwen; Yang, Chunhui; Li, Dong",A Rejuvenation Strategy in Android,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2017.50,,"Compared to critical systems, the user of Android is more concerned about the application launch time. It needs to perform rejuvenation to improve the user experience when the Android suffers from software aging that would lead to an increase of the launch time. Also, rejuvenation can incur in some costs. So it is important to make an optimal rejuvenation strategy to minimize these costs and improve the user experience. At the same time, different workloads on Android have different aging phenomena, which may influence the validation of system state. Based on these, we carried out experiments to simulate user behavior on Android and find software aging phenomena in Android. Then we used active learning based on random forest and four states to build model and constructed software aging rejuvenation strategy on Android. Comparing the experiments without rejuvenation, there is an obvious decrease of the average of application launch time after using the rejuvenation strategy, and the running time of experiments with rejuvenation is longer than that without rejuvenation, which improves the user experience and reduces the probability of unexpected errors.",2017-10,2022-03-02 12:11:11,2024-08-14 08:05:14,,273-279,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：实验次数与所使用的应用程序比较有限，并且仅与未执行重生的设备做了比较</p> </div>; <div data-schema-version=""8""><p>概述：基于随机森林的主动学习方法区分系统四种老化状态，构建重生模型</p> </div>; <div data-schema-version=""8""><p>优点：验证了基于随机森林的软件重生技术的有效性</p> </div>",C:\Users\tristone\Zotero\storage\HKJRVTEF\8109295.html; C:\Users\tristone\Zotero\storage\AU4KQZUM\Weng 等 - 2017 - A Rejuvenation Strategy in Android.pdf,,分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 系统类型：Android; 会议：ISSREW; 重生层级：操作系统; 老化影响：启动时间延长; 模型：随机森林; 指标：LT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
E42MZ85A,conferencePaper,2017,"Jia, Shiqing; Hou, Chunyan; Wang, Jinsong",Software aging analysis and prediction in a web server based on multiple linear regression algorithm,2017 IEEE 9th International Conference on Communication Software and Networks (ICCSN),,,10.1109/ICCSN.2017.8230349,http://ieeexplore.ieee.org/document/8230349/,"In the last few years, software aging has been reported. The phenomenon of software aging is that the performance of the software system is degradation in a long-running state, which is the result of exhaustion of system resources, the accumulation of internal error conditions and so on. In order to counteract software aging, a technique, which called software rejuvenation, has been proposed, this procedure involves occasionally stopping a system process, cleaning its running environment and restarting it. Due to the direct and indirect costs incurred by software rejuvenation, when to carry out this action is very important. Traditionally, most scholars focused on time series or analytic methods to model software aging process, however, machine learning algorithm has been neglected. In this paper, we make a detailed analysis and predict about the web server parameters by multiple linear regression algorithm. Firstly, the aging phenomenon of the system is simulated by the pressure testing tool and then collecting data and preprocessed. Secondly, we fit time series models to the data collected and determine the trend of resource consumption. Thirdly, using the feature selection algorithm to select a subset set as the input parameters of the algorithm. Fourthly, using the multiple linear regression algorithm to analysis and predict the aging process. Finally, we evaluate the feasibility of the algorithm by evaluation metrics. The result shows that we can use this algorithm to predict the aging process in the allowable error range.",2017-05,2023-01-10 09:40:31,2024-10-12 06:20:29,2023-01-10 09:40:31,1452-1456,,,,,,,,,,,,,,,,,,Semantic Scholar,,Conference Name: 2017 IEEE 9th International Conference on Communication Software and Networks (ICCSN) ISBN: 9781509038220 Place: Guangzhou Publisher: IEEE CCF: C TLDR: The result shows that this algorithm can be used to predict the aging process in the allowable error range and the feasibility of the algorithm is evaluated by evaluation metrics.,"<div data-schema-version=""8""><p>不足：与其他更复杂的模型相比，预测准确率并不太高，因为它假设特性和响应之间存在确定的线性关系，这种数据非线性关系的假设显然不是很好。</p> </div>; <div data-schema-version=""8""><p>概述：应用多元线性回归算法来分析和预测软件老化</p> </div>",C:\Users\tristone\Zotero\storage\288S5FNY\Jia 等 - 2017 - Software aging analysis and prediction in a web server based on multiple linear regression algorithm.pdf; ,https://www.semanticscholar.org/paper/Software-aging-analysis-and-prediction-in-a-web-on-Jia-Hou/54fd192787bf26a1b01f5aa8d8093d83114a9cd3,分析方式：Measurement-based（ML）; 会议：ICCSN; 老化影响：资源消耗; 模型：MLR; 系统类型：web服务器（Apache）; 验证方法：实验实证; 指标：used memory，used swap space，wordload；RMSE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RLA4BJRW,conferencePaper,2017,"Okamura, Hiroyuki; Zheng, Junjun; Dohi, Tadashi",A Statistical Framework on Software Aging Modeling with Continuous-Time Hidden Markov Model,2017 IEEE 36th Symposium on Reliable Distributed Systems (SRDS),978-1-5386-1679-6,,10.1109/SRDS.2017.24,http://ieeexplore.ieee.org/document/8069074/,"This paper considers the statistical approach to model software degradation process from time series data of system attributes. We first develop the continuous-time Markov chain (CTMC) model to represent the degradation level of system. By combining the CTMC with system attributes distributions, a continuous-time hidden Markov model (CT-HMM) is proposed as the basic model to represent the degradation level of system. To estimate model parameters, we develop the EM algorithm for CT-HMM. The advantage of this modeling is that the estimated model is directly applied to existing CTMC-based software aging and rejuvenation models. In numerical experiments, we exhibit the performance of our method by simulated data and also demonstrate estimating the software degradation process with experimental data in MySQL database system.",2017-09,2023-01-10 13:44:26,2024-08-14 07:51:40,2023-01-10 13:44:26,114-123,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Hong Kong, Hong Kong","<div data-schema-version=""8""><p>概述：<code>提出从系统属性的时间序列数据中建模软件老化过程的连续时间隐马尔可夫模型（CT-HMM）模型</code></p> </div>",C:\Users\tristone\Zotero\storage\MNL8Q68F\Okamura 等 - 2017 - A Statistical Framework on Software Aging Modeling with Continuous-Time Hidden Markov Model.pdf; ,https://www.semanticscholar.org/paper/A-Statistical-Framework-on-Software-Aging-Modeling-Okamura-Zheng/39957ef431ecd2581168b73767d370103d078fc7,分析方式：Model-based; 老化影响：非特定的; 重生层级：非特定的; 验证方法：数值分析&实验实证; 系统类型：MySQL; 会议：SRDS; 模型：CT-HMM; 指标：response time，memory usage，swap usage；MLL，DF，AIC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 IEEE 36th Symposium on Reliable Distributed Systems (SRDS),,,,,,,,,,,,,,,
2MQYHAB3,conferencePaper,2017,"Qin, Fangyun; Zheng, Zheng; Li, Xiaodan; Qiao, Yu; Trivedi, Kishor S.",An Empirical Investigation of Fault Triggers in Android Operating System,2017 IEEE 22nd Pacific Rim International Symposium on Dependable Computing (PRDC),,,10.1109/PRDC.2017.27,,"The growing popularity and complexity of Android operating system makes it prone to suffer failures during usage, which increases difficulties of fixing bugs. Different strategies and mitigation methods can be developed and applied based on different types of bugs, which gives rise to the necessity to have a deep understanding of the nature of bugs in this system. In this paper, an empirical study is taken on 513 bug reports from Android operating system. A bug classification is conducted according to fault triggering conditions, followed by the analysis of bug types and bug attributes. Moreover, the comparison of bug types between Android and Linux is carried out. This paper reveals ten interesting findings based on the empirical results from these three aspects and further provides guidance for developers and users based on these findings.",2017-01,2022-03-15 09:33:29,2024-08-14 06:37:48,,135-144,,,,,,,,,,,,,en-US,,,,,,,ISSN: 2473-3105,"<div data-schema-version=""8""><p>不足：分类过程由人力进行，可能会有偏差，选择的bug报告比较局限</p> </div>; <div data-schema-version=""8""><p>概述：从故障触发的角度对Android操作系统中的bug进行了实证研究，并与Linux系统的bug进行了对比</p> </div>; <div data-schema-version=""8""><p>优点：通过对bug进行打标签分类等操作，得到了许多有用的结论可以使开发人员获得帮助</p> </div>",C:\Users\tristone\Zotero\storage\NPG6FQ26\7920607.html; C:\Users\tristone\Zotero\storage\WVASSCFM\Qin 等 - 2017 - An Empirical Investigation of Fault Triggers in Android Operating System.pdf,,老化影响：非特定的; 系统类型：Android; 分析方式：分析bug报告&Classification; 验证方法：人工分析&总结归纳; 会议：PRDC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 IEEE 22nd Pacific Rim International Symposium on Dependable Computing (PRDC),,,,,,,,,,,,,,,
H6AJHA88,conferencePaper,2017,"Li, Lingling; He, Huihong; Wang, Qiang; Zhang, Hong",Aberrant software-aging server detection and analysis using sliding window over LOF,2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS),978-1-5386-0497-7,,10.1109/ICSESS.2017.8342999,http://ieeexplore.ieee.org/document/8342999/,"As software grows rapidly in size and complexity, software aging has been observed more frequently in long-running computer system failures. Ever since the notion of software aging was introduced, lots of researches have devoted in studying software aging empirically by learning aging trend under controlled experiments. However, we notice that how software aging evolves within online system is seldom covered in the literature. To fill the blank and improve usability of software-aging works, we in this paper propose an approach to detect aberrant software aging in online system, i.e., servers grow old more quickly or slowly than the rest servers. We believe studying aberrant aging can contribute to better understanding of software aging in real world. The mechanism utilizes random sliding windows over LOF (Local Outlier Factor) algorithm to analyze the CPU and workload indicators, which displays good accuracy and recall rate in a real world application. Moreover, we analyze how the software trend to age aberrantly and verify if aberrant aging also obeys the rules in controlled experiment. We conclude three aging patterns from these aberrant aging servers, and find out CPU-oriented indicators shows higher precision and recall rate than memory-oriented in analyzing software aging.",2017-11,2023-01-10 14:53:17,2024-09-22 08:29:36,2023-01-10 14:53:17,652-656,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Beijing, China","<div data-schema-version=""8""><p>概述：基于滑动窗口和LOF（局部离群因子）检测在线系统中异常软件老化的方法</p> </div>; <div data-schema-version=""8""><p>优点：从这些异常老化的服务器中总结出三种老化模式，并发现在分析软件老化时，面向CPU的指标比面向内存的指标显示出更高的精度和召回率。</p> </div>",C:\Users\tristone\Zotero\storage\SGAX2K4R\Li 等 - 2017 - Aberrant software-aging server detection and analysis using sliding window over LOF.pdf; ,https://www.semanticscholar.org/paper/Aberrant-software-aging-server-detection-and-using-Li-He/9ff773b76c75bb81cce1f3b25c58fa9fb42a65e6,验证方法：实验实证&比较分析; 分析方式：Measurement-based（ML）; 老化影响：非特定的; 系统类型：web服务器; 会议：ICSESS; 模型：LOF算法和滑动窗口; 指标：CPU，内存,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 8th IEEE International Conference on Software Engineering and Service Science (ICSESS),,,,,,,,,,,,,,,
YEZBWJCJ,conferencePaper,2017,"Kumar, Lov; Sureka, Ashish",Aging Related Bug Prediction using Extreme Learning Machines,2017 14th IEEE India Council International Conference (INDICON),,,10.1109/INDICON.2017.8487925,,"Aging-Related Bugs (ARBs) occur in long running systems due to error conditions caused because of accumulation of problems such as memory leakage or unreleased files and locks. Aging-Related Bugs are hard to discover during software testing and also challenging to replicate. Automatic identification and prediction of aging related fault-prone files and classes in an object oriented system can help the software quality assurance team to optimize their testing efforts. In this paper, we present a study on the application of static source code metrics and machine learning techniques to predict aging related bugs. We conduct a series of experiments on publicly available dataset from two large open-source software systems: Linux and MySQL. Class imbalance and high dimensionality are the two main technical challenges in building effective predictors for aging related bugs. We investigate the application of five different feature selection techniques (OneR, Information Gain, Gain Ratio, RELEIF and Symmetric Uncertainty) for dimensionality reduction and SMOTE method to counter the effect of class imbalance in our proposed machine learning based solution approach. We apply Extreme Learning Machines (ELM) with three different kernels (linear, polynomial and RBF) and present experimental results which demonstarte the effectiveness of our approach.",2017-12,2023-01-04 07:30:48,2024-10-10 12:19:51,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2325-9418 TLDR: This paper investigates the application of five different feature selection techniques for dimensionality reduction and SMOTE method to counter the effect of class imbalance in the proposed machine learning based solution approach and applies Extreme Learning Machines with three different kernels.,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">应用静态源代码度量和机器学习技术来预测ARB</span></p> </div>",C:\Users\tristone\Zotero\storage\SVVLZZ5G\8487925.html; C:\Users\tristone\Zotero\storage\LDV85DYY\Kumar和Sureka - 2017 - Aging Related Bug Prediction using Extreme Learning Machines.pdf,,验证方法：实验实证&比较分析; 测试方法：静态代码预测; 指标：度量相关复杂性指标; 系统类型：Linux，MySQL; 会议：INDICON; 模型：SMOTE; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2017 14th IEEE India Council International Conference (INDICON),,,,,,,,,,,,,,,
64FF737M,journalArticle,2016,"Ning, Gaorong; Zhao, Jing; Lou, Yunlong; Alonso, Javier; Matias, Rivalino; Trivedi, Kishor S.; Yin, Bei-Bei; Cai, Kai-Yuan",Optimization of Two-Granularity Software Rejuvenation Policy Based on the Markov Regenerative Process,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2016.2570539,,"Software rejuvenation is a proactive software control technique that is used to improve a computing system performance when it suffers from software aging. In this paper, a two-granularity inspection-based software rejuvenation policy, which works as a closed-loop control technique, is proposed. This policy mitigates the negative impact of two-level software aging. The two levels considered are the user-level applications and the operating system. A Markov regenerative process model is constructed based on the system condition. We obtain the degradation rate of the application software and operating system from fault injection experiments. The diagnostic accuracy of the adopted monitor and analysis system, which is applied to inspect the application software and operating system, is considered as we provide the optimal rejuvenation strategies. Finally, the availability and the overall loss probability with their corresponding optimal inspection time intervals are obtained numerically based on the parameter values estimated from the experiments. Experimental results show that two-granularity software rejuvenation is much more effective than traditional single-level software rejuvenation. In our experimental study, when two-granularity software rejuvenation is used, the unavailability and the overall loss probability of the system were reduced by 17.9% and 2.65%, respectively, in comparison with the single-level rejuvenation.",2016-12,2022-03-15 12:34:14,2024-10-05 08:36:06,,1630-1646,,4.0,65.0,,IEEE Trans. Rel.,,,,,,,,en-US,,,,,5.883,2.0,Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C,"<div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2F64FF737M%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2F64FF737M%22%2C%22type%22%3A%22article-journal%22%2C%22abstract%22%3A%22Software%20rejuvenation%20is%20a%20proactive%20software%20control%20technique%20that%20is%20used%20to%20improve%20a%20computing%20system%20performance%20when%20it%20suffers%20from%20software%20aging.%20In%20this%20paper%2C%20a%20two-granularity%20inspection-based%20software%20rejuvenation%20policy%2C%20which%20works%20as%20a%20closed-loop%20control%20technique%2C%20is%20proposed.%20This%20policy%20mitigates%20the%20negative%20impact%20of%20two-level%20software%20aging.%20The%20two%20levels%20considered%20are%20the%20user-level%20applications%20and%20the%20operating%20system.%20A%20Markov%20regenerative%20process%20model%20is%20constructed%20based%20on%20the%20system%20condition.%20We%20obtain%20the%20degradation%20rate%20of%20the%20application%20software%20and%20operating%20system%20from%20fault%20injection%20experiments.%20The%20diagnostic%20accuracy%20of%20the%20adopted%20monitor%20and%20analysis%20system%2C%20which%20is%20applied%20to%20inspect%20the%20application%20software%20and%20operating%20system%2C%20is%20considered%20as%20we%20provide%20the%20optimal%20rejuvenation%20strategies.%20Finally%2C%20the%20availability%20and%20the%20overall%20loss%20probability%20with%20their%20corresponding%20optimal%20inspection%20time%20intervals%20are%20obtained%20numerically%20based%20on%20the%20parameter%20values%20estimated%20from%20the%20experiments.%20Experimental%20results%20show%20that%20two-granularity%20software%20rejuvenation%20is%20much%20more%20effective%20than%20traditional%20single-level%20software%20rejuvenation.%20In%20our%20experimental%20study%2C%20when%20two-granularity%20software%20rejuvenation%20is%20used%2C%20the%20unavailability%20and%20the%20overall%20loss%20probability%20of%20the%20system%20were%20reduced%20by%2017.9%25%20and%202.65%25%2C%20respectively%2C%20in%20comparison%20with%20the%20single-level%20rejuvenation.%22%2C%22call-number%22%3A%222%22%2C%22container-title%22%3A%22IEEE%20Transactions%20on%20Reliability%22%2C%22DOI%22%3A%2210.1109%2FTR.2016.2570539%22%2C%22ISSN%22%3A%221558-1721%22%2C%22issue%22%3A%224%22%2C%22language%22%3A%22en-US%22%2C%22note%22%3A%22event-title%3A%20IEEE%20Transactions%20on%20Reliability%22%2C%22page%22%3A%221630-1646%22%2C%22source%22%3A%225.883%22%2C%22title%22%3A%22Optimization%20of%20Two-Granularity%20Software%20Rejuvenation%20Policy%20Based%20on%20the%20Markov%20Regenerative%20Process%22%2C%22volume%22%3A%2265%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Ning%22%2C%22given%22%3A%22Gaorong%22%7D%2C%7B%22family%22%3A%22Zhao%22%2C%22given%22%3A%22Jing%22%7D%2C%7B%22family%22%3A%22Lou%22%2C%22given%22%3A%22Yunlong%22%7D%2C%7B%22family%22%3A%22Alonso%22%2C%22given%22%3A%22Javier%22%7D%2C%7B%22family%22%3A%22Matias%22%2C%22given%22%3A%22Rivalino%22%7D%2C%7B%22family%22%3A%22Trivedi%22%2C%22given%22%3A%22Kishor%20S.%22%7D%2C%7B%22family%22%3A%22Yin%22%2C%22given%22%3A%22Bei-Bei%22%7D%2C%7B%22family%22%3A%22Cai%22%2C%22given%22%3A%22Kai-Yuan%22%7D%5D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222016%22%2C12%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>不足：考虑了应用服务器和操作系统是独立的情况，将应用服务器和操作系统级别的内存使用分开，故不适用于应用服务器和操作系统共享内存的情况</p> </div>; <div data-schema-version=""8""><p>概述：基于马尔可夫再生过程的应用服务器/操作系统双粒度重生技术</p> </div>",C:\Users\tristone\Zotero\storage\3D57IC6Z\Ning 等 - 2016 - Optimization of Two-Granularity Software Rejuvenation Policy Based on the Markov Regenerative Proces.pdf,,老化影响：内存泄漏; 系统类型：软件系统; 期刊：TR; 分析方式：Model-based&rej; 验证方法：实验实证; 模型：MRGP; 指标：内存泄漏量; 重生层级：应用&操作系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
J35PZMGI,journalArticle,2016,"Yan, Yongquan; Guo, Ping",A practice guide of software aging prediction in a web server based on machine learning,China Communications,,1673-5447,10.1109/CC.2016.7513217,http://ieeexplore.ieee.org/document/7513217/,"In the past two decades, software aging has been studied by both academic and industry communities. Many scholars focused on analytical methods or time series to model software aging process. While machine learning has been shown as a very promising technique in application to forecast software state: normal or aging. In this paper, we proposed a method which can give practice guide to forecast software aging using machine learning algorithm. Firstly, we collected data from a running commercial web server and preprocessed these data. Secondly, feature selection algorithm was applied to find a subset of model parameters set. Thirdly, time series model was used to predict values of selected parameters in advance. Fourthly, some machine learning algorithms were used to model software aging process and to predict software aging. Fifthly, we used sensitivity analysis to analyze how heavily outcomes changed following input variables change. In the last, we applied our method to an IIS web server. Through analysis of the experiment results, we find that our proposed method can predict software aging in the early stage of system development life cycle.",2016-06,2023-01-10 11:27:08,2024-10-03 03:13:53,2023-01-10 11:27:08,225-235,,6.0,13.0,,China Commun.,,,,,,,,,,,,,3.17,3.0,JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 3.1 5年影响因子: 3.2 CCF: T2 TLDR: This paper proposes a method which can give practice guide to forecast software aging using machine learning algorithm and finds that this method can predict software aging in the early stage of system development life cycle.,"<div data-schema-version=""8""><p>概述：提出一种可以为使用机器学习算法预测软件老化提供实践指导的方法</p> <p></p> </div>; [TLDR] This paper proposes a method which can give practice guide to forecast software aging using machine learning algorithm and finds that this method can predict software aging in the early stage of system development life cycle.",; C:\Users\tristone\Zotero\storage\888QULW8\Yan和Guo - 2016 - A practice guide of software aging prediction in a web server based on machine learning.pdf,https://www.semanticscholar.org/paper/A-practice-guide-of-software-aging-prediction-in-a-Yan-Guo/28815610e1c4631aac7665c1c0caf86c2c748c2c,分析方式：Measurement-based（ML）; 系统类型：web服务器; 验证方法：实验实证; 老化影响：内存消耗; 模型：ARIMA；decision tree，ANN，SVM; 期刊：China Commun; 指标：内存；数据最后5%、10%、15%、20%；MAE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EJIJLYLY,conferencePaper,2016,"Escheikh, Mohamed; Tayachi, Zayneb; Barkaoui, Kamel",Workload-Dependent Software Aging Impact on Performance and Energy Consumption in Server Virtualized Systems,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.31,,"Dependability modeling and performability analysis of server virtualized systems (SVSs) are today a key challenging problem to evaluate cost-effectiveness and savings in green data centers. This paper tackles various issues related to performability analysis of server virtualized system (SVS) handling workload-aware power management (PM) mechanism and subject to software aging, unplanned failures and Migrate-VM rejuvenation. In this work we develop a modeling approach based on stochastic reward nets (SRNs) to investigate dependencies between several SVS modules including virtual machine monitor (VMM), virtual machine (VM), data intensive applications and power-manageable component (PMC) with workload-aware timebased PM mechanism. We show through numerical analysis how availability, power usage and power-performance trade-off, of SVS, are impacted by aging and workload burstiness.",2016-10,2023-03-13 03:54:05,2024-10-04 13:25:36,,111-118,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: This work develops a modeling approach based on stochastic reward nets to investigate dependencies between several SVS modules including virtual machine monitor (VMM), virtual machine (VM), data intensive applications and power-manageable component (PMC) with workload-aware timebased PM mechanism.",,C:\Users\tristone\Zotero\storage\RUX6REAG\Escheikh 等 - 2016 - Workload-Dependent Software Aging Impact on Performance and Energy Consumption in Server Virtualized.pdf; C:\Users\tristone\Zotero\storage\EMH3A3HA\stamp.html,,验证方法：数值分析; 分析方式：Model-based&rej; 会议：ISSREW; 重生层级：VM; 模型：SRN; 系统类型：虚拟化系统（SVS）; 指标：SVS availability，mean consumed power，power utilization ratio，efficiency; 重生策略：迁移VM，VM&VMM重生,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
62957SQF,conferencePaper,2016,"Matias, Rivalino; de Sena, Guilherme O.; Andrzejak, Artur; Trivedi, Kishor S.",Software Aging Detection Based on Differential Analysis: An Experimental Study,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.44,,"In this study we evaluate the applicability of the differential software analysis approach to detect memory leaks under a real workload. For this purpose, we used three different versions of a widely used software application, where one version was used as baseline (memory leak free) and the other two subsequent versions were our research subjects, one of them is confirmed to suffer from memory leaks and the other is memory leak free. The latter two versions were used to evaluate the accuracy of the proposed approach to detect aging, with respect to the number of true and false alarms. The results confirmed the previous findings obtained with synthetic workloads. The heap usage was a better metric than the resident set size, which has been extensively used for detecting software aging related to memory leakage. Also, the best data processing techniques to combine with the heap usage metric were Cumulative sum control chart and exponentially weighted moving average.",2016-10,2023-01-12 03:29:07,2024-08-14 07:59:44,,71-77,,,,,,Software Aging Detection Based on Differential Analysis,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>备注：<span style=""color: rgb(0, 0, 0)"">差分软件分析方法能更快更准确的预测内存泄露</span></p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">评估了差分软件分析方法在实际工作负载下检测内存泄漏的适用性</span></p> </div>",C:\Users\tristone\Zotero\storage\GVU8GR86\7789383.html; C:\Users\tristone\Zotero\storage\M7QALQH5\Matias 等 - 2016 - Software Aging Detection Based on Differential Analysis An Experimental Study.pdf,,老化影响：内存泄漏; 会议：ISSREW; 系统类型：VMM; 验证方法：实验实证; 指标：内存; 分析方式：testing; 测试方法：差分测试,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
TQG2YN9U,conferencePaper,2016,"Weng, Caisheng; Xiang, Jianwen; Xiong, Shengwu; Zhao, Dongdong; Yang, Chunhui",Analysis of Software Aging in Android,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.20,,"There are a number of researches on software aging in different systems, but few researches have been done in Android system. At the same time, due to the complexity of Android memory management mechanisms and lack of comprehensive documents, it is difficult to analyze corresponding memory management mechanisms to determine whether there is aging. Based on these, we focus on some aging-related phenomena by observing available memory of Android, and use experiments to progressively verify some hypotheses about aging in Android. Then, we carry out mathematical modeling of aging and predictive analysis with Markov chains. Through our experiments and modeling analysis, we observe the existence of Android aging, and find that aging is generally irreversible and that the warm rejuvenation (application restart) has little effect on the recovery or mitigation of aging problem. The current experiments are preliminary and limited to specific version of Android OS, smartphone, and applications, but the results and observations may provide a new perspective for further study on aging and rejuvenation in Android with more statistically robust experiments.",2016-10,2022-03-15 12:11:28,2024-08-14 08:08:07,,78-83,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：实验中的应用程序，移动设备都比较局限，只观察了内存指标。</p> </div>; <div data-schema-version=""8""><p>概述：验证了Android老化现象的存在并得出结论暖重生对缓解Android系统没有作用</p> </div>; <div data-schema-version=""8""><p>优点：得出的结论比较出人意料，与已有研究结论是相反的</p> </div>",C:\Users\tristone\Zotero\storage\NC9U6CNS\7789384.html; C:\Users\tristone\Zotero\storage\QCW9WWN7\Weng 等 - 2016 - Analysis of Software Aging in Android.pdf,,老化影响：资源消耗; 分析方式：Model-based; 系统类型：Android; 重生层级：应用程序; 会议：ISSREW; 验证方法：实验实证; 指标：内存; 模型：马尔可夫,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
WI7DZSZ6,conferencePaper,2016,"Qiao, Yu; Zheng, Zheng; Qin, Fangyun",An Empirical Study of Software Aging Manifestations in Android,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.19,,"Software aging phenomenon has been widely observed in Android mobile operating system, which will make a great influence on people's life. In this paper we present an empirical study on the manifestations of aging-related bugs in Android operating system. By conducting a set of experiments through building various aging conditions in Android, we clarify the fact that the aging-related bugs injected in Android are with several manifestation patterns from two angles of view (Users' and System's viewpoints), depending on their location (Dalvik Heap or Native Heap), process priorities (cached, persistent, background, foreground and etc.). To show the new features of software aging in Android, the differences of software aging manifestations between Android and Linux are further explored in this work.",2016-10,2022-01-22 06:50:31,2024-08-14 08:07:11,,84-90,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>不足：研究的老化指标仅限于内存，有些狭隘</p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">通过在不同的堆区域和具有不同优先级的进程中注入内存泄漏，研究了Android系统中各种软件老化的表现</span></p> </div>; <div data-schema-version=""8""><p>优点：利用了故障注入的技术以快速达到老化状态</p> </div>",C:\Users\tristone\Zotero\storage\RP6NZGGR\7789385.html; C:\Users\tristone\Zotero\storage\B3XZLMK9\Qiao 等 - 2016 - An Empirical Study of Software Aging Manifestations in Android.pdf,,系统类型：Android; 老化影响：内存泄漏; 会议：ISSREW; 验证方法：实验实证; 分析方式：度量; 指标：堆内存,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
WAFZXCS2,conferencePaper,2016,"Valentim, Nathalia Assis; Macedo, Autran; Matias, Rivalino",A Systematic Mapping Review of the First 20 Years of Software Aging and Rejuvenation Research,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.42,,"Although software aging and rejuvenation (SAR) is a young research field, in its first 20 years a lot of knowledge has been produced. Nowadays, important scientific journals and conferences include SAR-related topics in their scope of interest. This fast growing and wide range of dissemination venues pose a challenge to researchers to keep tracking of the new findings and trends in this area. In this work, we collected and analyzed SAR research data using analytics to detect trends, patterns, and thematic gaps, in order to provide a comprehensive view of this research field over its first 20 years. We adopted the systematic mapping approach to answer research questions such as: How the main topics investigated in SAR have evolved over time? Which are the most investigated aging effects? Which rejuvenation techniques and strategies are more frequently used?",2016,2022-07-18 08:50:55,2024-10-04 11:59:19,,57-63,,,,,,,,,,,,,en-US,,,,,,,"CCF: B TLDR: This work collected and analyzed SAR research data using analytics to detect trends, patterns, and thematic gaps, in order to provide a comprehensive view of this research field over its first 20 years.","<div data-schema-version=""8""><p>概述：总结了1995-2014期间对软件老化的研究</p> </div>",C:\Users\tristone\Zotero\storage\YXLFC4UZ\7789381.html; C:\Users\tristone\Zotero\storage\6QQXY4LV\Valentim 等 - 2016 - A Systematic Mapping Review of the First 20 Years of Software Aging and Rejuvenation Research.pdf,,会议：ISSREW; 分析方式：综述,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
6BPEW2SI,conferencePaper,2016,"Okamura, Hiroyuki; Dohi, Tadashi",A Phase Expansion Approach for Transient Analysis of Software Rejuvenation Model,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2016.53,https://ieeexplore.ieee.org/document/7789387/?arnumber=7789387,"This paper deals with the transient analysis of software rejuvenation model. Concretely, we apply the phase expansion to the basic software rejuvenation model by Garg et al. (1995). The phase expansion is the approximation technique which utilizes the phase-type approximation. After applying the phase expansion, we formulate the interval reliability. In a numerical example, we investigate the accuracy of the approximation for the interval reliability.",2016-10,2024-09-02 12:25:10,2024-09-02 13:50:53,2024-09-02 12:25:10,98-103,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\LB7S7Q3Q\7789387.html; C:\Users\tristone\Zotero\storage\CDGX85JA\Okamura和Dohi - 2016 - A Phase Expansion Approach for Transient Analysis of Software Rejuvenation Model.pdf,,分析方式：Model-based; 验证方法：数值分析; 老化影响：故障率增加; 系统类型：非特定的; 会议：ISSREW; 模型：CTMC; 指标：点可用性，区间可靠性,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
DNIIIGAB,conferencePaper,2016,"Cotroneo, Domenico; Fucci, Francesco; Iannillo, Antonio Ken; Natella, Roberto; Pietrantuono, Roberto",Software Aging Analysis of the Android Mobile OS,2016 IEEE 27th International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE.2016.25,,"Mobile devices are significantly complex, feature-rich, and heavily customized, thus they are prone to software reliability and performance issues. This paper considers the problem of software aging in Android mobile OS, which causes the device to gradually degrade in responsiveness, and to eventually fail. We present a methodology to identify factors (such as workloads and device configurations) and resource utilization metrics that are correlated with software aging. Moreover, we performed an empirical analysis of recent Android devices, finding that software aging actually affects them. The analysis pointed out processes and components of the Android OS affected by software aging, and metrics useful as indicators of software aging to schedule software rejuvenation actions.",2016-10,2022-01-22 06:49:05,2024-08-15 09:26:42,,478-489,,,,,,,,,,,,,en-US,,,,,,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>不足：全部与LT为基准，如何排除瞬时影响和其他系统问题导致的影响？</p> </div>; <div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FDNIIIGAB%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FDNIIIGAB%22%2C%22type%22%3A%22paper-conference%22%2C%22abstract%22%3A%22Mobile%20devices%20are%20significantly%20complex%2C%20feature-rich%2C%20and%20heavily%20customized%2C%20thus%20they%20are%20prone%20to%20software%20reliability%20and%20performance%20issues.%20This%20paper%20considers%20the%20problem%20of%20software%20aging%20in%20Android%20mobile%20OS%2C%20which%20causes%20the%20device%20to%20gradually%20degrade%20in%20responsiveness%2C%20and%20to%20eventually%20fail.%20We%20present%20a%20methodology%20to%20identify%20factors%20(such%20as%20workloads%20and%20device%20configurations)%20and%20resource%20utilization%20metrics%20that%20are%20correlated%20with%20software%20aging.%20Moreover%2C%20we%20performed%20an%20empirical%20analysis%20of%20recent%20Android%20devices%2C%20finding%20that%20software%20aging%20actually%20affects%20them.%20The%20analysis%20pointed%20out%20processes%20and%20components%20of%20the%20Android%20OS%20affected%20by%20software%20aging%2C%20and%20metrics%20useful%20as%20indicators%20of%20software%20aging%20to%20schedule%20software%20rejuvenation%20actions.%22%2C%22container-title%22%3A%222016%20IEEE%2027th%20International%20Symposium%20on%20Software%20Reliability%20Engineering%20(ISSRE)%22%2C%22DOI%22%3A%2210.1109%2FISSRE.2016.25%22%2C%22event-title%22%3A%222016%20IEEE%2027th%20International%20Symposium%20on%20Software%20Reliability%20Engineering%20(ISSRE)%22%2C%22language%22%3A%22en-US%22%2C%22note%22%3A%22ISSN%3A%202332-6549%22%2C%22page%22%3A%22478-489%22%2C%22title%22%3A%22Software%20Aging%20Analysis%20of%20the%20Android%20Mobile%20OS%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Cotroneo%22%2C%22given%22%3A%22Domenico%22%7D%2C%7B%22family%22%3A%22Fucci%22%2C%22given%22%3A%22Francesco%22%7D%2C%7B%22family%22%3A%22Iannillo%22%2C%22given%22%3A%22Antonio%20Ken%22%7D%2C%7B%22family%22%3A%22Natella%22%2C%22given%22%3A%22Roberto%22%7D%2C%7B%22family%22%3A%22Pietrantuono%22%2C%22given%22%3A%22Roberto%22%7D%5D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222016%22%2C10%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>概述：<code>提出识别软件老化相关因素与指标的方法并通过实证分析指出受软件老化影响的流程和组件及可用作软件老化预测的指标</code></p> </div>; <div data-schema-version=""8""><p>优点：把对指标的分析细化到了任务级（进程），并找到了最受影响的几大进程</p> </div>",C:\Users\tristone\Zotero\storage\9SSRY79H\Cotroneo 等 - 2016 - Software Aging Analysis of the Android Mobile OS.pdf; C:\Users\tristone\Zotero\storage\P6PF5E63\7774545.html,,会议：ISSRE; 系统类型：Android; 验证方法：实验实证; 分析方式：现象分析&度量; 指标：LT，内存，存储，GC，Task-level; 老化影响：崩溃/挂起故障&性能降级&内存消耗&垃圾收集&存储; 模型：DOE，MK，Sen's; 实验时长：20H,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 IEEE 27th International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
MNS6Q3PW,conferencePaper,2016,"Nagaraju, Vidhyashree; Basavaraj, Veeresh Varad; Fiondella, Lance",Software rejuvenation of a fault-tolerant server subject to correlated failure,2016 Annual Reliability and Maintainability Symposium (RAMS),,,10.1109/RAMS.2016.7448076,,"Society depends increasingly on software based services, necessitating that applications achieve a high level of reliability and availability to maintain customer satisfaction and preserve system safety. These service-oriented applications often operate continuously, which exposes the software to ""aging"" where resource deterioration such as memory leaks can lead resource exhaustion and ultimately system failure. To mitigate the impact of aging, software rejuvenation refreshes or restarts the system periodically to recover lost resources, thereby averting failures. Software rejuvenation may also employ fault tolerance to reduce the impact of individual failures on system availability. However, virtually all previous software rejuvenation studies assume that failures experienced by the individual servers comprising a fault tolerant system are statistically independent. This paper analyzes the impact of correlated failures on the optimality of rejuvenation schedules for a system composed of two parallel servers that can experience correlated failures. The examples illustrate the impact of correlation on the optimality of rejuvenation schedules to maximize availability and minimize down time cost. The results indicate that increasing the correlation between the failures of the servers increases the rejuvenation period when the objective is to maximize availability. However, the rejuvenation period decreases when the objective is to minimize down time cost. Thus, the proposed approach can objectively identify the optimal rejuvenation period that maximizes availability or minimizes down time cost.",2016-01,2023-02-22 04:48:50,2024-08-14 08:00:39,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：分析了相关故障对由两个并行服务器组成的系统的恢复调度的最优性的影响。</p> </div>",C:\Users\tristone\Zotero\storage\RGGLTZNL\7448076.html; C:\Users\tristone\Zotero\storage\RLLZHXGJ\Nagaraju 等 - 2016 - Software rejuvenation of a fault-tolerant server subject to correlated failure.pdf,,分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 系统类型：服务器; 模型：SMP; 会议：RAMS; 指标：availability，downtime cost,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2016 Annual Reliability and Maintainability Symposium (RAMS),,,,,,,,,,,,,,,
PQNX29I8,journalArticle,2015,"Meng, Haining; Liu, Jianjun; Hei, Xinhong",Modeling and optimizing periodically inspected software rejuvenation policy based on geometric sequences,Reliability Engineering & System Safety,,09518320,10.1016/j.ress.2014.09.007,https://linkinghub.elsevier.com/retrieve/pii/S0951832014002178,"Semantic Scholar extracted view of ""Modeling and optimizing periodically inspected software rejuvenation policy based on geometric sequences"" by Haining Meng et al.",2015-01,2023-01-04 03:14:16,2024-10-12 03:23:36,2023-01-04 03:14:16,184-191,,,133.0,,Reliab. Eng. Syst. Saf.,,,,,,,,en,,,,,7.247,1.0,"JCR分区: Q1 中科院分区升级版: 工程技术1区 影响因子: 9.4 5年影响因子: 8.1 EI: 是 TLDR: A periodically inspected rejuvenation policy for software systems is studied, and the optimal inspection time and rejuvenation interval are derived to maximize system availability and minimize cost rate.","<div data-schema-version=""8""><p>概述：提出一种基于几何序列来确定对系统的检测间隔的软件系统周期性检测软件重生策略</p> </div>; <div data-schema-version=""8""><p>优点：可以极大降低平均停机成本，并减少检测成本</p> </div>",C:\Users\tristone\Zotero\storage\QRC9H3QJ\Meng 等 - 2015 - Modeling and optimizing periodically inspected software rejuvenation policy based on geometric seque.pdf; ,https://www.semanticscholar.org/paper/Modeling-and-optimizing-periodically-inspected-on-Meng-Liu/c887d15f4ffd2e46bb34aff497e7a4941c1bba82,验证方法：数值分析; 重生层级：非特定的; 系统类型：非特定的; 老化影响：性能降级; 指标：availability; 期刊：RESS; 分析方式：Measurement-based（检查时间间隔）; 模型：几何序列,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VS46DYJN,conferencePaper,2015,"Kourai, Kenichi; Ooba, Hiroki",Zero-copy Migration for Lightweight Software Rejuvenation of Virtualized Systems,Proceedings of the 6th Asia-Pacific Workshop on Systems,978-1-4503-3554-6,,10.1145/2797022.2797026,https://doi.org/10.1145/2797022.2797026,"Virtualized systems tend to suffer from software aging, which is the phenomenon that the state of a running system degrades with time. Software aging is restored by a technique called software rejuvenation, e.g., a system reboot. To reduce the downtime due to software rejuvenation, all the virtual machines (VMs) on an aged virtualized system have to be migrated in advance. However, VM migration stresses the system and causes performance degradation. In this paper, we propose VMBeam, which enables lightweight software rejuvenation of virtualized systems using zero-copy migration. When rejuvenating an aged virtualized system, VMBeam starts a new virtualized system at the same host by using nested virtualization. Then it migrates all the VMs from the aged virtualized system to the clean one. At this time, VMBeam directly relocates the memory of the VMs on the aged virtualized system to the clean virtualized system without any copy. We have implemented VMBeam in Xen and confirmed the decreases of system loads.",2015-07-27,2023-01-09 15:16:31,2024-10-05 08:34:33,2023-01-09,1–8,,,,,,,APSys '15,,,,Association for Computing Machinery,"New York, NY, USA",,,,,,ACM Digital Library,,,"<div data-schema-version=""8""><p>概述：通过零拷贝迁移减低重生时VM迁移的压力</p> </div>",C:\Users\tristone\Zotero\storage\XF2IAKXE\Kourai和Ooba - 2015 - Zero-copy Migration for Lightweight Software Rejuvenation of Virtualized Systems.pdf,,老化影响：崩溃/挂起故障&性能降级; 分析方式：rej; 验证方法：实验实证; 重生层级：VM; 会议：APSYS; 系统类型：虚拟化系统; 指标：重生代价; 重生方法：zero-copy migration,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
X72HADLC,journalArticle,2015,"Yakhchi, Moona; Alonso, Javier; Fazeli, Mahdi; Bitaraf, Amir Akhavan; Patooqhy, Ahmad",Neural network based approach for time to crash prediction to cope with software aging,Journal of Systems Engineering and Electronics,,1004-4132,10.1109/JSEE.2015.00047,http://ieeexplore.ieee.org/document/7111178/,"Recent studies have shown that software is one of the main reasons for computer systems unavailability. A growing accumulation of software errors with time causes a phenomenon called software aging. This phenomenon can result in system performance degradation and eventually system hang/crash. To cope with software aging, software rejuvenation has been proposed. Software rejuvenation is a proactive technique which leads to removing the accumulated software errors by stopping the system, cleaning up its internal state, and resuming its normal operation. One of the main challenges of software rejuvenation is accurately predicting the time to crash due to aging factors such as memory leaks. In this paper, different machine learning techniques are compared to accurately predict the software time to crash under different aging scenarios. Finally, by comparing the accuracy of different techniques, it can be concluded that the multilayer perceptron neural network has the highest prediction accuracy among all techniques studied.",2015-04,2023-02-23 07:04:54,2024-10-12 06:24:17,2023-02-23 07:04:54,407-414,,2.0,26.0,,J. Syst. Eng. Electron.,,,,,,,,,,,,,1.363,3.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.9 5年影响因子: 1.9 EI: 是 TLDR: Different machine learning techniques are compared to accurately predict the software time to crash under different aging scenarios and it can be concluded that the multilayer perceptron neural network has the highest prediction accuracy among all techniques studied.,[TLDR] Different machine learning techniques are compared to accurately predict the software time to crash under different aging scenarios and it can be concluded that the multilayer perceptron neural network has the highest prediction accuracy among all techniques studied.,; C:\Users\tristone\Zotero\storage\5MH3K6U6\Yakhchi 等 - 2015 - Neural network based approach for time to crash prediction to cope with software aging.pdf,https://www.semanticscholar.org/paper/Neural-network-based-approach-for-time-to-crash-to-Yakhchi-Alonso/e15fefe650573ca23060e40713df93cff1d0a381,分析方式：Measurement-based（ML）; 老化影响：内存泄漏; 模型：LR、MLP、M5P、SMO、GP、LMS、RT; 期刊：J SYST ENG ELECTRON; 系统类型：windows; 验证方法：实验实证&比较分析; 指标：处理器利用率、进程数和内存使用量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JB4YRB8Q,journalArticle,2015,"Rahme, Jean; Xu, Haiping",A Software Reliability Model for Cloud-Based Software Rejuvenation Using Dynamic Fault Trees,Int. J. Softw. Eng. Knowl. Eng.,,,10.1142/S021819401540029X,,"The dynamic fault tree (DFT) formalism is adopted and it is shown how cost-effective software rejuvenation schedules can be created to keep the system reliability consistently staying above a predefined critical level. Correctly measuring the reliability and availability of a cloud-based system is critical for evaluating its system performance. Due to the promised high reliability of physical facilities provided for cloud services, software faults have become one of the major factors for the failures of cloud-based systems. In this paper, we focus on the software aging phenomenon where system performance may be progressively degraded due to exhaustion of system resources, fragmentation and accumulation of errors. We use a proactive technique, called software rejuvenation, to counteract the software aging problem. The dynamic fault tree (DFT) formalism is adopted to model the system reliability before and during a software rejuvenation process in an aging cloud-based system. A novel analytical approach is presented to derive the reliability function of a cloud-based Hot SPare (HSP) gate, which is further verified using Continuous Time Markov Chains (CTMC) for its correctness. We use a case study of a cloud-based system to illustrate the validity of our approach. Based on the reliability analytical results, we show how cost-effective software rejuvenation schedules can be created to keep the system reliability consistently staying above a predefined critical level.",2015,2022-03-22 06:43:01,2024-10-12 06:23:04,,,,,,,Int. J. Softw. Eng. Knowl. Eng.,,,,,,,,en-US,,,,,,,TLDR: The dynamic fault tree (DFT) formalism is adopted and it is shown how cost-effective software rejuvenation schedules can be created to keep the system reliability consistently staying above a predefined critical level.,"<div data-schema-version=""8""><p>不足：建模过程组建的故障率设置成了恒定，与真实世界差距较大</p> </div>; <div data-schema-version=""8""><p>概述：提出一种基于动态故障树的方法来为基于云的系统建立软件重生</p> </div>; <div data-schema-version=""8""><p>优点：考虑了重生的成本效益</p> </div>",C:\Users\tristone\Zotero\storage\ILFEV4YT\Rahme和Xu - 2015 - A Software Reliability Model for Cloud-Based Software Rejuvenation Using Dynamic Fault Trees.pdf; ,https://www.semanticscholar.org/paper/A-Software-Reliability-Model-for-Cloud-Based-Using-Rahme-Xu/d8ac0ef04e832e7f0eb71a3c59953608db0aedf7,分析方式：Model-based; 老化影响：故障率增加; 模型：DFT; 期刊：SEKE; 系统类型：云计算系统; 验证方法：仿真模拟&数值分析; 指标：故障率; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4FFNTHYP,conferencePaper,2015,"Cotroneo, Domenico; Iannillo, Antonio Ken; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",The software aging and rejuvenation repository: Http://openscience.us/repo/software-aging/,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2015.7392054,https://ieeexplore.ieee.org/document/7392054,"While Software Aging and Rejuvenation (SAR) research has been steadily increasing, the artifacts related to SAR studies (such as software aging measurements and bug datasets) are seldom made available to researchers and practitioners, thus limiting potential improvements of rejuvenation solutions and their practical adoption. We discuss in this paper the role of artifacts in SAR research, and present SARRY (the Software Aging and Rejuvenation RepositorY), an open-access support for the SAR community to share research artifacts (available at http://openscience.us/repo/software-aging/). We invite researchers to contribute to SARRY, in order to aid future SAR research and to improve the visibility and impact of their work.",2015-11,2024-09-02 12:02:19,2024-09-02 13:44:43,2024-09-02 12:02:19,108-113,,,,,,The software aging and rejuvenation repository,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\CHCYXU9W\Cotroneo 等 - 2015 - The software aging and rejuvenation repository Httpopenscience.usreposoftware-aging.pdf; C:\Users\tristone\Zotero\storage\8UVU2SPU\7392054.html,,会议：ISSREW; 分析方式：其他,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
YISMIB9V,conferencePaper,2015,"Wu, Huaming; Wolter, Katinka",Software aging in mobile devices: Partial computation offloading as a solution,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2015.7392057,,"Long running applications on resource-constrained mobile devices can lead to software aging, which is a critical impediment to the mobile users due to its pervasive nature. Mobile offloading that migrates computation-intensive parts of applications from mobile devices onto resource-rich cloud servers, is an effective way for enhancing the availability of mobile services as it can postpone or prevent the software aging in mobile devices. Through partitioning the execution between the device side and the cloud side, the mobile device can have the most benefit from offloading in reducing utilisation of the device and increasing its lifetime. In this paper, we propose a path-based offloading partitioning (POP) algorithm to determine which portions of the application tasks to run on mobile devices and which portions on cloud servers with different cost models in mobile environments. The evaluation results show that the partial offloading scheme can significantly improve performance and reduce energy consumption by optimally distributing tasks between mobile devices and cloud servers, and can well adapt to changes in the environment.",2015,2022-03-22 06:36:34,2024-09-22 08:31:24,,125-131,,,,,,Software aging in mobile devices,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>备注：未使用重生策略，但可以有效缓解老化</p> </div>; <div data-schema-version=""8""><p>概述：将移动应用的应用程序的计算密集部分卸载到云服务器上可以有效缓解移动应用的软件老化，文章主要研究一种基于路径的卸载分区算法</p> </div>",C:\Users\tristone\Zotero\storage\2V3TJ8UX\7392057.html; C:\Users\tristone\Zotero\storage\4LI32I96\Wu和Wolter - 2015 - Software aging in mobile devices Partial computation offloading as a solution.pdf,,老化影响：性能降级; 指标：响应时间; 会议：ISSREW; 验证方法：逻辑推理; 分析方式：other; 系统类型：移动应用&云服务器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
5MMJ3F8G,conferencePaper,2015,"Machida, Fumio; Miyoshi, Naoto",An optimal stopping problem for software rejuvenation in a job processing system,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2015.7392059,https://ieeexplore.ieee.org/document/7392059/keywords#keywords,"In this paper, we derive the optimal policy for deciding software rejuvenation trigger in a job processing system when observing a performance degradation of the system. At the detection of service degradation, we assume that the system enters a digesting phase where newly arrival jobs are rejected and queued jobs are processed with decreased service rate. The service can be modeled as a pure death process, and both of the delayed jobs due to decreased service rate, the dropped jobs caused by rejuvenation, and the rejected arrival jobs are counted as the cost components. We formulate the decision problem of software rejuvenation, which trade-offs the costs associated with the decisions, as an optimal stopping problem. Our analysis on the optimality equation clarifies the conditions to switch the optimal policy for triggering software rejuvenation to minimize the expected cost.",2015-11,2024-09-02 12:17:19,2024-09-02 13:46:54,2024-09-02 12:17:19,139-143,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\E845ILA6\keywords.html; C:\Users\tristone\Zotero\storage\CZV3J8YR\Machida和Miyoshi - 2015 - An optimal stopping problem for software rejuvenation in a job processing system.pdf,,分析方式：Model-based; 验证方法：数值分析; 老化影响：性能降级; 会议：ISSREW; 模型：M/M/1队列模型; 指标：系统状态转换相关成本,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2015 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
ZLLNEMDI,conferencePaper,2015,"Mohan, Biju R; Reddy, G Ram Mohana",The effect of software aging on power usage,2015 IEEE 9th International Conference on Intelligent Systems and Control (ISCO),,,10.1109/ISCO.2015.7282360,https://ieeexplore.ieee.org/document/7282360,"This paper tries to establish relation between the power usage and software aging. Software aging is the performance degradation of long running software due to shrinking in physical memory, increase in swap read and write rate and increase in CPU utilization. This paper tries to establish the relation between the Software aging and the power usage. Experimental results demonstrate that CPU utilization increases over a period of time, when the work load remains the constant. Linear Regression analysis is used for establishing this trend.",2015-01,2024-07-26 11:59:53,2024-10-12 03:23:54,2024-07-26 11:59:53,1-3,,,,,,,,,,,,,,,,,,IEEE Xplore,,"TLDR: Experimental results demonstrate that CPU utilization increases over a period of time, when the work load remains the constant, and Linear Regression analysis is used for establishing this trend.",,C:\Users\tristone\Zotero\storage\73ECMWTI\7282360.html; C:\Users\tristone\Zotero\storage\3WIX4S9Y\Mohan和Reddy - 2015 - The effect of software aging on power usage.pdf,,系统类型：VMM; 验证方法：实验实证; 分析方式：度量; 老化影响：能耗增加; 模型：LR; 指标：CPU，Power usage,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2015 IEEE 9th International Conference on Intelligent Systems and Control (ISCO),,,,,,,,,,,,,,,
Q4B6C959,conferencePaper,2015,"Liu, Jing; Zhou, Jiantao; Buyya, Rajkumar",Software Rejuvenation Based Fault Tolerance Scheme for Cloud Applications,2015 IEEE 8th International Conference on Cloud Computing,,,10.1109/CLOUD.2015.164,http://ieeexplore.ieee.org/document/7214174/,"Cloud applications are typically composed of multiple cloud service components communicating with each other through web service interfaces, where each component fulfills specified functionalities. Lack of effective fault tolerance scheme is one of major obstacles for enhancing availability and efficiency of complex and aging cloud application systems. In this paper, we propose a holistic software rejuvenation based fault tolerance scheme for cloud applications, which contains three indispensible parts: adaptive failure detection, aging degree evaluation, and checkpoint with trace replay based component rejuvenation. Through a preliminary and qualitative evaluation, it shows that our new fault tolerance scheme brings promising improvement on the availability of cloud applications.",2015-06,2023-01-09 14:37:41,2024-10-12 06:21:56,2023-01-09 14:37:41,1115-1118,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2015 IEEE 8th International Conference on Cloud Computing (CLOUD) ISBN: 9781467372879 Place: New York City, NY, USA Publisher: IEEE CCF: C TLDR: A holistic software rejuvenation based fault tolerance scheme for cloud applications, which contains three indispensible parts: adaptive failure detection, aging degree evaluation, and checkpoint with trace replay based component rejuvenation is proposed.","<div data-schema-version=""8""><p>不足：未考虑网络故障</p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一种基于软件容错的云应用容错方案，其包括自适应故障检测、老化程度评估和基于跟踪重放的组件容错检查点</span></p> </div>; [TLDR] A holistic software rejuvenation based fault tolerance scheme for cloud applications, which contains three indispensible parts: adaptive failure detection, aging degree evaluation, and checkpoint with trace replay based component rejuvenation is proposed.",C:\Users\tristone\Zotero\storage\WW7NTTNI\Liu 等 - 2015 - Software Rejuvenation Based Fault Tolerance Scheme for Cloud Applications.pdf; ,https://www.semanticscholar.org/paper/Software-Rejuvenation-Based-Fault-Tolerance-Scheme-Liu-Zhou/0930ed509b0d008b15fb07bd08c2d43d274df403,方法：检查点机制，跟踪记录和重放，实时虚拟机迁移技术; 分析方式：Measurement-based（阈值）&other; 会议：CLOUD; 老化影响：崩溃/挂起故障; 系统类型：云应用系统; 验证方法：仿真模拟; 指标：内存，CPU利用率; 重生层级：节点,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SPXJU4G6,conferencePaper,2015,"Guo, Chunhui; Wu, Hao; Hua, Xiayu; Lautner, Douglas; Ren, Shangping",Use Two-Level Rejuvenation to Combat Software Aging and Maximize Average Resource Performance,"2015 IEEE 17th International Conference on High Performance Computing and Communications, 2015 IEEE 7th International Symposium on Cyberspace Safety and Security, and 2015 IEEE 12th International Conference on Embedded Software and Systems",,,10.1109/HPCC-CSS-ICESS.2015.306,,"Software aging is a common phenomenon which is often manifested through system performance degradation. Rejuvenation is one of the most commonly used approaches to handle issues caused by software aging. To combat resource performance degradation and at the same time maintain maximized average resource performance, we present a two-level rejuvenation strategy, i.e., interleaving a set of n warm rejuvenations with one cold rejuvenation. Our target is to find the optimal n that maximizes system average performance. We first define a resource model that takes into consideration of performance degradation and two-level rejuvenations. Based on the resource model, we formally analyze the resource supply and present the MAX-PERFORMANCE algorithm to determine the optimal rejuvenation pattern that maximizes the average resource performance. The simulation results show that with a two-level rejuvenation strategy, we can achieve 25.22% higher average resource performance compared with a single level rejuvenation strategy.",2015,2022-04-10 09:02:45,2024-10-03 08:52:39,,1160-1165,,,,,,,,,,,,,en-US,,,,,,,"CCF: C TLDR: A two-level rejuvenation strategy, i.e., interleaving a set of n warm rejuvenations with one cold rejuvenation to find the optimal n that maximizes system average performance, to combat resource performance degradation and maintain maximized average resource performance.","<div data-schema-version=""8""><p>不足：没有考虑负载</p> </div>; <div data-schema-version=""8""><p>概述：一种应用程序/物理机双层级重生技术</p> </div>; <div data-schema-version=""8""><p>优点：得出应用程序重启次数与物理机重启次数的最佳比值</p> </div>",C:\Users\tristone\Zotero\storage\ZLXK7HXJ\Guo 等 - 2015 - Use Two-Level Rejuvenation to Combat Software Aging and Maximize Average Resource Performance.pdf; C:\Users\tristone\Zotero\storage\KGZGPPPG\7336326.html,,老化影响：崩溃/挂起故障&性能降级; 系统类型：Android; 验证方法：仿真模拟&比较分析; 指标：重生代价; 会议：HPCC; 重生层级：应用程序&物理机; 模型：P^2D资源模型; 分析方式：rej&Model-based,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2015 IEEE 17th International Conference on High Performance Computing and Communications, 2015 IEEE 7th International Symposium on Cyberspace Safety and Security, and 2015 IEEE 12th International Conference on Embedded Software and Systems",,,,,,,,,,,,,,,
JQU9CW6E,journalArticle,2014,"Okamura, H.; Yamamoto, K.; Dohi, T.",Transient Analysis of Software Rejuvenation Policies in Virtualized System: Phase-Type Expansion Approach,Quality Technology & Quantitative Management,,,10.1080/16843703.2014.11673349,,"The phase-type expansion is applied to analyze the pointwise availability of virtual-machine (VM) based software rejuvenation with two policies; cold-VM and warm-VM rejuvenation policies. Abstract HeThis paper presents a transient analysis of software rejuvenation with virtualization. In particular, we apply the phase-type expansion to analyze the pointwise availability of virtual-machine (VM) based software rejuvenation with two policies; cold-VM and warm-VM rejuvenation policies. The performance measures can be derived from the stochastic models described by labeled Markov regenerative stochastic Petri Nets (MRSPNs).",2014,2022-03-22 06:52:43,2024-08-14 08:01:52,,,,,,,Qual. Technol. Quant. M.,Transient Analysis of Software Rejuvenation Policies in Virtualized System,,,,,,,en-US,,,,,,,JCR分区: Q1 中科院分区升级版: 工程技术2区 影响因子: 2.3 5年影响因子: 2.1 EI: 是,"<div data-schema-version=""8""><p>不足：未讨论相位数和精度之间的权重；仅考虑了重生时机，未考虑指标</p> </div>; <div data-schema-version=""8""><p>概述：基于虚拟系统瞬态分析方法的软件重生技术</p> </div>; <div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FJQU9CW6E%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FJQU9CW6E%22%2C%22type%22%3A%22article-journal%22%2C%22abstract%22%3A%22The%20phase-type%20expansion%20is%20applied%20to%20analyze%20the%20pointwise%20availability%20of%20virtual-machine%20(VM)%20based%20software%20rejuvenation%20with%20two%20policies%3B%20cold-VM%20and%20warm-VM%20rejuvenation%20policies.%20Abstract%20HeThis%20paper%20presents%20a%20transient%20analysis%20of%20software%20rejuvenation%20with%20virtualization.%20In%20particular%2C%20we%20apply%20the%20phase-type%20expansion%20to%20analyze%20the%20pointwise%20availability%20of%20virtual-machine%20(VM)%20based%20software%20rejuvenation%20with%20two%20policies%3B%20cold-VM%20and%20warm-VM%20rejuvenation%20policies.%20The%20performance%20measures%20can%20be%20derived%20from%20the%20stochastic%20models%20described%20by%20labeled%20Markov%20regenerative%20stochastic%20Petri%20Nets%20(MRSPNs).%22%2C%22DOI%22%3A%2210.1080%2F16843703.2014.11673349%22%2C%22language%22%3A%22en-US%22%2C%22title%22%3A%22Transient%20Analysis%20of%20Software%20Rejuvenation%20Policies%20in%20Virtualized%20System%3A%20Phase-Type%20Expansion%20Approach%22%2C%22title-short%22%3A%22Transient%20Analysis%20of%20Software%20Rejuvenation%20Policies%20in%20Virtualized%20System%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Okamura%22%2C%22given%22%3A%22H.%22%7D%2C%7B%22family%22%3A%22Yamamoto%22%2C%22given%22%3A%22K.%22%7D%2C%7B%22family%22%3A%22Dohi%22%2C%22given%22%3A%22T.%22%7D%5D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222014%22%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>优点：考虑的时系统的瞬态状态，无需收集一些数据；第一次将PH（phase-type）扩展到大型MRGP中</p> </div>",C:\Users\tristone\Zotero\storage\9HAZ8P9I\Okamura 等 - 2014 - Transient Analysis of Software Rejuvenation Policies in Virtualized System Phase-Type Expansion App.pdf; ,https://www.semanticscholar.org/paper/Transient-Analysis-of-Software-Rejuvenation-in-Okamura-Yamamoto/b2d9ea441414e575133027468277961833e887ce,分析方式：Model-based; 验证方法：仿真模拟; 系统类型：VMM; 重生层级：VM; 模型：MRSPN&Petri网; 期刊：QUAL TECHNOL QUANT M,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GIK8EJMG,journalArticle,2014,"Xu, Jian; Li, Xuefeng; Zhong, Y.; Zhang, Hong",Availability Modeling and Analysis of a Single-Server Virtualized System with Rejuvenation,J. Softw.,,,10.4304/JSW.9.1.129-139,,"This paper presents two stochastic reward net based availability models for a single-server virtualized system and studies the impact of two critical parameters, the VMM rejuvenation interval and the VM aging detection probability, on downtime and on the number of transaction lost by sensitivity analysis. Availability of business-critical application servers is an issue of paramount importance that has received special attention from the industry and academia in the last decade. This paper presents two stochastic reward net based availability models for a single-server virtualized system. The similarity in both models is that software rejuvenation is applied at not only virtual machine monitor (VMM) level using a time-base policy but also at virtual machines (VMs) using a prediction-based policy. The key difference is that the passive software replication and the active software replication are respectively adopted at the VM level of both models. We compare these models in terms of steady-state system availability by numerical analysis. Results show steady-state system availability with the active replication style gets a bit better than that of the passive one. Further, we study the impact of two critical parameters, the VMM rejuvenation interval and the VM aging detection probability, on downtime and on the number of transaction lost by sensitivity analysis.",2014,2022-03-22 02:51:22,2024-10-12 06:24:11,,,,,,,J. Softw.,,,,,,,,en-US,,,,,,,"TLDR: This paper presents two stochastic reward net based availability models for a single-server virtualized system and studies the impact of two critical parameters, the VMM rejuvenation interval and the VM aging detection probability, on downtime and on the number of transaction lost by sensitivity analysis.","<div data-schema-version=""8""><p>不足：模型中的转换时间设置为了指数分布</p> </div>; <div data-schema-version=""8""><p>概述：基于SRN模型的单服务器虚拟化系统重生策略</p> </div>; <div data-schema-version=""8""><p>优点：该技术对VMM使用基于时间的策略，对VM使用基于预测的策略，有更好的结果</p> </div>",; C:\Users\tristone\Zotero\storage\Q4WAA94C\Xu 等 - 2014 - Availability Modeling and Analysis of a Single-Server Virtualized System with Rejuvenation.pdf,https://www.semanticscholar.org/paper/Availability-Modeling-and-Analysis-of-a-Virtualized-Xu-Li/5c7c81f664475f2e87835bd2099908be2a829f99,分析方式：Model-based; 老化影响：非特定的; 模型：SRN; 期刊：JSW; 系统类型：VMM; 验证方法：数值分析&实验实证; 指标：停机时间; 重生层级：VM&VMM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YI9NEG9E,journalArticle,2014,"Zheng, Pengfei; Qi, Yong; Zhou, Yangfan; Chen, Pengfei; Zhan, Jianfeng; Lyu, Michael Rung-Tsong",An Automatic Framework for Detecting and Characterizing Performance Degradation of Software Systems,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2014.2338255,,"Software systems that run continuously over a long time have been frequently reported encountering gradual degradation issues. That is, as time progresses, software tends to exhibit degraded performance, deflated service capacity, or deteriorated QoS. Currently, the state-of-the-art approach of Mann-Kendall Test & Seasonal Kendall Test & Sen's Slope Estimator & Seasonal Sen's Slope Estimator (MKSK) detects and characterizes degradation via a combination of techniques in statistical trend analysis. Nevertheless, we pinpoint some drawbacks of MKSK in this paper: 1) MKSK cannot be automated for large scale software degradation analysis, 2) MKSK estimates the degradation trend of software in an oversimplified linear way, 3) MKSK is sensitive to noise, and 4) MKSK suffers from high computational complexity. To overcome all these limitations, we propose a more advanced approach called Modified Cox-Stuart Test & Iterative Hodrick-Prescott Filter (CSHP). The superiority of our CSHP approach over MKSK is validated through extensive Monte Carlo simulations, as well as a real performance dataset measured from 99 real-world web servers.",2014,2022-07-06 12:20:59,2024-09-23 11:22:16,,927-943,,4.0,63.0,,IEEE Trans. Rel.,,,,,,,,en-US,,,,,5.883,2.0,Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C,"<div data-schema-version=""8""><p>概述：基于CSHP的软件老化检测技术，比MKSK更优</p> </div>; <div data-schema-version=""9""><p>提出了新的趋势检测技术。MK缺点：1.不能用于大规模软件退化分析；2.用过于简化的线性方式估计软件退化趋势；3.对噪声敏感；4.计算复杂性较高；5<span style=""color: rgb(0, 0, 0)"">在控制降级检测的假阳性方面表现不稳定</span></p> </div>; <div data-schema-version=""8""><p>优点：考虑了<span style=""color: rgb(0, 0, 0)"">检测能力、假阳性率、退化趋势估计精度、自动化水平、噪声鲁棒性和时间复杂性，比MKSK算法更优</span></p> </div>",C:\Users\tristone\Zotero\storage\IKEWFBE2\6862070.html; C:\Users\tristone\Zotero\storage\UXEJVJNW\Zheng 等 - 2014 - An Automatic Framework for Detecting and Characterizing Performance Degradation of Software Systems.pdf,,系统类型：web服务器; 期刊：TR; 分析方式：度量; 验证方法：数值分析&实验实证&比较分析; 模型：CSHP; 指标：吞吐量，系统可用性; 老化影响：性能降级、资源耗尽、QoS降级,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ZE8SUDE4,journalArticle,2014,"Barada, Subhashree; Swain, Santosh Kumar",A Survey Report On Software Aging and Rejuvenation studies in Virtualized Environment,Engineering Technology,,,,,"Software aging is a phenomenon that occurs in a long running complex software system that tends to decrease in performance or increase in failure rate. This phenomenon lead to performance degradation and crash/hang failure. To counteract software aging a technique named as software rejuvenation has been proposed, which remove aging related failures and its effects. Nowadays, virtualized platform has become the popular choice to deploy complex and long running application. Critical and long running applications are always expected to be available but these applications are more prone to suffer from software aging phenomenon. To counteract this phenomenon software rejuvenation technique has been used. To eliminate downtime outages due to rejuvenation we have combined rejuvenation manager component with two aging indicators application-specific indicator and system-wide indicator. The idea behind our paper is to propose a algorithm which will choose the correct rejuvenation technique for virtual machine(VM) and virtual machine monitor(VMM) according to its aging effect. Through this method we can save both time and cost.",2014,2022-07-18 08:51:27,2024-08-14 07:51:49,,6,,5.0,5.0,,Engineering Technology,,,,,,,,en-US,,,,,,,EI: 是,"<div data-schema-version=""8""><p>概述：总结软件老化在不同系统中的影响，以及在VMM中应用的重生技术</p> </div>",C:\Users\tristone\Zotero\storage\CVHYZIHT\Barada和Swain - 2014 - A Survey Report On Software Aging and Rejuvenation studies in Virtualized Environment.pdf,,分析方式：综述; 会议：IJCSET,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JQZVWZDX,journalArticle,2014,"Araujo, Jean; Matos, Rubens; Alves, Vandi; Maciel, Paulo; Souza, F. Vieira de; Jr., Rivalino Matias; Trivedi, Kishor S.",Software aging in the eucalyptus cloud computing infrastructure: Characterization and rejuvenation,ACM Journal on Emerging Technologies in Computing Systems,,"1550-4832, 1550-4840",10.1145/2539122,https://dl.acm.org/doi/10.1145/2539122,"The need for high reliability, availability and performance has significantly increased in modern applications, that handle rapidly growing demands while providing uninterruptible services. Cloud computing systems fundamentally provide access to large pools of data and computational resources. Eucalyptus is a software framework largely used to implement private clouds and hybrid-style Infrastructure as a Service. It implements the Amazon Web Service (AWS) API, allowing interoperability with other AWS-based services. This article investigates the software aging effects in the Eucalyptus framework, considering workloads composed of intensive requests for remote storage attachment and virtual machine instantiations. We found problems that may be harmful to system dependability and performance, specifically regarding to RAM memory and swap space exhaustion, besides highly excessive CPU utilization by the virtual machines. We also present an approach that applies time series analysis to schedule rejuvenation, so as to reduce the downtime by predicting the proper moment to perform the rejuvenation. We experimentally evaluate our approach using an Eucalyptus test bed. The results show that our approach achieves higher availability, when compared to a threshold-triggered rejuvenation method based on continuous monitoring of resources utilization.",2014-01,2023-01-09 13:14:22,2024-09-24 12:15:42,2023-01-09 13:14:22,1-22,,1.0,10.0,,ACM Journal on Emerging Technologies in Computing Systems,Software aging in the eucalyptus cloud computing infrastructure,,,,,,,en,,,,,2.013,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 2.1 5年影响因子: 2.1 EI: 是 CCF: C,"<div data-schema-version=""8""><p>备注：检测时间为300h</p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">研究了基于eucalyptus的云计算基础设施中的软件老化影响，并提出一个基于时间序列的重生技术</span></p> </div>; [TLDR] This article investigates the software aging effects in the Eucalyptus framework, considering workloads composed of intensive requests for remote storage attachment and virtual machine instantiations and presents an approach that applies time series analysis to schedule rejuvenation, so as to reduce the downtime.",C:\Users\tristone\Zotero\storage\WRD6I36S\Araujo 等 - 2014 - Software aging in the eucalyptus cloud computing infrastructure Characterization and rejuvenation.pdf; ,https://www.semanticscholar.org/paper/Software-aging-in-the-eucalyptus-cloud-computing-Araujo-Matos/7d68723aa740277bfcbf401d8cf13d11980d592a,验证方法：实验实证&比较分析; 重生层级：节点; 期刊：JETC; 系统类型：云（Eucalyptus）; 老化影响：内存泄漏&内存碎片化; 阈值：临界内存使用（CMU）; 指标：内存，CPU利用率；MAPE，MAD，MSD; 分析方式：Measurement-based（时间序列）; 模型：线性模型LTM、二次模型QTM、指数增长模型GCM和Pearl Reed logistic模型SCTM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Y9HMRHBC,journalArticle,2014,"Zhao, Jing; Jin, Yuliang; Trivedi, Kishor S.; Jr., Rivalino Matias; Wang, Yanbin",Software Rejuvenation Scheduling Using Accelerated Life Testing,ACM Journal on Emerging Technologies in Computing Systems,,1550-4832,10.1145/2539118,https://doi.org/10.1145/2539118,"A number of studies have reported the phenomenon of “Software aging”, caused by resource exhaustion and characterized by progressive software performance degradation. In this article, we carry out an experimental study of software aging and rejuvenation for an on-line bookstore application, following the standard configuration of TPC-W benchmark. While real website is used for the bookstore, the clients are emulated. In order to reduce the time to application failures caused by memory leaks, we use the accelerated life testing (ALT) approach. We then select the Weibull time to failure distribution at normal level, to be used in a semi-Markov process, to compute the optimal software rejuvenation trigger interval. Since the validation of optimal rejuvenation trigger interval with emulated browsers will take an inordinate long time, we develop a simulation model to validate the ALT experimental results, and also estimate the steady-state availability to cross-validate the results of the semi-Markov availability model.",2014-01-13,2022-10-26 08:11:09,2024-10-12 06:24:53,2022-10-26 08:11:09,9:1–9:23,,1.0,10.0,,ACM Journal on Emerging Technologies in Computing Systems,,,,,,,,en-US,,,,,2.013,4.0,"JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 2.1 5年影响因子: 2.1 EI: 是 CCF: C TLDR: An experimental study of software aging and rejuvenation for an on-line bookstore application, following the standard configuration of TPC-W benchmark, and develops a simulation model to validate the ALT experimental results, and estimates the steady-state availability to cross-validate the results of the semi-Markov availability model.","<div data-schema-version=""8""><p>不足：通过注入内存泄漏研究老化，忽略了老化的其他原因；仿真实验中并未执行重生操作</p> </div>; <div data-schema-version=""8""><p>概述：通过注入内存泄漏来加速软件老化，进而用SMP模型判断重生时机</p> </div>",C:\Users\tristone\Zotero\storage\AJYQWYV4\Zhao 等 - 2014 - Software Rejuvenation Scheduling Using Accelerated Life Testing.pdf,,测试方法：加速寿命测试; 分析方式：testing; 老化影响：故障率增加; 模型：SMP; 期刊：JETC; 系统类型：web服务器; 验证方法：仿真模拟&实验实证; 指标：内存，CPU利用率; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
AE8H5X5D,journalArticle,2014,"Cotroneo, Domenico; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",A survey of software aging and rejuvenation studies,ACM Journal on Emerging Technologies in Computing Systems,,"1550-4832, 1550-4840",10.1145/2539117,https://dl.acm.org/doi/10.1145/2539117,"Software aging               is a phenomenon plaguing many long-running complex software systems, which exhibit performance degradation or an increasing failure rate. Several strategies based on the proactive               rejuvenation               of the software state have been proposed to counteract software aging and prevent failures. This survey article provides an overview of studies on Software Aging and Rejuvenation (SAR) that have appeared in major journals and conference proceedings, with respect to the statistical approaches that have been used to forecast software aging phenomena and to plan rejuvenation, the kind of systems and aging effects that have been studied, and the techniques that have been proposed to rejuvenate complex software systems. The analysis is useful to identify key results from SAR research, and it is leveraged in this article to highlight trends and open issues.",2014-01,2022-01-22 06:49:05,2024-10-04 11:59:20,2021-11-30 09:42:05,1-34,,1.0,10.0,,ACM Journal on Emerging Technologies in Computing Systems,,,,,,,,en-US,,,,,2.013,4.0,"JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 2.1 5年影响因子: 2.1 EI: 是 CCF: C TLDR: An overview of studies on Software Aging and Rejuvenation (SAR) that have appeared in major journals and conference proceedings is provided, with respect to the statistical approaches that have been used to forecast software aging phenomena and to plan rejuvenation.","<div data-schema-version=""8""><p>概述：<code>总结主要期刊和会议中的软件老化与重生（SAR）研究（1992-2011）</code></p> </div>",C:\Users\tristone\Zotero\storage\P5D5VAWS\Cotroneo 等 - 2014 - A survey of software aging and rejuvenation studies.pdf,,分析方式：综述; 期刊：JETC,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
R3PU378X,journalArticle,2014,"Machida, F.; Nicola, V.; Trivedi, Kishor S.",Job completion time on a virtualized server with software rejuvenation,ACM J. Emerg. Technol. Comput. Syst.,,,10.1145/2539121,,"With the parameter settings, VMM rejuvenation with prs job interruption improves the performance of job execution regardless of the aging type, with performance degradation is taken into account. This article analyzes the completion time of a job running on a virtualized server subject to software aging and rejuvenation in a virtual machine monitor (VMM). A job running on the server may be interrupted by virtual machine (VM) failure, VMM failure or VMM rejuvenation. The job interruption is categorized as either preemptive-repeat (prt), in which case the interrupted job needs to restart from the beginning, or preemptive-resume (prs), in which case the job resumes execution from the point of interruption. Using a semi-Markov process (SMP) to model the server behavior, the steady-state server availability is computed and the theory developed in Kulkarni et al. [1987] is used to obtain the Laplace-Stieltjes transform (LST) of the job completion time. In the numerical experiments, we introduce four types of aging behavior of VMM. The effectiveness of VMM rejuvenation on job completion time is discussed in association with the type of interruption it causes and the VMM aging type. With our parameter settings, VMM rejuvenation with prs job interruption improves the performance of job execution regardless of the aging type, with performance degradation is taken into account.",2014,2022-03-22 06:45:18,2024-09-12 08:27:28,,,,,,,ACM J. Emerg. Technol. Comput. Syst.,,,,,,,,en-US,,,,,,,JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 2.1 5年影响因子: 2.1 EI: 是 CCF: C,"<div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FR3PU378X%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FR3PU378X%22%2C%22type%22%3A%22article-journal%22%2C%22abstract%22%3A%22With%20the%20parameter%20settings%2C%20VMM%20rejuvenation%20with%20prs%20job%20interruption%20improves%20the%20performance%20of%20job%20execution%20regardless%20of%20the%20aging%20type%2C%20with%20performance%20degradation%20is%20taken%20into%20account.%20This%20article%20analyzes%20the%20completion%20time%20of%20a%20job%20running%20on%20a%20virtualized%20server%20subject%20to%20software%20aging%20and%20rejuvenation%20in%20a%20virtual%20machine%20monitor%20(VMM).%20A%20job%20running%20on%20the%20server%20may%20be%20interrupted%20by%20virtual%20machine%20(VM)%20failure%2C%20VMM%20failure%20or%20VMM%20rejuvenation.%20The%20job%20interruption%20is%20categorized%20as%20either%20preemptive-repeat%20(prt)%2C%20in%20which%20case%20the%20interrupted%20job%20needs%20to%20restart%20from%20the%20beginning%2C%20or%20preemptive-resume%20(prs)%2C%20in%20which%20case%20the%20job%20resumes%20execution%20from%20the%20point%20of%20interruption.%20Using%20a%20semi-Markov%20process%20(SMP)%20to%20model%20the%20server%20behavior%2C%20the%20steady-state%20server%20availability%20is%20computed%20and%20the%20theory%20developed%20in%20Kulkarni%20et%20al.%20%5B1987%5D%20is%20used%20to%20obtain%20the%20Laplace-Stieltjes%20transform%20(LST)%20of%20the%20job%20completion%20time.%20In%20the%20numerical%20experiments%2C%20we%20introduce%20four%20types%20of%20aging%20behavior%20of%20VMM.%20The%20effectiveness%20of%20VMM%20rejuvenation%20on%20job%20completion%20time%20is%20discussed%20in%20association%20with%20the%20type%20of%20interruption%20it%20causes%20and%20the%20VMM%20aging%20type.%20With%20our%20parameter%20settings%2C%20VMM%20rejuvenation%20with%20prs%20job%20interruption%20improves%20the%20performance%20of%20job%20execution%20regardless%20of%20the%20aging%20type%2C%20with%20performance%20degradation%20is%20taken%20into%20account.%22%2C%22container-title%22%3A%22ACM%20J.%20Emerg.%20Technol.%20Comput.%20Syst.%22%2C%22DOI%22%3A%2210.1145%2F2539121%22%2C%22language%22%3A%22en-US%22%2C%22title%22%3A%22Job%20completion%20time%20on%20a%20virtualized%20server%20with%20software%20rejuvenation%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Machida%22%2C%22given%22%3A%22F.%22%7D%2C%7B%22family%22%3A%22Nicola%22%2C%22given%22%3A%22V.%22%7D%2C%7B%22family%22%3A%22Trivedi%22%2C%22given%22%3A%22Kishor%20S.%22%7D%5D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222014%22%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>不足：模型中的Cold-VM rejuvenation不适用于作业完成时间较长的情况</p> </div>; <div data-schema-version=""8""><p>概述：在VM系统中比较了暖重生与冷重生对缓解老化的影响</p> </div>; <div data-schema-version=""8""><p>优点：量化了对客户有影响的工作时间分布度量；所用SMP比huang研究的原始SMP多一个状态，属于其扩展</p> </div>",C:\Users\tristone\Zotero\storage\XM9HDQGB\Machida 等 - 2014 - Job completion time on a virtualized server with software rejuvenation.pdf; ,https://www.semanticscholar.org/paper/Job-completion-time-on-a-virtualized-server-with-Machida-Nicola/1799149b061d8b72b9d65fa6d9deefb3904d1827,重生层级：节点; 分析方式：Model-based; 系统类型：VMM; 验证方法：实验实证; 模型：SMP; 期刊：JETC; 老化影响：工作完成时间延长; 指标：工作完成时间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5K8HCJTN,conferencePaper,2014,"Sudhakar, Chapram; Shah, Ishan; Ramesh, T.",Software rejuvenation in cloud systems using neural networks,"2014 International Conference on Parallel, Distributed and Grid Computing",,,10.1109/PDGC.2014.7030747,https://ieeexplore.ieee.org/abstract/document/7030747,"Virtual Machine Monitor (VMM) is very important for the cloud and data center environment. VMM runs continuously for a long time and hence encounters the problem of software aging. VMM experiences failure because of software aging. In order to prevent the VMM failure caused by software aging, a proactive fault management approach called software rejuvenation is used. There are various software rejuvenation approaches existing in literature that can be broadly categorized into two categories namely model based approaches and measurement based approaches. Time to failure is predicted in measurement based approaches by monitoring the resource usage statistics. There can be any non-linear relationship between resource usage statistics and the time to failure. Such a nonlinear function can be approximated using Artificial Neural Networks (ANN). The change in the value of attributes of resources is given as input to ANN and new value of time to failure is generated as output. Experiments shows that if there is some pattern in the arrival and departure of the VMs, then the prediction is more accurate.",2014-12,2024-07-29 09:16:47,2024-09-29 08:25:44,2024-07-29 09:16:47,230-233,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>基于神经网络的软件再生方法，预测VMM的故障时间。使用两种神经网络模型：一种以单个时间点的数据作为输入，另一种以时间窗口内的数据作为输入。</p> </div>",C:\Users\tristone\Zotero\storage\B4ZJVH5Y\Sudhakar 等 - 2014 - Software rejuvenation in cloud systems using neural networks.pdf,,分析方式：度量&Measurement-based（ML）; 验证方法：实验实证&比较分析; 老化影响：非特定的; 系统类型：云（VMM）; 指标：内存，CPU，网络连接数，进程数，线程数; 模型：ANN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2014 International Conference on Parallel, Distributed and Grid Computing",,,,,,,,,,,,,,,
J9XNQXGS,conferencePaper,2014,"Xu, Jian; Wu, Wang-wen; Ma, Chao-yi",SOM-based aging detection for Virtual Machine Monitor,"2014 IEEE Workshop on Electronics, Computer and Applications",,,10.1109/IWECA.2014.6845739,,"A virtual monitor machine (VMM) inevitably goes through software aging due to its characteristics of large and complex middleware and long-time and continuous running. The VMM aging manifests as gradually degrading performance and an increasing failure occurrence rate, due to error conditions that accrue over time and eventually lead the VMM to failure. To counteract the VMM aging, this paper proposes an aging detection and quantification algorithm for Virtual Machine Monitor, which applies Self-organizing Maps (SOM) to capture VMM behaviors from runtime measurement data and takes a neighborhood area density of a winning neuron as an aging quantification metric to detect VMM aging. Results of two experiments injecting different resource leaks on the Xen platform show that the algorithm has a high true positive rate and a low false positive rate.",2014-05,2023-01-10 04:00:37,2024-08-14 08:01:03,,782-785,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>备注：采样持续时间2h；实验中注入了内存泄漏和CPU泄露</p> </div>; <div data-schema-version=""8""><p>概述：基于自组织映射的非监督学习方法进行老化检测和量化</p> </div>; <div data-schema-version=""8""><p>优点：<span style=""color: rgb(0, 0, 0)"">提出了一种基于邻域面积密度的老化检测和量化算法，假阳性率很小</span></p> </div>",C:\Users\tristone\Zotero\storage\WXMKFRUH\6845739.html; C:\Users\tristone\Zotero\storage\MATVJBJP\Xu 等 - 2014 - SOM-based aging detection for Virtual Machine Monitor.pdf,,分析方式：Measurement-based（ML）; 系统类型：VMM; 验证方法：实验实证; 会议：WOECA; 老化影响：资源泄露（内存和CPU）; 模型：SOM; 指标：CPU，MEM，IO，Domain,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2014 IEEE Workshop on Electronics, Computer and Applications",,,,,,,,,,,,,,,
8BK5M5ZR,conferencePaper,2014,"Russo, Stefano",The Dual Nature of Software Aging: Twenty Years of Software Aging Research,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2014.138,https://ieeexplore.ieee.org/document/6983880,"Twenty years have passed since the expression software aging was coined. Research in this area has progressed in two almost autonomous directions. A software engineering perspective, concerned with the aging of software products over their lifetime, and a software dependability perspective, concerned with run time aging of (long) running applications. I argue these two visions should be reconciled, in the hope to open new research areas able to provide a wider and deeper understanding of the very nature of software aging phenomena.",2014-11,2024-09-02 12:11:20,2024-10-10 12:48:33,2024-09-02 12:11:20,431-432,,,,,,The Dual Nature of Software Aging,,,,,,,,,,,,IEEE Xplore,,"TLDR: It is argued these two visions of software aging should be reconciled, in the hope to open new research areas able to provide a wider and deeper understanding of the very nature ofSoftware aging phenomena.",,C:\Users\tristone\Zotero\storage\IU8FGAEA\6983880.html; C:\Users\tristone\Zotero\storage\ZVYS5UNZ\Russo - 2014 - The Dual Nature of Software Aging Twenty Years of Software Aging Research.pdf,,会议：ISSREW; 分析方式：其他,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
I4I4UKKS,conferencePaper,2014,"Zhao, Jing; Wang, Yan-Bin; Ning, Gao-Rong; Wang, Cheng-Hong; Trivedi, Kishor S.; Cai, K-Y; Zhang, Zhen-Yu",Software Maintenance Optimization Based on Stackelberg Game Methods,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2014.38,,"Application servers (AS) of virtualized platform may suffer from software aging problem. In this paper, we first formulate the system model including three virtual machines. Two of them act as the main servers, and the third machine acts as the backup node. The motivation of our formulated model is that the relationship between the service provider and the service maintainer is collaborative as well as having different goals between them, the service provider as a leader wants to maximize his system availability, while the service maintainer wants to minimize his maintenance cost. Thus, the problem of maximizing availability and minimizing cost between the service provider and service maintainer is Stackelberg game based. Next, we assume that the AS degradation is caused by resource consumption due to memory leaks for the AS on the active VMs, and we present the system degradation states based on Markov renewal processes. We give the analytical definitions of threshold levels for Ralert at each VM, which are used to determine the optimal rejuvenation schedules. In addition, we obtain the steady-state availability expressions for the system and the mean maintenance cost. Finally, we give the Stackelberg strategy with the open-loop information and the solutions for the game theory by a numerical illustration.",2014-11,2023-01-10 04:11:24,2024-10-03 08:52:49,,426-430,,,,,,,,,,,,,,,,,,IEEE Xplore,,"CCF: B TLDR: This paper formulate the system model including three virtual machines, which assumes that the AS degradation is caused by resource consumption due to memory leaks for the AS on the active VMs, and presents the system degradation states based on Markov renewal processes.","<div data-schema-version=""8""><p>概述：基于Stackelberg 策略对系统可用性最大化和维护成本最小化目标的博弈给定重生策略。</p> </div>",C:\Users\tristone\Zotero\storage\ARHX3UGG\6983879.html; C:\Users\tristone\Zotero\storage\HNPIB3XQ\Zhao 等 - 2014 - Software Maintenance Optimization Based on Stackelberg Game Methods.pdf,,分析方式：Model-based; 验证方法：数值分析; 老化影响：内存泄漏; 系统类型：服务器; 会议：ISSREW; 模型：MRGP; 模型：博弈论; 指标：availability,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
AZ859T66,conferencePaper,2014,"Wang, Qiushi; Wolter, Katinka",Detection and Analysis of Performance Deterioration in Mobile Offloading System,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2014.15,https://ieeexplore.ieee.org/document/6983878,"Offloading is an advanced technique to improve the performance of mobile devices by migrating heavy computation to remote powerful servers. The completion of an offloading task requires a reliable network connection and a stable remote server. Therefore, the system performance is determined by the network quality and the server service rate. In this paper, we present an experiment to measure the system performance using task completion time as metric. We detect that system performance is not stable at some moments. For identifying the cause of performance deterioration, we analyse the impact of server and network. It is well known that software aging is a common phenomenon in computer systems, which may cause frequent software faults and finally result in system outage. As rejuvenation is used to counteract software aging, through our experiment, we observed the impact of periodical rejuvenation on the offloading system. Although the rejuvenation process impairs the system performance temporarily, long-term stability of the server is guaranteed. We further explore the impact of poor network quality, which is the main factor degrading the system performance. To improve the system performance, we proved that restart is an efficient mechanism in theory.",2014-11,2024-09-02 12:08:22,2024-10-10 01:33:32,2024-09-02 12:08:22,420-425,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\QNRGU4ST\6983878.html; C:\Users\tristone\Zotero\storage\I33R5SVT\Wang和Wolter - 2014 - Detection and Analysis of Performance Deterioration in Mobile Offloading System.pdf,,验证方法：实验实证&对比分析; 老化影响：性能降级; 会议：ISSREW; 指标：任务完成时间; 系统类型：卸载系统; 分析方式：度量&rej&other; 重生策略：定期重启应用&卸载,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2014 IEEE International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
4UA4QWPM,conferencePaper,2014,"Matias, Rivalino; Andrzejak, Artur; Machida, Fumio; Elias, Diego; Trivedi, Kishor",A Systematic Differential Analysis for Fast and Robust Detection of Software Aging,2014 IEEE 33rd International Symposium on Reliable Distributed Systems,,,10.1109/SRDS.2014.38,,"Software systems running continuously for a long time often confront software aging, which is the phenomenon of progressive degradation of execution environment caused by latent software faults. Removal of such faults in software development process is a crucial issue for system reliability. A known major obstacle is typically the large latency to discover the existence of software aging. We propose a systematic approach to detect software aging which has in a shorter test time and higher accuracy compared to traditional aging detection via stress testing and trend detection with high confidence. The approach is based on a comparative differential analysis where a software version under test is compared with against a previous robust version by observing in terms of behavioral (signal) changes during system tests of resource metrics. A key instrument adopted is a divergence chart, which expresses time-dependent differences between two signals, allowing us to detect changes in the system metrics' values which indicate the existence of software aging. In our experimental study, we focuses on memory-leak detection and the and evaluates divergence charts are computed using various multiple statistical techniques combined paired with different application-level memory related metrics (RSS and Heap Usage). The experimental results show that the statistical process control techniques used in our approach proposed method achieves good performance for memory-leak detection, when compared with other in comparison to techniques widely adopted in previous works (e.g., linear regression, moving average and median).",2014,2022-04-13 08:12:14,2024-09-19 11:52:57,,311-320,,,,,,,,,,,,,en-US,,,,,,,ISSN: 1060-9857 CCF: B TLDR: A systematic approach to detect software aging which has in a shorter test time and higher accuracy compared to traditional aging detection via stress testing and trend detection with high confidence is proposed.,"<div data-schema-version=""8""><p>不足：仅测试了内存泄漏相关指标</p> </div>; <div data-schema-version=""8""><p>概述：使用差分测试来系统的检测软件老化，比传统的老化检测有更短的测试时间和更高的准确性</p> </div>; <div data-schema-version=""8""><p>优点：方法比较通用，可以支持结合不同数量和类型的老化指标和各种信号处理技术</p> </div>",C:\Users\tristone\Zotero\storage\VVADYB4H\6983406.html; C:\Users\tristone\Zotero\storage\YV3JZF8P\Matias 等 - 2014 - A Systematic Differential Analysis for Fast and Robust Detection of Software Aging.pdf,,验证方法：实验实证&对比分析; 老化影响：内存泄漏; 指标：内存; 会议：SRDS; 系统类型：Linux; 分析方式：testing; 测试方法：差分测试,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2014 IEEE 33rd International Symposium on Reliable Distributed Systems,,,,,,,,,,,,,,,
TY5UYBJH,journalArticle,2013,"Cotroneo, Domenico; Orlando, Salvatore; Pietrantuono, Roberto; Russo, Stefano",A measurement-based ageing analysis of the JVM,"Software Testing, Verification and Reliability",,1099-1689,10.1002/stvr.467,https://onlinelibrary.wiley.com/doi/abs/10.1002/stvr.467,"SUMMARYIn this work, a software ageing analysis of Java-based software systems is conducted. The JVM is the core layer in Java-based systems, and its dependability greatly affects the overall system quality. Starting from an experimental campaign on a real-world test bed, this work isolates the contribution of the JVM to the overall ageing trend, and identifies, through statistical methods, which workload parameters are the most relevant to ageing dynamics. Results revealed the presence of several ageing dynamics in the JVM, including (i) a throughput loss trend mainly dependent on the execution unit, (ii) a slow memory depletion drift due to the just-in-time-compiler activity and (iii) a fast memory depletion drift caused by dynamics inside the garbage collector. The outlined procedure and obtained results are useful in order to (i) identify the presence of ageing phenomena, (ii) perform online ageing detection and time-to-exhaustion prediction and (iii) define optimal rejuvenation techniques. Copyright © 2011 John Wiley & Sons, Ltd.",2013,2023-01-09 14:32:43,2024-09-29 08:14:37,2023-01-09 14:32:43,199-239,,3.0,23.0,,"Software Testing, Verification and Reliability",,,,,,,,en,,,,,Wiley Online Library,,"_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/stvr.467 JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.5 5年影响因子: 1.8 EI: 是 CCF: B TLDR: This work isolates the contribution of the JVM to the overall ageing trend, and identifies, through statistical methods, which workload parameters are the most relevant to ageing dynamics.","<div data-schema-version=""8""><p>概述：分析JVM的老化机理，及其老化与负载的关系。</p> </div>; <div data-schema-version=""8""><p>优点：分离了JVM对整体老化趋势的贡献，并通过统计方法确定了哪些工作负载参数与老化动态最相关。结果表明，JVM中存在几种老化动态，包括（i）吞吐量损失趋势主要取决于执行单元，（ii）由于实时编译器活动而导致的缓慢内存耗尽漂移，以及（iii）垃圾收集器内部动态导致的快速内存耗尽漂移。</p> </div>",C:\Users\tristone\Zotero\storage\HL93HMCZ\Cotroneo 等 - 2013 - A measurement-based ageing analysis of the JVM.pdf; C:\Users\tristone\Zotero\storage\PZFN3VDC\stvr.html,,验证方法：实验实证&比较分析; 重生层级：VM; 老化影响：内存消耗&性能降级; 系统类型：JVM; 指标：吞吐量损失、内存消耗、工作负载; 方法：DOE、主成分分析、聚类&偏回归技术; 期刊：STVR; 实验时长：3000H; 模型：线性回归模型; 分析方式：度量&Measurement-based（统计+ML）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
66TLVXFJ,journalArticle,2013,"Cotroneo, Domenico; Natella, Roberto; Pietrantuono, Roberto",Predicting aging-related bugs using software complexity metrics,Performance Evaluation,,0166-5316,10.1016/j.peva.2012.09.004,https://www.sciencedirect.com/science/article/pii/S0166531612000946,"Long-running software systems tend to show degraded performance and an increased failure occurrence rate. This problem, known as Software Aging, which is typically related to the runtime accumulation of error conditions, is caused by the activation of the so-called Aging-Related Bugs (ARBs). This paper aims to predict the location of Aging-Related Bugs in complex software systems, so as to aid their identification during testing. First, we carried out a bug data analysis on three large software projects in order to collect data about ARBs. Then, a set of software complexity metrics were selected and extracted from the three projects. Finally, by using such metrics as predictor variables and machine learning algorithms, we built fault prediction models that can be used to predict which source code files are more prone to Aging-Related Bugs.",2013-03-01,2022-03-12 05:28:06,2024-10-10 12:19:44,2022-03-12 05:28:06,163-178,,3.0,70.0,,Perform. Evaluation,,Special Issue on Software Aging and Rejuvenation,,,,,,en-US,,,,,2.205,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.0 5年影响因子: 1.1 EI: 是,"<div data-schema-version=""8""><p>不足：该方法仅能适用于少量代码，有状态空间爆炸的问题</p> </div>; <div data-schema-version=""8""><p>概述：一种使用软件复杂性度量来预测老化相关bug位置的方法</p> </div>; <div data-schema-version=""8""><p>优点：该方法可以有效的预测ARB倾向文件的百分比</p> </div>",C:\Users\tristone\Zotero\storage\CHYGUFSS\Cotroneo 等 - 2013 - Predicting aging-related bugs using software complexity metrics.pdf,,验证方法：实验实证&比较分析; 老化影响：非特定的; 期刊：PEVA; 测试方法：静态代码预测; 模型：NB，BayesNet，DecTree，Logistic（+log）; 系统类型：Linux，MySQL，CARDAMOM; 指标：ARB百分比；PD，PF，Bal; 分析方式：ARB prediction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
A6X2VQRE,journalArticle,2013,"Machida, Fumio; Kim, Dong Seong; Trivedi, Kishor S.",Modeling and analysis of software rejuvenation in a server virtualized system with live VM migration,Performance Evaluation,,0166-5316,10.1016/j.peva.2012.09.003,https://www.sciencedirect.com/science/article/pii/S0166531612000934,"As server virtualization is used in a number of IT systems, the unavailability of virtual machines (VM) on server virtualized systems becomes a significant concern. Software rejuvenation is a promising technique for improving the availability of server virtualized systems as it can postpone or prevent failures caused by software aging in both the VM and the underlying virtual machine monitor (VMM). In this paper, we study the effectiveness of a combination of VMM rejuvenation and live VM migration. When a VMM needs to be rejuvenated, the hosted VMs running on the VMM can be moved to another host using live VM migration and continue the execution even during the VMM rejuvenation. We call this technique Migrate-VM rejuvenation and construct an availability model in the stochastic reward net for evaluating it in comparison with the conventional approaches; Cold-VM rejuvenation and Warm-VM rejuvenation. The designed model enables us to find the optimum combinations of rejuvenation trigger intervals that maximize the availability of VM. In terms of the maximum VM availability, Migrate-VM rejuvenation is potentially the best approach. However, the advantage of Migrate-VM rejuvenation depends on the type of live VM migration (stop-and-copy or pre-copy) and the policy for migration back to the original host after VMM rejuvenation (return-back or stay-on). Through numerical examples, we show that “pre-copy” live VM migration is encouraged rather than pure “stop-and-copy” migration and it is better to return back VM to the original host soon after the VMM rejuvenation (i.e., “return-back” rather than “stay-on” policy) for high-availability. The effect of the VMM rejuvenation technique on the expected number of transactions lost is also studied by combining the availability model with an M/M/1/n queueing model.",2013-03-01,2023-01-09 15:34:14,2024-10-04 13:25:37,2023-01-09 15:34:14,212-230,,3.0,70.0,,Perform. Evaluation,,Special Issue on Software Aging and Rejuvenation,,,,,,en,,,,,2.205,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.0 5年影响因子: 1.1 EI: 是 TLDR: The effectiveness of a combination of VMM rejuvenation and live VM migration is studied and an availability model in the stochastic reward net is constructed to find the optimum combinations of rejuvenation trigger intervals that maximize the availability of VM.,"<div data-schema-version=""8""><p>概述：研究了VMM重生和实时VM迁移相结合的迁移VM重生的有效性</p> </div>",C:\Users\tristone\Zotero\storage\R72M6AHV\Machida 等 - 2013 - Modeling and analysis of software rejuvenation in a server virtualized system with live VM migration.pdf; C:\Users\tristone\Zotero\storage\NFTX829U\S0166531612000934.html,,老化影响：非特定的; 期刊：PEVA; 系统类型：服务器; 分析方式：Model-based&rej; 模型：SRN，M/M/1/n排队模型; 验证方法：数值分析&比较分析; 指标：steady-state availability; 重生策略：VMM重生和实时VM迁移相结合; 重生层级：VMM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UKTAFECD,journalArticle,2013,"Alonso, J.; Matias, R.; Vicente, E.; Maria, A.; Trivedi, K.S.",A comparative experimental study of software rejuvenation overhead,Performance Evaluation,,01665316,10.1016/j.peva.2012.09.002,https://linkinghub.elsevier.com/retrieve/pii/S0166531612000922,"In this paper we present a comparative experimental study of the main software rejuvenation techniques developed so far to mitigate the software aging effects. We consider six different rejuvenation techniques with different levels of granularity: (i) physical node reboot, (ii) virtual machine reboot, (iii) OS reboot, (iv) fast OS reboot, (v) standalone application restart, and (vi) application rejuvenation by a hot standby server. We conduct a set of experiments injecting memory leaks at the application level. We evaluate the performance overhead introduced by software rejuvenation in terms of throughput loss, failed requests, slow requests, and memory fragmentation overhead. We also analyze the selected rejuvenation techniques’ efficiency in mitigating the aging effects. Due to the growing adoption of virtualization technology, we also analyze the overhead of the rejuvenation techniques in virtualized environments. The results show that the performance overheads introduced by the rejuvenation techniques are related to the granularity level. We also capture different levels of memory fragmentation overhead induced by the virtualization demonstrating some drawbacks of using virtualization in comparison with non-virtualized rejuvenation approaches. Finally, based on these research findings we present comprehensive guidelines to support decision making during the design of rejuvenation scheduling algorithms, as well as in selecting the appropriate rejuvenation mechanism.",2013-03,2022-06-26 09:11:28,2024-10-03 13:32:24,2022-06-26 09:11:28,231-250,,3.0,70.0,,Perform. Evaluation,,,,,,,,en-US,,,,,2.205,4.0,"JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.0 5年影响因子: 1.1 EI: 是 TLDR: Comprehensive guidelines to support decision making during the design of rejuvenation scheduling algorithms, as well as in selecting the appropriate rejuvenation mechanism are presented.","<div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FYJD5W9DV%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FYJD5W9DV%22%2C%22type%22%3A%22article-journal%22%2C%22abstract%22%3A%22Traditionally%2C%20performance%20has%20been%20the%20most%20important%20metrics%20when%20evaluating%20a%20system.%20However%2C%20in%20the%20last%20decades%20industry%20and%20academia%20have%20been%20paying%20increasing%20attention%20to%20another%20metric%20to%20evaluate%20servers%3A%20availability.%20A%20web%20server%20may%20serve%20many%20users%20when%20running%2C%20but%20if%20it%20is%20out%20of%20service%20too%20much%20time%2C%20it%20becomes%20useless%20and%20expensive.%20The%20industry%20has%20adopted%20several%20techniques%20to%20improve%20system%20availability%2C%20yet%20crashes%20still%20happen.%20In%20this%20paper%2C%20we%20propose%20a%20new%20framework%20to%20predict%20time-to-failure%20when%20the%20system%20is%20suffering%20transient%20failures%20that%20consume%20resources%20randomly.%20We%20study%20which%20machine%20learning%20algorithms%20build%20a%20more%20accurate%20model%20of%20the%20behavior%20of%20the%20anomaly%20system%2C%20and%20focus%20on%20Linear%20Regression%20and%20Decision%20Tree%20algorithms.%20Our%20preliminary%20results%20show%20that%20M5P%20(a%20Decision%20Tree%20algorithm)%20is%20the%20best%20option%20to%20model%20the%20behavior%20of%20the%20system%20under%20the%20random%20injection%20of%20memory%20leaks.%22%2C%22container-title%22%3A%222009%20Fifth%20International%20Conference%20on%20Autonomic%20and%20Autonomous%20Systems%22%2C%22DOI%22%3A%2210.1109%2FICAS.2009.56%22%2C%22note%22%3A%22event-title%3A%202009%20Fifth%20International%20Conference%20on%20Autonomic%20and%20Autonomous%20Systems%5CnISBN%3A%209781424436842%5Cnpublisher-place%3A%20Valencia%2C%20Spain%5Cnpublisher%3A%20IEEE%22%2C%22page%22%3A%22264-269%22%2C%22source%22%3A%22Semantic%20Scholar%22%2C%22title%22%3A%22Predicting%20Web%20Server%20Crashes%3A%20A%20Case%20Study%20in%20Comparing%20Prediction%20Algorithms%22%2C%22title-short%22%3A%22Predicting%20Web%20Server%20Crashes%22%2C%22URL%22%3A%22http%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F4976614%2F%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Alonso%22%2C%22given%22%3A%22Javier%22%7D%2C%7B%22family%22%3A%22Torres%22%2C%22given%22%3A%22Jordi%22%7D%2C%7B%22family%22%3A%22Gavald%C3%A0%22%2C%22given%22%3A%22Ricard%22%7D%5D%2C%22accessed%22%3A%7B%22date-parts%22%3A%5B%5B%222023%22%2C1%2C5%5D%5D%7D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222009%22%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>概述：比较不同重生粒度的老化缓解效率和开销</p> </div>; <div data-schema-version=""8""><p>优点：细粒度技术，如应用级重生最好作为缓解老化影响的第一种尝试性方法；虚拟化是内存碎片急剧增加的主要原因，这一发现在当今尤其重要，因为虚拟化是新云计算范式的核心技术。因此，在基于云的系统中选择正确的恢复方法，以减少虚拟化层中与老化相关的影响是一项主要要求；为所考虑的每种年轻化技术提供了使用适当场景的指南。</p> </div>",C:\Users\tristone\Zotero\storage\JN8PKN66\Alonso 等 - 2013 - A comparative experimental study of software rejuvenation overhead.pdf,,验证方法：实验实证&比较分析; 期刊：PEVA; 分析方式：rej; 环境：VM虚拟化、PH非虚拟化; 老化影响：内存消耗&内存碎片; 系统类型：web服务器; 指标：吞吐量损失、失败请求、缓慢请求和内存碎片开销; 重生层级：物理节点、VM、OS、应用程序; 重生技术：单机、热备用、快速快速操作系统重启和重启,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
RLA4MCYA,journalArticle,2013,"Bruneo, Dario; Distefano, Salvatore; Longo, Francesco; Puliafito, Antonio; Scarpa, Marco",Workload-Based Software Rejuvenation in Cloud Systems,IEEE Transactions on Computers,,1557-9956,10.1109/TC.2013.30,,"Cloud computing is a promising paradigm able to rationalize the use of hardware resources by means of virtualization. Virtualization allows to instantiate one or more virtual machines (VMs) on top of a single physical machine managed by a virtual machine monitor (VMM). Similarly to any other software, a VMM experiences aging and failures. Software rejuvenation is a proactive fault management technique that involves terminating an application, cleaning up the system internal state, and restarting it to prevent the occurrence of future failures. In this work, we propose a technique to model and evaluate the VMM aging process and to investigate the optimal rejuvenation policy that maximizes the VMM availability under variable workload conditions. Starting from dynamic reliability theory and adopting symbolic algebraic techniques, we investigate and compare existing time-based VMM rejuvenation policies. We also propose a time-based policy that adapts the rejuvenation timer to the VMM workload condition improving the system availability. The effectiveness of the proposed modeling technique is demonstrated through a numerical example based on a case study taken from the literature.",2013-06,2023-01-09 14:12:04,2024-10-05 08:07:30,,1072-1085,,6.0,62.0,,IEEE Trans. Comput.,,,,,,,,,,,,,3.183,2.0,Conference Name: IEEE Transactions on Computers JCR分区: Q2 中科院分区升级版: 计算机科学2区 影响因子: 3.6 5年影响因子: 3.2 EI: 是 CCF: A,"<div data-schema-version=""8""><p>概述：<code>使用连续相位类型分布建模评估虚拟机监视器的老化，并基于负载确定重生间隔</code></p> </div>",C:\Users\tristone\Zotero\storage\ZSQH6NLR\Bruneo 等 - 2013 - Workload-Based Software Rejuvenation in Cloud Systems.pdf; C:\Users\tristone\Zotero\storage\UGRNJ926\6463380.html,,分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析; 重生层级：VMM; 指标：崩溃时间; 系统类型：云计算系统; 期刊：TC; 模型：state-space model（FSM）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
H33QIBCJ,conferencePaper,2013,"Langner, Felix; Andrzejak, Artur",Detecting software aging in a cloud computing framework by comparing development versions,2013 IFIP/IEEE International Symposium on Integrated Network Management (IM 2013),,,,https://ieeexplore.ieee.org/document/6573106,"Software aging, i.e. degradation of software performance or functionality caused by resource depletion is usually discovered only in the production scenario. This incurs large costs and delays of defect removal and requires provisional solutions such as rejuvenation (controlled restarts). We propose a method for detecting aging problems shortly after their introduction by runtime comparisons of different development versions of the same software. Possible aging issues are discovered by analyzing the differences in runtime traces of selected metrics. The required comparisons are workload-independent which minimizes the additional effort of dedicated stress tests. Consequently, the method requires only minimal changes to the traditional development and testing process. This paves the way to detecting such problems before public releases, greatly reducing the cost of defect fixing. Our study focuses on the memory leaks of Eucalyptus, a popular open source framework for managing cloud computing environments.",2013-05,2024-08-16 09:42:37,2024-08-16 09:43:13,2024-08-16 09:42:37,896-899,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 1573-0077,"<div data-schema-version=""8""><p>概述：<code>通过差分测试检测老化问题</code></p> </div>",C:\Users\tristone\Zotero\storage\I6ZS8IG3\6573106.html; C:\Users\tristone\Zotero\storage\IZWPFIKB\Langner和Andrzejak - 2013 - Detecting software aging in a cloud computing framework by comparing development versions.pdf; C:\Users\tristone\Zotero\storage\VJ88GIMG\Langner和Andrzejak - 2013 - Detecting software aging in a cloud computing framework by comparing development versions.pdf,,老化影响：非特定的; 验证方法：实验实证; 分析方式：testing; 系统类型：云（Eucalyptus）; 测试方法：差分测试; 期刊：IM; 指标：CPU usage，disk space，open files，threads，main memory，NC RSS,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 IFIP/IEEE International Symposium on Integrated Network Management (IM 2013),,,,,,,,,,,,,,,
YI2HCXNY,conferencePaper,2013,"Ballerini, Stefano; Carnevali, Laura; Paolieri, Marco; Tadano, Kumiko; Machida, Fumio",Software rejuvenation impacts on a phased-mission system for Mars exploration,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2013.6688906,https://ieeexplore.ieee.org/document/6688906,"When software contains aging-related faults and the system has a long mission period, phased-mission systems consisting of several software components can suffer from software aging, which is a progressive degradation of the software execution environment. Failures caused by software aging might impact on the mission success probability. In this paper, we present a model for a phased-mission system with software rejuvenation, and analyze the impacts of software rejuvenation on the success probability and completion time distribution of the mission. The mission of Mars exploration rover is considered as an example of phased-mission system. The analysis results show that the mission success probability is improved by software rejuvenation at the cost of the mission completion time.",2013-11,2024-09-02 08:31:37,2024-10-05 08:05:32,2024-09-02 08:31:37,275-280,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\I28RKZZS\Ballerini 等 - 2013 - Software rejuvenation impacts on a phased-mission system for Mars exploration.pdf; C:\Users\tristone\Zotero\storage\H24KXVXG\6688906.html,,分析方式：Model-based; 验证方法：仿真模拟; 会议：ISSREW; 系统类型：安全关键系统; 重生策略：基于阶段的重启; 模型：sTPN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
6XKV7QXW,conferencePaper,2013,"Machida, Fumio; Andrzejak, Artur; Matias, Rivalino; Vicente, Elder",On the effectiveness of Mann-Kendall test for detection of software aging,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2013.6688905,,"Software aging (i.e. progressive performance degradation of long-running software systems) is difficult to detect due to the long latency until it manifests during program execution. Fast and accurate detection of aging is important for eliminating the underlying defects already during software development and testing. Also in a deployment scenario, aging detection is needed to plan mitigation methods like software rejuvenation. The goal of this paper is to evaluate whether the Mann-Kendall test is an effective approach for detecting software aging from traces of computer system metrics. This technique tests for existence of monotonic trends in time series, and studies of software aging often consider existence of trends in certain metrics as indication of software aging. Through an experimental study we show that the Mann-Kendall test is highly vulnerable to creating false positives in context of aging detection. By increasing the amount of data considered in the test, the false positive rate can be reduced; however, time to detect aging increases considerably. Our findings indicate that aging detection using the Mann-Kendall test alone is in general unreliable, or may require long measurement times.",2013,2022-04-14 06:25:16,2024-08-14 07:57:35,,269-274,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>概述：评估MannKendall检验在检测软件老化时的有效性，得出结论MK检验的误报率很高，一般不能单独在检测老化中使用</p> </div>; <div data-schema-version=""8""><p>结论：为了减轻后一种影响，我们对比了将Mann-Kendall测试应用于最大尺寸为40的移动窗口的时间序列数据（MaxWinSize方法）与将该测试应用于从测量开始到当前时间点的所有数据（UnlimWinSize法）的结果。事实上，UnlmWinSize方法更准确，在大多数情况下，在一定数量的度量数据可用后（在我们的案例中，在大约60%的完整跟踪数据之后），产生的误报更少。因此，UnlmWinSize方法在运行时间和准确性之间存在权衡。这限制了其在标准化软件测试期间检测老化的实用性，我们的研究还发现，选择基础系统指标作为老化指标对老化检测能力有显著影响。例如，自由内存度量变得无用（在我们的实验设置中），因为它显示出强烈的趋势（见图2，顶行），因此总是指示老化的存在。另一方面，指标“驻留集大小”和“堆使用率”更有用。</p> </div>",C:\Users\tristone\Zotero\storage\5YUN3WGV\6688905.html; C:\Users\tristone\Zotero\storage\6CJKXQL3\Machida 等 - 2013 - On the effectiveness of Mann-Kendall test for detection of software aging.pdf,,验证方法：实验实证&对比分析; 老化影响：内存泄漏; 会议：ISSREW; 指标：崩溃时间; 分析方式：度量; 系统类型：Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
85CT7HXP,conferencePaper,2013,"Okamura, Hiroyuki; Luo, Chao; Dohi, Tadashi",Estimating response time distribution of server application in software aging phenomenon,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,10.1109/ISSREW.2013.6688907,https://ieeexplore.ieee.org/document/6688907,"This paper considers the estimation algorithm for response time distribution of a server application under the environment where software aging occurs. We develop the continuous-time Markov chain (CTMC) model to represent the degradation level of server and then show that the response time distribution can be represented by a Markov-modulated compound Poisson process (MMCPP). The estimation algorithm for the response time distribution is given by the EM algorithm for MMCPP. In a numerical example, we demonstrate the response time estimation for the experimental data of MySQL server.",2013-11,2024-09-02 08:32:10,2024-09-02 12:16:35,2024-09-02 08:32:10,281-284,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\PIWPIR3F\Okamura 等 - 2013 - Estimating response time distribution of server application in software aging phenomenon.pdf,,"老化影响：崩溃/挂起故障&性能降级; 分析方式：Hybrid; 会议：ISSREW; 验证方法：实验实证; 系统类型：数据库系统（Mysql）; 模型：CTMC, EM 算法",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
9SM56T2E,conferencePaper,2013,"Araujo, Jean; Alves, Vandi; Oliveira, Danilo; Dias, Pedro; Silva, Bruno; Maciel, Paulo",An Investigative Approach to Software Aging in Android Applications,"2013 IEEE International Conference on Systems, Man, and Cybernetics",,,10.1109/SMC.2013.213,,"This paper proposes an investigative approach to indicators of software aging in applications developed for Android, a Linux-based operating system primarily designed for touch screen mobile devices such as smartphones and tablets. Software aging is a degrading factor in systems, leading to poor performance, failures, and may ultimately result in system downtime. The methodology proposed identifies memory leaking in Android applications. In order to test the approach, case studies were performed with the Monkey tool as workload generator, employing Linux utilities to monitor the environment. Communication between the computer and the smartphone was handled with the ADB tool, a toolkit included in the Android SDK package. Experimental results confirmed both the effectiveness of the procedure and the existence of software aging phenomenon in the Foursquare application running on the Android OS platform.",2013,2022-04-10 08:20:48,2024-08-14 08:07:30,,1229-1234,,,,,,,,,,,,,en-US,,,,,,,ISSN: 1062-922X CCF: C,"<div data-schema-version=""8""><p>不足：仅考虑了内存泄漏</p> </div>; <div data-schema-version=""8""><p>概述：使用现成的工具提出了一种检测Android应用程序内存泄露的方法</p> </div>; <div data-schema-version=""8""><p>优点：可以将内存泄漏的原因缩小到某个进程</p> </div>",C:\Users\tristone\Zotero\storage\LEUN8YKW\Araujo 等 - 2013 - An Investigative Approach to Software Aging in Android Applications.pdf; C:\Users\tristone\Zotero\storage\55H3627V\6721966.html,,系统类型：Android; 老化影响：内存泄漏; 验证方法：实验实证; 分析方式：度量; 会议：SMC; 实验时长：72H; 指标：resident memory，virtual memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2013 IEEE International Conference on Systems, Man, and Cybernetics",,,,,,,,,,,,,,,
FCDUMJ2M,conferencePaper,2013,"Bovenzi, Antonio; Alonso, Javier; Yamada, Hiroshi; Russo, Stefano; Trivedi, Kishor S.",Towards fast OS rejuvenation: An experimental evaluation of fast OS reboot techniques,2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE.2013.6698905,,"Continuous or high availability is a key requirement for many modern IT systems. Computer operating systems play an important role in IT systems availability. Due to the complexity of their architecture, they are prone to suffer failures due to several types of software faults. Software aging causes a nonnegligible fraction of these failures. It leads to an accumulation of errors with time, increasing the system failure rate. This phenomenon can be accompanied by performance degradation and eventually system hang or even crash. As a countermeasure, software rejuvenation entails stopping the system, cleaning its internal state, and resuming its operation. This process usually incurs downtime. For an operating system, the downtime impacts any application running on top of it. Several solutions have been developed to speed up the boot time of operating systems in order to reduce the downtime overhead. We present a study of two fast OS reboot techniques for rejuvenation of Linux-based operating systems, namely Kexec and Phase-based reboot. The study measures the performance penalty they introduce and the gain in reduction of downtime overhead. The results reveal that the Kexec and Phase-based reboot have no statistically significant impact in terms of performance penalty from the user perspective. However, they may require extra resource (e.g., CPU) usage. The downtime overhead reduction, compared with normal Linux and VM reboots, is 77% and 79% in Kexec and Phase-based reboot, respectively.",2013,2022-07-06 12:22:31,2024-08-14 08:01:48,,61-70,,,,,,Towards fast OS rejuvenation,,,,,,,en-US,,,,,,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>概述：提出了Kexec和PBR（Phase-based reboot）两种技术来分别降低虚拟机和非虚拟机环境下操作系统的重生宕机成本</p> </div>; <div data-schema-version=""8""><p>贡献：大大减少了每次重新启动的停机时间，并对系统性能没有次要影响：从用户角度来看，基于Kexec和Phase的重新启动在性能损失方面没有显著的统计影响。然而，它们可能需要额外的资源（例如CPU）使用。与正常的Linux和VM重新启动相比，Kexec和基于Phase的重新启动的停机时间开销分别减少了77%和79%。</p> </div>",C:\Users\tristone\Zotero\storage\5YB62YH4\Bovenzi 等 - 2013 - Towards fast OS rejuvenation An experimental evaluation of fast OS reboot techniques.pdf; C:\Users\tristone\Zotero\storage\HR2UQNNB\6698905.html,,验证方法：实验实证&对比分析; 会议：ISSRE; 分析方式：rej; 系统类型：OS（Linux）; 指标：downtime，recovered memory；Throughput，I/O，Response time；CPU usage，System Load，Free Memory，Downtime，Recovered memory; 重生层级：操作系统，VM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE),,,,,,,,,,,,,,,
HY9HEZ49,conferencePaper,2013,"Cotroneo, Domenico; Grottke, Michael; Natella, Roberto; Pietrantuono, Roberto; Trivedi, Kishor S.",Fault triggers in open-source software: An experience report,2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE),,,10.1109/ISSRE.2013.6698917,http://ieeexplore.ieee.org/document/6698917/,"With software systems becoming increasingly large and complex, many difficulties in coping with software bugs arise for developers. Despite good development practices, thorough testing, and proper maintenance policies, a non-negligible number of bugs remain in the released software. Understanding the type of residual bugs is fundamental for adopting proper countermeasures in current and future software releases. Depending on the fault triggering conditions that lead to a failure, developers can introduce fault-tolerance mechanisms and plan verification and validation strategies. In this paper, we analyze bugs in four large open-source software systems during their lifecycle, based on the concept of fault triggers. We first investigate how the type of system affects the bug type proportions, and their evolution over years. Then, an analysis of bug subtypes is performed, so as to better understand their nature, followed by a comparison with respect to attributes such as their average time to fix and severity.",2013-11,2023-01-05 11:55:21,2024-10-12 06:19:41,2023-01-05 11:55:21,178-187,,,,,,Fault triggers in open-source software,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2013 IEEE 24th International Symposium on Software Reliability Engineering (ISSRE) ISBN: 9781479923663 Place: Pasadena, CA, USA Publisher: IEEE CCF: B TLDR: This paper analyzes bugs in four large open-source software systems during their lifecycle, based on the concept of fault triggers, and investigates how the type of system affects the bug type proportions, and their evolution over years.","<div data-schema-version=""8""><p>概述：对bug的类型进行分析及归纳</p> </div>; [TLDR] This paper analyzes bugs in four large open-source software systems during their lifecycle, based on the concept of fault triggers, and investigates how the type of system affects the bug type proportions, and their evolution over years.",C:\Users\tristone\Zotero\storage\LLN5QVPN\Cotroneo 等 - 2013 - Fault triggers in open-source software An experience report.pdf; ,https://www.semanticscholar.org/paper/Fault-triggers-in-open-source-software%3A-An-report-Cotroneo-Grottke/f0087238e86d44fe0b7563231539fe5f6625bff4,分析方式：分析bug报告&Classification; 会议：ISSRE; 系统类型：Linux，MySQL，Apache HTTPD，Apache AXIS Web; 验证方法：人工分析&总结归纳,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4TSVE6NA,conferencePaper,2013,"Melo, Matheus; Maciel, Paulo; Araujo, Jean; Matos, Rubens; Araújo, Carlos",Availability study on cloud computing environments: Live migration as a rejuvenation mechanism,2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN),,,10.1109/DSN.2013.6575322,,"With the increasing adoption of cloud computing environments, studies about high availability in those systems became more and more significant. Software rejuvenation is an important mechanism to improve system availability. This paper presents a comprehensive availability model to evaluate the utilization of the live migration mechanism to enable VMM rejuvenation with minimum service interruption. Live migrations are performed observing a time-based trigger. We evaluate five different scenarios, with distinct time intervals for triggering the rejuvenation. The results show that the live migration can significantly reduce the system downtime.",2013-06,2022-03-22 07:05:03,2024-10-03 14:40:08,,1-6,,,,,,Availability study on cloud computing environments,,,,,,,en-US,,,,,,,ISSN: 2158-3927 CCF: B TLDR: A comprehensive availability model is presented to evaluate the utilization of the live migration mechanism to enable VMM rejuvenation with minimum service interruption and shows that the live Migration can significantly reduce the system downtime.,"<div data-schema-version=""8""><p>不足：工作负载比较单一</p> </div>; <div data-schema-version=""8""><p>概述：主要评估五种基于实时迁移的重生策略对稳态可用性的影响云计算环境中</p> </div>",C:\Users\tristone\Zotero\storage\KTG6YE2L\6575322.html; C:\Users\tristone\Zotero\storage\NCK8V63G\Melo 等 - 2013 - Availability study on cloud computing environments Live migration as a rejuvenation mechanism.pdf,,会议：DSN; 老化影响：非特定的; 模型：DSPN; 分析方式：Model-based&rej; 验证方法：数值分析&比较分析; 重生层级：VMM; 系统类型：云计算系统; 指标：steady-state availability，TTARF，workload,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN),,,,,,,,,,,,,,,
GXLMXAP8,conferencePaper,2012,"Li, Su; Yong, Qi",Software Aging Detection Based on NARX Model,2012 Ninth Web Information Systems and Applications Conference,,,10.1109/WISA.2012.22,,"Software aging is a severe test on the reliability of the software. In this paper, we present a method of nonlinear autoregressive models with exogenous inputs to detect the aging phenomenon of the software system. This method considered the relationship between multivariable and the influence of the delay of historical data. The experimental analysis shows that, using the NARX model to detect fault can be effectively applied in the software aging test.",2012-11,2023-01-12 03:27:27,2024-09-23 11:36:16,,105-110,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>不足：<span style=""color: rgb(0, 0, 0)"">该方法没有考虑多个参数之间的相关性和影响以及历史数据的延迟效应</span></p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一种带有外源输入的非线性自回归模型来检测软件系统老化现象的方法</span></p> </div>",C:\Users\tristone\Zotero\storage\RXG6YJ26\6385193.html; C:\Users\tristone\Zotero\storage\LEHMZV6M\Li和Yong - 2012 - Software Aging Detection Based on NARX Model.pdf; C:\Users\tristone\Zotero\storage\ET5DB4DQ\Li和Yong - 2012 - Software Aging Detection Based on NARX Model.pdf,,"验证方法：实验实证&比较分析; 老化影响：性能降级; 会议：WISA; 模型：NARX; 系统类型：Helix Server; 指标：内存，CPUMemory\Available Bytes, Memory\Cache Bytes and Memory\ Pages/sec; 分析方式：Measurement-based（时间序列）&度量",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 Ninth Web Information Systems and Applications Conference,,,,,,,,,,,,,,,
Y2LADM2E,conferencePaper,2012,"Alonso, Javier; Bovenzi, Antonio; Li, Jinghui; Wang, Yakun; Russo, Stefano; Trivedi, Kishor",Software Rejuvenation: Do IT & Telco Industries Use It?,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.96,https://ieeexplore.ieee.org/document/6405459/keywords#keywords,"Software rejuvenation has been addressed in hundreds of papers since it was proposed in 1995 by Huang et al. The growing number of research papers shows the great importance of this topic. However, no paper has studied yet software rejuvenation in the real world. This paper investigates to what extent software rejuvenation techniques are integrated in the IT and Telco solutions. For this purpose, it has been conducted an intensive search of different sources such as company's product websites, technical papers, white papers, US patents, and consultant surveys. The results show that IT and Telco companies develop software rejuvenation solutions to deal with software aging. The number of US patents addressing this issue confirms the interest of industry to develop mechanisms to deal with software aging-related failures. It has been observed that real software rejuvenation solutions mainly use time-based or threshold-based policies, while the US patents are focused on predictive approaches.",2012-11,2024-09-02 08:09:18,2024-10-12 06:09:40,2024-09-02 08:09:18,299-304,,,,,,Software Rejuvenation,,,,,,,,,,,,IEEE Xplore,,"TLDR: This paper investigates to what extent software rejuvenation techniques are integrated in the IT and Telco solutions, and conducts an intensive search of different sources such as company's product websites, technical papers, white papers, US patents, and consultant surveys.",,C:\Users\tristone\Zotero\storage\K4KTX9A6\Alonso 等 - 2012 - Software Rejuvenation Do IT & Telco Industries Use It.pdf; C:\Users\tristone\Zotero\storage\D8L7PLXA\keywords.html,,分析方式：综述,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
NJXWTFKL,conferencePaper,2012,"Okamura, Hiroyuki; Dohi, Tadashi",Optimization of Opportunity-Based Software Rejuvenation Policy,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.93,,"This paper deals with the optimization problem to determine the software rejuvenation time in the software system degraded by aging-related bugs. In particular, we discuss the opportunity-based policy where the execution of software rejuvenation is limited on a time sequence of opportunities, and the software rejuvenation is performed at the first opportunity after the rejuvenation time. Based on the semi-Markov model presented by Dohi et al. 2001, we derive a sufficient condition for the optimal rejuvenation time under the opportunity-based policy.",2012-11,2023-02-22 04:36:08,2024-08-14 07:57:55,,283-286,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：使用半马尔科夫奖励过程建模，并提出基于时间和基于条件混合的重生策略，计算其最佳重生时间存在的条件</p> <p></p> </div>; <div data-schema-version=""8""><p>优点：假设了一个可以观测到建康状态结束的节点</p> </div>",C:\Users\tristone\Zotero\storage\XPIE9KTZ\Okamura和Dohi - 2012 - Optimization of Opportunity-Based Software Rejuvenation Policy.pdf,,重生层级：非特定的; 老化影响：崩溃/挂起故障; 系统类型：非特定的; 分析方式：Hybrid; 会议：ISSREW; 验证方法：逻辑推理; 模型：半马尔可夫; 指标：稳态可用性; 重生策略：基于时间和基于检查结合,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
28Z2Z5B3,conferencePaper,2012,"Barbierato, Enrico; Bobbio, Andrea; Gribaudo, Marco; Iacono, Mauro",Multiformalism to Support Software Rejuvenation Modeling,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.92,,The study of software aging and rejuvenation is based on models that conjugate the complexity of architectural models with the problem of time dependence of parameters. Exploiting the metaphors of common performance-oriented modeling formalisms (such as Petri nets or queuing networks) with the support of proper solution techniques can help modelers in approaching the analysis of complex software-based systems. This paper shows how SIMTHESys (a multiformalism modeling framework) can be used to approach the modeling problem by implementing a new user-defined modeling formalisms and the related fluid-based solution engine.,2012-11,2023-02-22 03:22:54,2024-10-12 06:17:52,,271-276,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B TLDR: This paper shows how SIMTHESys (a multiformalism modeling framework) can be used to approach the modeling problem by implementing a new user-defined modeling formalisms and the related fluid-based solution engine.,"<div data-schema-version=""8""><p>概述：建立一个多形式的建模框架，组合不同形式建立老化和重生模型</p> </div>",C:\Users\tristone\Zotero\storage\EKUX58VV\Barbierato 等 - 2012 - Multiformalism to Support Software Rejuvenation Modeling.pdf; C:\Users\tristone\Zotero\storage\EN92MKYX\6405454.html,,分析方式：Model-based; 会议：ISSREW; 老化影响：性能降级; 模型：DTMC + SPN; 系统类型：云计算系统; 验证方法：数值分析; 指标：服务率; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
6AYCLPWW,conferencePaper,2012,"Cotroneo, Domenico; Natella, Roberto",Monitoring of Aging Software Systems Affected by Integer Overflows,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.91,,"Numerical aging-related bugs, which can manifest themselves as the accumulation of floating-point errors and the overflow of integers, represent a known but relatively neglected issue in the field of software aging and rejuvenation. Unfortunately, it is very difficult to avoid and to fix these bugs, since the rules of computer arithmetic and programming languages are often misunderstood or disregarded by programmers. Even though software rejuvenation can potentially mitigate these problems, its adoption is prevented by the lack of approaches for forecasting numerical software aging failures: in order to efficiently plan rejuvenation, the rate of numerical errors has to be known, or at least estimated. In this paper, we focus on software aging phenomena related to integer overflows. We present some examples of integer overflow issues of the MySQL open-source DBMS, and an approach for identifying symptoms of potential integer overflows by on-line monitoring.",2012,2022-08-02 07:56:34,2024-08-15 07:38:14,,265-270,,,,,,,,,,,,,en-US,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>不足：仅针对MySQL</p> </div>; <div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一种在线监控方法，以在运行时识别整数溢出问题并支持软件重生</span></p> </div>; <div data-schema-version=""8""><p>监控方法：定期对长寿命整数变量的值进行采样，以估计每个监测变量的预期溢出时间（例如，基于趋势分析），并根据估计值触发恢复</p> </div>",C:\Users\tristone\Zotero\storage\LKSIMTRE\Cotroneo和Natella - 2012 - Monitoring of Aging Software Systems Affected by Integer Overflows.pdf; C:\Users\tristone\Zotero\storage\ECLGT6YS\6405453.html,,"会议：ISSREW; 验证方法：实验实证; 分析方式：分析bug报告&度量; 老化影响：整数溢出; 系统类型：MySQL; 指标：bytes_received,bytes_sent,handler_read_md_next,hander_write,innodb_data_written,innodb_os_log_written,key_blocks_not_flushed,sort_rows; 实验时长：7天",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
W3DTYWUQ,conferencePaper,2012,"Matias, Rivalino; Costa, Bruno Evangelista; Macedo, Autran",Monitoring Memory-Related Software Aging: An Exploratory Study,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.90,,"The accumulating effects of software aging have direct influence to the rate of aging-related failures. So far, the most investigated software aging effects are memory related, such as memory leak and memory fragmentation problems. In this work, we present a practical body of knowledge to support the solid understanding of the most important issues in monitoring memory-related software aging effects, focusing on memory leak problems. We discuss important drawbacks of using well known system-wide and application-specific aging indicators, as well as propose effective solutions for both cases.",2012-11,2023-01-12 03:40:13,2024-08-14 07:57:18,,247-252,,,,,,Monitoring Memory-Related Software Aging,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：对监控内存相关软件老化的指标进行了全面的讨论</p> <p></p> </div>; <div data-schema-version=""8""><p>结论：使用可用/已用总内存以及其他相关的系统范围老化指标（例如，交换空间）会带来对老化进行假阳性诊断的高风险。如果它们的使用是一个主要要求，那么我们建议采用一种涉及用户级和内核级（例如缓冲缓存内存）指标的组合方法。关于应用程序特定的老化指标，我们还发现并证明了使用广泛采用的RSS老化指标的重要局限性。我们提出了一种更准确的使用RSS的方法，它是应用程序虚拟大小（VIRT）与应用程序驻留集大小（RSS）的组合。</p> </div>",C:\Users\tristone\Zotero\storage\II6XPQYT\6405450.html; C:\Users\tristone\Zotero\storage\58G7J8GW\Matias 等 - 2012 - Monitoring Memory-Related Software Aging An Exploratory Study.pdf; C:\Users\tristone\Zotero\storage\SEYCXBIF\Matias 等 - 2012 - Monitoring Memory-Related Software Aging An Exploratory Study.pdf,,老化影响：内存泄漏; 系统类型：web服务器; 验证方法：仿真模拟; 会议：ISSREW; 指标：内存; 分析方式：度量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,,,,,,,,,,,,,
Q4ERM3P7,conferencePaper,2012,"Matos, Rubens; Araujo, Jean; Alves, Vandi; Maciel, Paulo",Characterization of Software Aging Effects in Elastic Storage Mechanisms for Private Clouds,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,,,10.1109/ISSREW.2012.82,http://ieeexplore.ieee.org/document/6405458/,"Cloud computing systems fundamentally provide access to large pools of data and computational resources. Eucalyptus is a software framework used to implement private and hybrid-style Infrastructure as a Service clouds. It implements the Amazon Web Service (AWS) API, allowing interoperability with other AWS-based services. Elastic block storage (EBS) is a technology which provides flexible allocation of remote storage volumes to the virtual machines running in a cloud computing environment. Eucalyptus interacts with many software components to provide EBS features to the virtual machines: KVM hypervisor and Eucalyptus Node Controller (NC) are among those components. This work investigates the software aging effects in a Eucalyptus environment, considering workloads composed of intensive requests for attaching remote storage volumes to virtual machines. The results evidenced that memory leaks in Node Controller and the high CPU utilization by the KVM process are strongly correlated. The experimental analysis also show how much the aging effects are related to the performance degradation of a virtualized web server running on this infrastructure.",2012-11,2023-01-05 08:20:55,2024-10-12 06:22:28,2023-01-05 08:20:55,293-298,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2012 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW) ISBN: 9781467350488 9780769549286 Place: Dallas, TX, USA Publisher: IEEE CCF: B TLDR: This work investigates the software aging effects in a Eucalyptus environment, considering workloads composed of intensive requests for attaching remote storage volumes to virtual machines and evidenced that memory leaks in Node Controller and the high CPU utilization by the KVM process are strongly correlated.","<div data-schema-version=""8""><p>概述：研究了云计算基础框架中弹性块存储管理中的一些软件老化影响</p> </div>; <div data-schema-version=""8""><p>优点：考虑了内存泄漏与CPU利用率之间的关系</p> </div>; [TLDR] This work investigates the software aging effects in a Eucalyptus environment, considering workloads composed of intensive requests for attaching remote storage volumes to virtual machines and evidenced that memory leaks in Node Controller and the high CPU utilization by the KVM process are strongly correlated.",C:\Users\tristone\Zotero\storage\5MGKGUF4\Matos 等 - 2012 - Characterization of Software Aging Effects in Elastic Storage Mechanisms for Private Clouds.pdf; ,https://www.semanticscholar.org/paper/Characterization-of-Software-Aging-Effects-in-for-J%C3%BAnior-Araujo/433908b61e5b99dced0d25c06a59863aa344c420,"方法：Pearson; 分析方式：度量; 会议：ISSREW; 老化影响：工作完成时间延长; 系统类型：云计算系统（Eucalyptus）; 验证方法：实验实证; 指标：Response time, KVM CPU utilization, Node Controller resident memory usage, and Node Controller virtual memory usage",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FMHPXBPK,conferencePaper,2012,"Machida, Fumio; Xiang, Jianwen; Tadano, Kumiko; Maeno, Yoshiharu",Aging-Related Bugs in Cloud Computing Software,2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops,978-1-4673-5048-8 978-0-7695-4928-6,,10.1109/ISSREW.2012.97,http://ieeexplore.ieee.org/document/6405457/,"Cloud computing is established on advanced software technologies intended to enhance the scalability of computing infrastructure by making full use of commodity servers. The more cloud computing relies on software technologies, the more software bugs have significant impacts on the system availability. Aging-related bugs, which cause the accumulation of errors in long time software execution, often remain even after the release of a stable version of the software. This paper investigates the bug reports of five major open-source software projects related to cloud computing and confirms the issues about the existence of aging-related bugs. From the investigation how the developers work around such aging-related bugs, the importance of the tool assistance for reproducing the aging problem in replicated site is discussed.",2012-11,2023-01-03 12:13:11,2024-10-05 03:46:18,2023-01-03 12:13:11,287-292,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Dallas, TX, USA CCF: B TLDR: This paper investigates the bug reports of five major open-source software projects related to cloud computing and confirms the issues about the existence of aging-related bugs and the importance of the tool assistance for reproducing the aging problem in replicated site is discussed.","<div data-schema-version=""8""><p>概述：调查了与云计算相关的五个主要开源软件项目的错误报告，确认了与老化相关的错误的存在问题，并讨论了工具辅助在复制站点中再现老化问题的重要性。</p> </div>",C:\Users\tristone\Zotero\storage\XCMCIYPE\Machida 等 - 2012 - Aging-Related Bugs in Cloud Computing Software.pdf; ,https://www.semanticscholar.org/paper/Aging-Related-Bugs-in-Cloud-Computing-Software-Machida-Xiang/803abdab7f4abd73d57c58b5a349fda9892d7e42,"老化影响：非特定的; 会议：WOSAR; 验证方法：人工分析&总结归纳; 分析方式：分析bug报告; 系统类型：云（Hadoop MapReduce, Cassandra, Eucalyptus, memcached and Xen）",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW),,,,,,,,,,,,,,,
JBRQEU46,conferencePaper,2012,"Bovenzi, Antonio; Cotroneo, Domenico; Pietrantuono, Roberto; Russo, Stefano",On the Aging Effects Due to Concurrency Bugs: A Case Study on MySQL,2012 IEEE 23rd International Symposium on Software Reliability Engineering,,,10.1109/ISSRE.2012.50,,"This study investigates software aging effects caused by the activation of concurrency bugs in a wellknown database management system (DBMS), namely MySQL. Experiments with different workloads are performed in order to reproduce the most likely conditions for concurrency bugs activation. Besides the typical aging effects observed in many operational systems (i.e., a gradual degradation over time), results highlight that both available resources and DBMS performance (e.g. service rate, service time, and connection latency) can decrease with time in a hard-to-predict way. We observed that, due to the activation of concurrency bug, the DBMS enters a degraded state in which: i) the estimation of Time-To-Failure (TTF) by means of memory depletion trend analysis is highly inaccurate, and ii) the failure rate does not depend on the instantaneous and/or mean accumulated work. Results suggest that, in such cases, finer-grained indicators and/or different techniques need to be taken into account for properly preventing failures.",2012-11,2022-03-15 08:25:36,2024-08-15 09:38:25,,211-220,,,,,,On the Aging Effects Due to Concurrency Bugs,,,,,,,en-US,,,,,,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>概述：DBMS中并发缺陷激活引发的软件老化效应</p> </div>; <div data-schema-version=""8""><p>优点：认为由于并发错误的激活，DBMS进入降级状态，其中：i）通过内存耗尽趋势分析对故障时间（TTF）的估计高度不准确，ii）故障率不取决于瞬时和/或平均累积工作。</p> </div>",C:\Users\tristone\Zotero\storage\K6WQV23J\Bovenzi 等 - 2012 - On the Aging Effects Due to Concurrency Bugs A Case Study on MySQL.pdf; C:\Users\tristone\Zotero\storage\5HCNEIMG\6405369.html,,会议：ISSRE; 验证方法：实验实证; 分析方式：度量; 老化影响：并发，内存耗尽; 模型：Pearson、Spearman; 系统类型：数据库系统（Mysql）; 指标：工作负载；可用资源和DBMS性能（例如服务速率、服务时间和连接延迟）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2012 IEEE 23rd International Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
GCBMBEPL,journalArticle,2011,"Kourai, Kenichi; Chiba, Shigeru",Fast Software Rejuvenation of Virtual Machine Monitors,IEEE Transactions on Dependable and Secure Computing,,1941-0018,10.1109/TDSC.2010.20,,"As server consolidation using virtual machines (VMs) is carried out, software aging of virtual machine monitors (VMMs) is becoming critical. Since a VMM is fundamental software for running VMs, its performance degradation or crash failure affects all VMs running on top of it. To counteract such software aging, a proactive technique called software rejuvenation has been proposed. A simple example of rejuvenation is to reboot a VMM. However, simply rebooting a VMM is undesirable because that needs rebooting operating systems on all VMs. In this paper, we propose a new technique for fast rejuvenation of VMMs called the warm-VM reboot. The warm-VM reboot enables efficiently rebooting only a VMM by suspending and resuming VMs without saving the memory images to persistent storage. To achieve this, we have developed two mechanisms: on-memory suspend/resume of VMs and quick reload of a VMM. Compared with a normal reboot, the warm-VM reboot reduced the downtime by 74 percent at maximum. It also prevented the performance degradation due to cache misses after the reboot, which was 52 percent in case of a normal reboot. In a cluster environment, the warm-VM reboot achieved higher total throughput than the system using VM migration and a normal reboot.",2011,2022-03-23 08:31:05,2024-10-05 07:19:22,,839-851,,6.0,8.0,,IEEE Trans. Depend. Sec. Comput.,,,,,,,,en-US,,,,,6.791,2.0,Conference Name: IEEE Transactions on Dependable and Secure Computing JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 CCF: A TLDR: The warm-VM reboot enables efficiently rebooting only a VMM by suspending and resuming VMs without saving the memory images to persistent storage and achieved higher total throughput than the system using VM migration and a normal reboot.,"<div data-schema-version=""8""><p>不足：重生时需将任务加载到其他存储设施，有额外开销</p> </div>; <div data-schema-version=""8""><p>概述：一种用于vmm快速恢复的技术，可以有效减少重生时的停机时间</p> </div>",C:\Users\tristone\Zotero\storage\V6EUX28C\5467092.html; C:\Users\tristone\Zotero\storage\R5HEKRKV\Kourai和Chiba - 2011 - Fast Software Rejuvenation of Virtual Machine Monitors.pdf,,老化影响：崩溃/挂起故障&性能降级; 分析方式：rej; 验证方法：实验实证; 期刊：TDSC; 系统类型：虚拟化系统&集群; 指标：单位时间完成工作量; 重生层级：VM&VMM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3XAHUWT6,conferencePaper,2011,"Andrade, Ermeson C.; Machida, Fumio; Kim, Dong-Seong; Trivedi, Kishor S.",Modeling and Analyzing Server System with Rejuvenation through SysML and Stochastic Reward Nets,"2011 Sixth International Conference on Availability, Reliability and Security",,,10.1109/ARES.2011.28,,"High-availability assurance of server systems is becoming an important issue, since many mission-critical applications are implemented on server systems. To achieve high-availability, software rejuvenation is a practical technique to reduce unexpected downtime caused by software aging in software applications running on server systems. Although analytic models of software rejuvenation are well-studied, such analysis is not used in server system administration due to the complexity of modeling. In this paper, we present an availability modeling method for server system with software rejuvenation based on SysML that is used to describe system configurations and maintenance operations semi-formally. The proposed approach allows system administrators, who do not have expertise in availability modeling, to design and study the effects of different rejuvenation policies deployed in server systems. To show the applicability of the proposed modeling and evaluation process, a case study of a web application server is presented. We show the correctness of our modeling method by comparing the conventional models for condition-based and time-based software rejuvenation.",2011,2022-03-22 01:39:43,2024-08-14 07:57:02,,161-168,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：模型中系统降级时间需服从指数分布</p> </div>; <div data-schema-version=""8""><p>概述：一种允许普通系统管理员使用基于组件的可用性建模框架的重生技术</p> </div>; <div data-schema-version=""8""><p>优点：更容易适用于真实系统中</p> </div>",C:\Users\tristone\Zotero\storage\V38CBSBW\Andrade 等 - 2011 - Modeling and Analyzing Server System with Rejuvenation through SysML and Stochastic Reward Nets.pdf; C:\Users\tristone\Zotero\storage\ZKU8UIVH\6045928.html,,分析方式：Model-based; 重生层级：非特定的; 验证方法：数值分析&实验实证; 老化影响：性能降级; 系统类型：web服务器; 会议：ARES; 指标：吞吐量; 模型：SRN，Candy,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2011 Sixth International Conference on Availability, Reliability and Security",,,,,,,,,,,,,,,
CMV4TYCT,conferencePaper,2011,"Yamakita, Kazuya; Yamada, Hiroshi; Kono, Kenji",Phase-based reboot: Reusing operating system execution phases for cheap reboot-based recovery,2011 IEEE/IFIP 41st International Conference on Dependable Systems & Networks (DSN),,,10.1109/DSN.2011.5958216,,"Although operating systems (OSes) are crucial to achieving high availability of computer systems, modern OSes are far from bug-free. Rebooting the OS is simple, powerful, and sometimes the only remedy for kernel failures. Once we accept reboot-based recovery as a fact of life, we should try to ensure that the downtime caused by reboots is as short as possible. This paper presents “phase-based” reboots that shorten the downtime caused by reboot-based recovery. The key idea is to divide a boot sequence into phases. The phase-based reboot reuses a system state in the previous boot if the next boot reproduces the same state. A prototype of the phase-based reboot was implemented on Xen 3.4.1 running para-virtualized Linux 2.6.18. Experiments with the prototype show that it successfully recovered from kernel transient failures inserted by a fault injector, and its downtime was 34.3 to 93.6% shorter than that of the normal reboot-based recovery.",2011-06,2023-03-07 07:00:46,2024-08-14 07:58:21,,169-180,,,,,,Phase-based reboot,,,,,,,,,,,,IEEE Xplore,,ISSN: 2158-3927 CCF: B,,C:\Users\tristone\Zotero\storage\NXQZU3H4\5958216.html; C:\Users\tristone\Zotero\storage\CW2UIXRV\Yamakita 等 - 2011 - Phase-based reboot Reusing operating system execution phases for cheap reboot-based recovery.pdf,,会议：DSN; 验证方法：实验实证&比较分析; 分析方式：rej; 系统类型：Linux; 重生策略：基于阶段的重启; 重生层级：OS,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE/IFIP 41st International Conference on Dependable Systems & Networks (DSN),,,,,,,,,,,,,,,
IKR55XXT,conferencePaper,2011,"Cotroneo, Domenico; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",Software Aging and Rejuvenation: Where We Are and Where We Are Going,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,978-0-7695-4616-2 978-1-4673-0739-0,,10.1109/WoSAR.2011.15,http://ieeexplore.ieee.org/document/6141717/,"After 16 years, a signiﬁcant body of knowledge has been established in the area of Software Aging and Rejuvenation (SAR). In this paper, we survey papers about SAR that appeared in IEEE conferences and journals, identify where SAR research has been mostly focused, and highlight some aspects deserving more attention, with the aim to provoke a constructive discussion among SAR researches about where SAR has arrived and where it should be headed in the next future.",2011-11,2022-01-22 06:49:05,2024-10-12 03:19:23,2021-11-30 09:42:09,1-6,,,,,,Software Aging and Rejuvenation,,,,,IEEE,"Hiroshima, Japan",en-US,,,,,,,"TLDR: This paper surveys papers about SAR that appeared in IEEE conferences and journals, identifies where SAR research has been mostly focused, and highlights some aspects deserving more attention, with the aim of provoking a constructive discussion among SAR researches about where SAR has arrived and where it should be headed in the next future.",,C:\Users\tristone\Zotero\storage\PEVSVKYA\Cotroneo 等 - 2011 - Software Aging and Rejuvenation Where We Are and Where We Are Going.pdf,,篇数：63,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation (WoSAR),,,,,,,,,,,,,,,
63IVH5YH,conferencePaper,2011,"Zhao, Jing; Trivedi, Kishor S.",Performance Modeling of Apache Web Server Affected by Aging,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,10.1109/WoSAR.2011.13,,"A number of studies have reported the phenomenon of ""software aging"", characterized by progressive software performance degradation. Response time (RT) as a customer-affecting metric can be used to detect the onset of software aging. Alberto Avritzer et al. proposed several software aging detection and rejuvenation algorithms based on the measured variation of RT. In this paper, we extend the result by Ablerto Avritzer et al. by using a validated M/E2/1/K queueing model of Apache web server that is used to help detect aging. Simulation results show the effectiveness of these algorithms and to help set various control parameters.",2011-11,2023-02-20 12:42:29,2024-08-14 07:58:13,,56-61,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：用排队模型与响应时间的测量结合</p> </div>",C:\Users\tristone\Zotero\storage\PYYFHBAK\6141726.html; C:\Users\tristone\Zotero\storage\DIQUAXCR\Zhao和Trivedi - 2011 - Performance Modeling of Apache Web Server Affected by Aging.pdf,,重生层级：非特定的; 会议：WOSAR; 验证方法：仿真模拟&比较分析; 老化影响：性能降级; 系统类型：服务器; 分析方式：Hybrid; 模型：CTMC+排队模型; 指标：响应时间; 重生策略：静态软件恢复平均（SRAA），带平均和样本加速的静态软件恢复（SARAA），中心极限定理（CLTA）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
BED7SUKL,conferencePaper,2011,"Ning, Gaorong; Trivedi, Kishor S.; Hu, Hai; Cai, Kai-Yuan",Multi-granularity Software Rejuvenation Policy Based on Continuous Time Markov Chain,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,10.1109/WoSAR.2011.9,,"In this paper, a multi-granularity software rejuvenation policy isstudied. Four granularities of rejuvenation are proposed tomitigate the impact of four levels of software aging respectively.Continuous Time Markov Chain (CTMC) model is used to obtain theavailability and cost from its closed form solution. Moreover, therelations between availability, cost and parameters are studied and the optimal selection of parameters is obtained accordingly. Numerical examples show that the optimal inspection rates for maximizing availability and minimizing cost become larger if inspection delay rate becomes lower, and also the optimal inspection rates have the property of phase transitions when inspection delay rate changes.",2011-11,2023-02-20 14:40:30,2024-08-14 07:57:24,,32-37,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：提出了四种恢复粒度的多粒度软件恢复策略，以分别减轻四个级别的软件老化的影响。</p> </div>",C:\Users\tristone\Zotero\storage\USM7T7BD\6141722.html; C:\Users\tristone\Zotero\storage\TUD5G23F\Ning 等 - 2011 - Multi-granularity Software Rejuvenation Policy Based on Continuous Time Markov Chain.pdf,,老化影响：非特定的; 验证方法：数值分析; 会议：WOSAR; 系统类型：非特定的; 分析方式：Model-based&rej; 模型：CTMC; 指标：availability，cost; 重生层级：应用程序、操作系统、虚拟机和物理机,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
N7RHCNFB,conferencePaper,2011,"Yoshimura, Takeshi; Yamada, Hiroshi; Kono, Kenji",Can Linux be Rejuvenated without Reboots?,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,10.1109/WoSAR.2011.12,,"Operating systems (OSes) are crucial for achieving high availability of computer systems. Even if the applications running on the operating system are highly available, a bug inside the kernel may result in a failure of the entire software stack. Rejuvenating OSes is a promising approach to prevent and recover from transient errors. Unfortunately, OS rejuvenation takes a lot of time because we do not have any method other than rebooting the entire OS. In this paper we explore the possibility of rejuvenating Linux without reboots. In our previous research, we investigated the scope of error propagation in Linux. The propagation scope is process-local if the error is confined in the process context that activated it. The scope is kernel-global if the error propagates to other processes' contexts or global data structures. If most errors are process- local, we can rejuvenate the Linux kernel without rebooting the entire kernel because the kernel goes back to a consistent and clean state simply by killing and revoking the resources of the faulting process. Our conclusion is that Linux can be rejuvenated without reboots with high probability. Linux is coded in a defensive way and thus, most of the manifested errors (96%) were process-local and only one error was kernel- global.",2011-11,2023-02-20 14:16:27,2024-08-14 07:54:14,,50-55,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：考虑当大多数错误都是进程本地时，通过终止和撤销出错进程的资源来恢复OS内核的活力。</p> </div>",C:\Users\tristone\Zotero\storage\QW2J4W7A\Yoshimura 等 - 2011 - Can Linux be Rejuvenated without Reboots.pdf,,会议：WOSAR; 分析方式：rej; 验证方法：实验实证; 测试方法：故障注入; 系统类型：OS（Linux内核）; 重生层级：进程,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
F3ZSFTCC,conferencePaper,2011,"Koutras, V.P.; Platis, A.N.",Applying Partial and Full Rejuvenation in Different Degradation Levels,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,10.1109/WoSAR.2011.14,,"In this paper, a two-level software rejuvenation model is introduced. The innovative aspect consists in combining partial, full and failed rejuvenation with the concept of triggering rejuvenation even if the software did not reach the failure probable state. In the later case, either partial or full rejuvenation actions can be performed. The aim is to observe the effects of partial and full rejuvenation frequencies on system's performance, in order to distinguish optimal rejuvenation schedules. System's performance is expressed through availability, downtime and rejuvenation cost indicators.",2011-11,2023-02-20 15:18:35,2024-08-14 07:53:40,,20-25,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：比较部分和完全恢复对系统可靠性和性能的影响，以区分最佳恢复策略</p> </div>",C:\Users\tristone\Zotero\storage\DF9TKB69\6141720.html; C:\Users\tristone\Zotero\storage\YXLIAGRI\Koutras和Platis - 2011 - Applying Partial and Full Rejuvenation in Different Degradation Levels.pdf,,老化影响：非特定的; 会议：WOSAR; 系统类型：非特定的; 分析方式：Model-based&rej; 验证方法：数值分析&比较分析; 模型：CTMC; 指标：availability，downtime，rejuvenation cost; 重生层级：OS，service,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
NXQX5JJW,conferencePaper,2011,"Okamura, Hiroyuki; Dohi, Tadashi",A POMDP Formulation of Multistep Failure Model with Software Rejuvenation,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,10.1109/WoSAR.2011.11,,"This paper derives a POMDP (partially observable Markov decision process) formulation for a software rejuvenation model. The POMDP is a generalized framework of MDP that handles the unobserved information. The POMDP gives qualitative insights for the effects of unobserved information based on their modeling. The main objective of this paper is to reveal the effect of system degradation information on rejuvenation strategies in a multistep failure model with rejuvenation. More specifically, we present a POMDP formulation and the optimality equations for the maximization of system availability in the multistep failure model. In a numerical example, we compare the maximum system availabilities when the system degradation is observable and unobservable and reveal the value of information on system degradation.",2011,2022-03-22 01:32:56,2024-08-14 07:51:23,,14-19,,,,,,,,,,,IEEE,,en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：仅有模型推导，没有应用到实际的系统中</p> </div>; <div data-schema-version=""8""><p>概述：研究了在系统退化程度无法观测的情况下，用POMDP模型预测重生时间的技术</p> </div>; <div data-schema-version=""8""><p>优点：解决了MDP中需要观测退化程度的缺点</p> </div>",C:\Users\tristone\Zotero\storage\RRQ9ZJGS\6141719.html; C:\Users\tristone\Zotero\storage\T4L8HX53\Okamura和Dohi - 2011 - A POMDP Formulation of Multistep Failure Model with Software Rejuvenation.pdf,,分析方式：Model-based; 验证方法：数值分析; 重生层级：非特定的; 会议：WOSAR; 系统类型：非特定的; 老化影响：性能降级; 模型：POMDP; 指标：崩溃时间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE Third International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
TPGXGRBC,conferencePaper,2011,"Bovenzi, Antonio; Cotroneo, Domenico; Pietrantuono, Roberto; Russo, Stefano",Workload Characterization for Software Aging Analysis,2011 IEEE 22nd International Symposium on Software Reliability Engineering,,,10.1109/ISSRE.2011.18,,"The phenomenon of software aging is increasingly recognized as a relevant problem of long-running systems. Numerous experiments have been carried out in the last decade to empirically analyze software aging. Such experiments, besides highlighting the relevance of the phenomenon, have shown that aging is tightly related to the applied workload. However, due to the differences among the experimented applications and among the experimental conditions, results of past studies are not comparable to each other. This prevent from drawing general conclusions (e.g., about the aging-workload relationship), and from comparing systems from the aging perspective. In this paper, we propose a procedure to carry out aging experiments in different applications for: i) assessing aging trend of the individual systems, as well as assessing differences among them (i.e., obtaining comparable results), ii) inferring workload-aging relationships from experiments performed on different applications, by highlighting the most relevant workload parameters. The procedure is applied, through a set of long-running experiments, to three real-scale software applications, namely Apache Web Server, James Mail Server, and CARDAMOM, a middleware for the development of air traffic control (ATC) systems.",2011-11,2022-03-15 08:23:47,2024-08-14 08:02:20,,240-249,,,,,,,,,,,,,en-US,,,,,,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>概述：提出在不同软件中推断工作负载与老化之间关系的方法。</p> </div>",C:\Users\tristone\Zotero\storage\QH8K7ET2\Bovenzi 等 - 2011 - Workload Characterization for Software Aging Analysis.pdf; C:\Users\tristone\Zotero\storage\SQC5N3IB\6132972.html,,验证方法：实验实证&比较分析; 会议：ISSRE; 分析方式：现象分析&度量; 老化影响：内存耗尽; 模型：DOE; 系统类型：Apache Web Server、James Mail Server、CARDAMOM; 指标：内存利用率，吞吐量损失,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2011 IEEE 22nd International Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
E8GZ6JH4,conferencePaper,2010,"Woehrle, Matthias; Meier, Andreas; Langendoen, Koen",On the potential of software rejuvenation for long-running sensor network deployments,Proceedings of the 2010 ICSE Workshop on Software Engineering for Sensor Network Applications,978-1-60558-969-5,,10.1145/1809111.1809124,https://doi.org/10.1145/1809111.1809124,"Many sensor network systems encounter considerable problems after deployment despite extensive simulation and testing during the development. A fundamental issue is unforeseen problems that rarely occur, which makes them hard to reproduce. This work focuses on a class of problems that occur due to so-called software aging: The classical software engineering approach to handle software aging effects is software rejuvenation, i. e., the proactive reset of software components. In this positioning paper we discuss whether software rejuvenation can be applied to resource scarce sensor nodes, which are tightly coupled distributed system. We detail why and how software rejuvenation techniques are applicable to sensor networks and presents the basic building blocks required.",2010-05-03,2023-03-13 07:30:12,2024-10-05 07:15:08,2023-03-13,44–48,,,,,,,SESENA '10,,,,Association for Computing Machinery,"New York, NY, USA",,,,,,ACM Digital Library,,,,C:\Users\tristone\Zotero\storage\5AUI325Z\Woehrle 等 - 2010 - On the potential of software rejuvenation for long-running sensor network deployments.pdf,,分析方式：rej; 验证方法：实验实证; 会议：ICSEWorkshop on Software Engineering for Sensor Network Applications; 系统类型：传感器网络系统; 重生层级：应用程序组件,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2ZWRWCNW,journalArticle,2010,"Carrozza, G.; Cotroneo, D.; Natella, R.; Pecchia, A.; Russo, S.",Memory leak analysis of mission-critical middleware,Journal of Systems and Software,,0164-1212,10.1016/j.jss.2010.05.027,https://www.sciencedirect.com/science/article/pii/S016412121000110X,"Memory leaks are recognized to be one of the major causes of memory exhaustion problems in complex software systems. This paper proposes a practical approach to detect aging phenomena caused by memory leaks in distributed objects Off-The-Shelf middleware, which are commonly used to develop critical applications. The approach, which is validated on a real-world case study from the Air Traffic Control domain, defines algorithms and ad hoc support tools to perform data filtering and to find the best trade off between experimentation time and statistical accuracy of aging trend estimates. Experiments show that fixing memory leaks is not always the key to solve memory exhaustion problems.",2010-09-01,2023-01-05 03:24:16,2024-09-23 12:15:11,2023-01-05 03:24:16,1556-1567,,9.0,83.0,,J. Syst. Software,,Software Dependability,,,,,,en,,,,,3.514,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.7 5年影响因子: 3.7 EI: 是 CCF: B,"<div data-schema-version=""8""><p>概述：监测空管系统中间件的内存泄漏导致的老化趋势。发现老化问题通常出现在现成的软件中，修复内存泄漏bug后仍存在内存耗尽现象。</p> </div>",C:\Users\tristone\Zotero\storage\AWA9H3JC\Carrozza 等 - 2010 - Memory leak analysis of mission-critical middleware.pdf; C:\Users\tristone\Zotero\storage\4L4EE9P6\S016412121000110X.html,,老化影响：内存泄漏; 期刊：JSS; 验证方法：实验实证; 指标：内存，系统调用延迟; 分析方式：testing; 模型：Sen‘s; 系统类型：空管系统中间件（任务关键）; 测试方法：压力测试（加速寿命？）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PHT4Q2IX,journalArticle,2010,"Salfner, F.; Wolter, K.",Analysis of service availability for time-triggered rejuvenation policies,Journal of Systems and Software,,0164-1212,10.1016/j.jss.2010.05.022,https://www.sciencedirect.com/science/article/pii/S0164121210001068,"In this paper we investigate the effect of three time-triggered system rejuvenation policies on service availability using a queuing model. The model is formulated as an extended stochastic Petri net using a variety of distributions for times between state changes. We define a metric for steady-state service availability and derive how it can be estimated from the models in a hybrid approach combining simulation and analytical reasoning. We further analyze time-to-failure of systems with rejuvenation. Experiments show that the optimal rejuvenation interval as well as the achievable service availability improvement depend significantly on system utilization. The experiments also show that service availability can deviate significantly from steady-state system availability. For low utilization all rejuvenation policies perform well. For medium utilization, one policy is significantly inferior to the other two, while for high utilization, no rejuvenation should be performed at all.",2010-09-01,2022-03-22 01:39:05,2024-08-14 08:07:54,2022-03-22 01:39:05,1579-1590,,9.0,83.0,,J. Syst. Software,,Software Dependability,,,,,,en-US,,,,,3.514,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.7 5年影响因子: 3.7 EI: 是 CCF: B,"<div data-schema-version=""8""><p>概述：研究了系统利用率与软件重生之间的关系，并评估了三种时间触发的重生策略</p> </div>; <div data-schema-version=""8""><p>结论：在高可用性的系统中重生比不重生代价更大</p> </div>",C:\Users\tristone\Zotero\storage\744IKHHI\Salfner和Wolter - 2010 - Analysis of service availability for time-triggered rejuvenation policies.pdf; C:\Users\tristone\Zotero\storage\DFSJCM4M\S0164121210001068.html,,分析方式：Model-based; 重生层级：非特定的; 老化影响：故障率增加; 模型：eDSPN; 期刊：JSS; 系统类型：软件系统; 验证方法：仿真模拟&比较分析; 指标：Completion rate，Loss rate，steady-state service availability，system utilization,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75LCDALJ,journalArticle,2010,"Sundararaman, Swaminathan; Subramanian, Sriram; Rajimwale, Abhishek; Arpaci-Dusseau, Andrea C.; Arpaci-Dusseau, Remzi H.; Swift, Michael M.",Membrane: Operating system support for restartable file systems,ACM Transactions on Storage,,"1553-3077, 1553-3093",10.1145/1837915.1837919,https://dl.acm.org/doi/10.1145/1837915.1837919,"We introduce Membrane, a set of changes to the operating system to support restartable file systems. Membrane allows an operating system to tolerate a broad class of file system failures, and does so while remaining transparent to running applications; upon failure, the file system restarts, its state is restored, and pending application requests are serviced as if no failure had occurred. Membrane provides transparent recovery through a lightweight logging and checkpoint infrastructure, and includes novel techniques to improve performance and correctness of its fault-anticipation and recovery machinery. We tested Membrane with ext2, ext3, and VFAT. Through experimentation, we show that Membrane induces little performance overhead and can tolerate a wide range of file system crashes. More critically, Membrane does so with little or no change to existing file systems, thus improving robustness to crashes without mandating intrusive changes to existing file-system code.",2010-09,2023-03-13 14:12:13,2024-10-12 06:23:12,2023-03-13 14:12:12,1-30,,3.0,6.0,,Acm Trans. Storage,Membrane,,,,,,,en,,,,,1.229,3.0,"JCR分区: Q2 中科院分区升级版: 计算机科学3区 影响因子: 2.1 5年影响因子: 2.0 EI: 是 CCF: A TLDR: Through experimentation, it is shown that Membrane induces little performance overhead and can tolerate a wide range of file system crashes, thus improving robustness to crashes without mandating intrusive changes to existing file-system code.",,C:\Users\tristone\Zotero\storage\TY27RS8Q\Sundararaman 等 - 2010 - Membrane Operating system support for restartable file systems.pdf,,"分析方式：rej; 期刊：TOS; 系统类型：ext2, ext3, and VFAT文件系统; 验证方法：实验实证; 重生策略：轻量级日志记录和检查点; 重生层级：OS组件",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UL7EQFMU,conferencePaper,2010,Jun Guo; Weiyue Li; Xinya Song; Bin Zhang; Yunsheng Wang,Software Rejuvenation Strategy Based on Components,2010 Second World Congress on Software Engineering,978-1-4244-9287-9,,10.1109/WCSE.2010.113,http://ieeexplore.ieee.org/document/5718350/,"Since Component-Based Software Development technology has been widely used, traditional software rejuvenation strategy seems too rough on solving Component-Software aging, the whole system will be regenerated even only a few components aging, which leads to high cost of software rejuvenation and reduces the stability of the system. Therefore, we propose a component-based software rejuvenation strategy and we make components be the objects of rejuvenation. The aging components will be rejuvenated when software ages. In this paper, the process of judging software aging and software rejuvenation are described, then we propose the methods of judging software aging, determining the sequence that the aging components to be rejuvenated and rejuvenating components. Finally, an experiment is done to certify the efficiency of the strategy.",2010-12,2023-01-10 10:46:58,2024-10-05 06:49:00,2023-01-10 10:46:58,80-83,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,Place: Wuhan,"[TLDR] This paper proposes a component-based software rejuvenation strategy and makes components be the objects of rejuvenation, determining the sequence that the aging components to be rejuvenated and rejuvenating components.",C:\Users\tristone\Zotero\storage\YC8LTUWU\Jun Guo 等 - 2010 - Software Rejuvenation Strategy Based on Components.pdf; ,https://www.semanticscholar.org/paper/Software-Rejuvenation-Strategy-Based-on-Components-Guo-Li/3b81295301632fe13553d6034d35edfc93a16f81,"验证方法：实验实证&比较分析; 老化影响：非特定的; 系统类型：web服务器; 会议：WCSE; 指标：DOSA（memory usage, CPU usage, SWAP, response time, etc），ADC; 分析方式：rej&Measurement-based（ML+阈值）; 模型：Multiple Linear Regression (MLR）; 重生层级：应用程序component",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 Second World Congress on Software Engineering (WCSE 2010),,,,,,,,,,,,,,,
E4Q7VPTI,conferencePaper,2010,"Jiang, Letian; Peng, Xiangyu; Xu, Guozhi",Time and Prediction based Software Rejuvenation Policy,2010 Second International Conference on Information Technology and Computer Science,,,10.1109/ITCS.2010.34,,"Operational software systems often experience an “aging” phenomenon, characterized by progressive performance degradation and a sudden hang/crash failure. Software rejuvenation is a proactive fault-tolerance strategy aimed to prevent unexpected outages due to aging. Existing rejuvenation approaches can be largely classified into two types: Purely Time based software rejuvenation policy (PTSRP) and Purely Prediction based Software rejuvenation policy (PPSRP). In this paper, combining the merits of these two policies, a new rejuvenation policy, Time and Prediction based Software Rejuvenation Policy (TPSRP), is proposed. In this policy, time based rejuvenation policy is performed from the system's start or restart, during which prediction based policy is also employed. To evaluate the effectiveness of this new policy, system availability and Downtime cost is adopted and a stochastic reward net model is built. Numerical results show that under the same conditions, TPSRP can achieve higher availability and lower downtime cost than both the PTSRP and PPSRP.",2010-07,2023-02-22 03:20:17,2024-08-14 08:01:41,,114-117,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\AKAHMERD\5557318.html; C:\Users\tristone\Zotero\storage\DS8LQQ42\Jiang 等 - 2010 - Time and Prediction based Software Rejuvenation Policy.pdf,,老化影响：崩溃/挂起故障&性能降级; 验证方法：数值分析; 重生层级：非特定的; 分析方式：Hybrid; 模型：SRN; 会议：ITCS; 系统类型：OS; 指标：可用性，停机成本,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 Second International Conference on Information Technology and Computer Science,,,,,,,,,,,,,,,
6M8JFVVJ,conferencePaper,2010,"Hanmer, Robert S.; Mendiratta, Veena B.",Rejuvenation with workload migration,2010 International Conference on Dependable Systems and Networks Workshops (DSN-W),,,10.1109/DSNW.2010.5542617,,"A five-state model of software rejuvenation is introduced that divides the working state into three sub-states: working, vulnerable, and preparing. The preparing state models the period during which workload is drained from software elements that are about to be rejuvenated. We compared our model to a four-state model that only has working and vulnerable sub-states.",2010-06,2023-01-12 03:31:05,2024-08-14 07:58:58,,80-85,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2325-6664 CCF: B,"<div data-schema-version=""8""><p>概述：在四状态模型的基础上添加了模拟工作量从即将恢复活力的软件元素中流失时期的准备状态，提出五状态模型，并与四状态模型进行了比较。</p> </div>",C:\Users\tristone\Zotero\storage\HDKYLW2K\Hanmer和Mendiratta - 2010 - Rejuvenation with workload migration.pdf; C:\Users\tristone\Zotero\storage\AA4RN4NC\5542617.html,,分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析; 重生层级：应用程序; 会议：DSNW; 模型：MRM; 系统类型：电信应用; 指标：停机时间,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 International Conference on Dependable Systems and Networks Workshops (DSN-W),,,,,,,,,,,,,,,
DENXAUJP,conferencePaper,2010,"Rezaei, Arash; Sharifi, Mohsen",Rejuvenating High Available Virtualized Systems,"2010 International Conference on Availability, Reliability and Security",,,10.1109/ARES.2010.69,,"Virtualization technology in the form of server consolidation makes running of hot-standby replicas on one system possible, while software rejuvenation provides proactive recovery of failure. Both technologies have been used to make systems more dependable. However, the deployment of rejuvenation in virtualized systems had been limited only to virtual machines (VMs) or only to virtual machine monitors (VMMs), requiring changes to applications too. We propose a new rejuvenation technique for high available virtualized systems that is applied at both VM and VMM levels and yet it does not require any modifications to applications. Our proposition leverages the encapsulation of an application into a VM using this new combinatory rejuvenation technique that uses a time-based policy for VMM and a prediction-based policy for VMs. To demonstrate how much it can improve system availability, the stochastic reward net-based models of a typical virtualized consolidated server in cases of using a prediction-based policy, using a time-based policy, and using the proposed rejuvenation technique are presented and compared. We show that our method has higher system availability and lower downtime cost.",2010,2022-03-22 02:54:46,2024-08-14 07:58:51,,289-294,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：模型中未考虑物理节点</p> </div>; <div data-schema-version=""8""><p>概述：一种基于部署虚拟化技术的VMM重生技术</p> </div>; <div data-schema-version=""8""><p>优点：建模结果优于时间的重生策略</p> </div>",C:\Users\tristone\Zotero\storage\YDI3N8RL\5438079.html; C:\Users\tristone\Zotero\storage\N3NVU36G\Rezaei和Sharifi - 2010 - Rejuvenating High Available Virtualized Systems.pdf,,分析方式：Model-based; 指标：downtime cost; 老化影响：性能降级; 验证方法：仿真模拟; 系统类型：VMM; 重生层级：VM; 模型：SRN; 会议：ARES,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2010 International Conference on Availability, Reliability and Security",,,,,,,,,,,,,,,
JM4VGPGP,conferencePaper,2010,"Grottke, Michael; Nikora, Allen P.; Trivedi, Kishor S.",An empirical investigation of fault types in space mission system software,2010 IEEE/IFIP International Conference on Dependable Systems & Networks (DSN),978-1-4244-7500-1,,10.1109/DSN.2010.5544284,http://ieeexplore.ieee.org/document/5544284/,"As space mission software becomes more complex, the ability to effectively deal with faults is increasingly important. The strategies that can be employed for fighting a software bug depend on its fault type. Bohrbugs are easily isolated and removed during software testing. Mandelbugs appear to behave chaotically. While it is more difficult to detect these faults during testing, it may not be necessary to correct them; a simple retry after a failure occurrence may work. Aging-related bugs, a sub-class of Mandelbugs, can cause an increasing failure rate. For these faults, proactive techniques may prevent future failures. In this paper, we analyze the faults discovered in the on-board software for 18 JPL/NASA space missions. We present the proportions of the various fault types and study how they have evolved over time. Moreover, we examine whether or not the fault type and attributes such as the failure effect are independent.",2010-06,2023-01-03 12:10:56,2024-08-20 07:53:56,2023-01-03 12:10:56,447-456,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Chicago, IL, USA JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.6 5年影响因子: 3.7 EI: 是 CCF: C","<div data-schema-version=""8""><p>概述：<code>空间任务软件的缺陷分类研究</code></p> </div>",C:\Users\tristone\Zotero\storage\PJ6CJ9UL\Grottke 等 - 2010 - An empirical investigation of fault types in space mission system software.pdf; ,https://www.semanticscholar.org/paper/An-empirical-investigation-of-fault-types-in-space-Grottke-Nikora/13d2042a69c3e88ca44a5d512ae3e55f21257434,会议：DSN; 老化影响：非特定的; 验证方法：人工分析&总结归纳; 分析方式：分析bug报告; 系统类型：Space system,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Networks (DSN),,,,,,,,,,,,,,,
8BQWZFXG,conferencePaper,2010,"Alonso, Javier; Torres, Jordi; Berral, Josep Ll.; Gavalda, Ricard",Adaptive on-line software aging prediction based on machine learning,2010 IEEE/IFIP International Conference on Dependable Systems & Networks (DSN),978-1-4244-7500-1,,10.1109/DSN.2010.5544275,http://ieeexplore.ieee.org/document/5544275/,"The growing complexity of software systems is resulting in an increasing number of software faults. According to the literature, software faults are becoming one of the main sources of unplanned system outages, and have an important impact on company benefits and image. For this reason, a lot of techniques (such as clustering, fail-over techniques, or server redundancy) have been proposed to avoid software failures, and yet they still happen. Many software failures are those due to the software aging phenomena. In this work, we present a detailed evaluation of our chosen machine learning prediction algorithm (M5P) in front of dynamic and non-deterministic software aging. We have tested our prediction model on a three-tier web J2EE application achieving acceptable prediction accuracy against complex scenarios with small training data sets. Furthermore, we have found an interesting approach to help to determine the root cause failure: The model generated by machine learning algorithms.",2010-06,2023-01-04 15:44:24,2024-10-12 06:09:42,2023-01-04 15:44:24,507-516,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Chicago, IL, USA JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.6 5年影响因子: 3.7 EI: 是 CCF: C TLDR: This work presents a detailed evaluation of the chosen machine learning prediction algorithm (M5P) in front of dynamic and non-deterministic software aging, and finds an interesting approach to help to determine the root cause failure: the model generated by machine learning algorithms.","<div data-schema-version=""8""><p>概述：<code>基于机器学习算法M5P的软件老化预测和根因分析</code></p> </div>; <div data-schema-version=""8""><p>优点：具有适应从未见过场景的能力</p> </div>",C:\Users\tristone\Zotero\storage\SC4P9NPZ\Alonso 等 - 2010 - Adaptive on-line software aging prediction based on machine learning.pdf; ,https://www.semanticscholar.org/paper/Adaptive-on-line-software-aging-prediction-based-on-Alonso-Torres/529d6782da36a003c59cc6c7418b33dbd6ed7700,"分析方式：度量&Measurement-based（ML）; 会议：DSN; 老化影响：资源消耗; 模型：M5P; 系统类型：web服务器（J2EE基础架构）; 验证方法：实验实证&比较分析; 指标：threads, system memory, web application memory and every Java Heap zone: Young and Old)；平均消耗速度；平均绝对误差MAE、软平均绝对误差S-MAE",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Networks (DSN),,,,,,,,,,,,,,,
E5VR8ISE,conferencePaper,2010,"Macêdo, Autran; Ferreira, Taís B.; Matias, Rivalino",The mechanics of memory-related software aging,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722097,,"Software aging is a phenomenon defined as the continuing degradation of software systems during runtime, being particularly noticeable in long-running applications. Memory-related aging effects are one of the most important problems in this research field. Therefore understanding their causes and how they work is a major requirement in designing dependable software systems. In this paper we go deep into how memory management works inside application process, focusing on two memory problems that cause software aging: fragmenting and leakage. We explain the mechanics of memory-related software aging effects dissecting a real and widely adopted memory allocator. Along with the theoretical explanation, we present an experimental study that illustrates how memory fragmenting and leakage occur and how they accumulate over time in order to cause system aging-related failures.",2010,2022-07-18 12:18:51,2024-08-14 08:01:30,,1-5,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>概述：讨论了于内存相关的老化效应机制，并详细说明了内存分配器的工作机制</p> </div>; <div data-schema-version=""8""><p>优点：第一个在实践中讨论内存碎片在老化效应中的机理</p> </div>",C:\Users\tristone\Zotero\storage\J4ZCLLVG\5722097.html; C:\Users\tristone\Zotero\storage\B826VTQ2\Macêdo 等 - 2010 - The mechanics of memory-related software aging.pdf,,会议：WOSAR; 老化影响：内存消耗&内存碎片; 验证方法：实验实证; 系统类型：Linux; 分析方式：现象分析; 指标：内存泄露，内存碎片,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
LDV6DP57,conferencePaper,2010,"Platis, A. N.; Koutras, V. P.",Software rejuvenation on a PKI,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722102,,"One of the major issues for PKI-based mechanisms is the validity of user's certificate. In order to examine whether a certificate is valid or not, the PKI Certificate Authority (CA) has to check the most recent Certificate Revocation List (CRL) that maintains. But the CRL is not always available when is needed. In such a case the problem to be solved is whether to proceed to a transaction or abandon it. One of the main reasons for CRL's unavailability is the CA's server unavailability. In this paper we innovatively propose to adopt software rejuvenation to reduce the probability that CA's cannot issue the CRL. Using a Markovbased model, an indicator is derived, concerning the cost of security incidents and abandoned transactions The aim of the present work consists firstly in defining a threshold under which a transaction can be accomplished even without checking the CRL and secondly in scheduling software rejuvenation on CA's server such that the total operational cost is minimized).",2010-11,2023-02-22 02:58:16,2024-09-04 06:55:06,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\E2BHELBX\5722102.html; C:\Users\tristone\Zotero\storage\FPZB4T6N\Platis和Koutras - 2010 - Software rejuvenation on a PKI.pdf,,分析方式：Model-based; 验证方法：数值分析; 会议：WOSAR; 模型：CTMC; 系统类型：CA服务器; 指标：availability，cost; 老化影响：安全,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
MFDPSJJI,conferencePaper,2010,"Moreno, Marcio Ferreira; Soares, Luiz Fernando Gomes",Resilient hypermedia presentations,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722101,https://ieeexplore.ieee.org/document/5722101/keywords#keywords,"This paper proposes a recovery plan for Ginga-NCL, the declarative middleware environment of the Japan-Brazilian Digital TV Standard and ITU-T Recommendation for IPTV services. The proposed plan aims at providing resilience to digital TV presentations. As proof of concept, the recovery plan has been incorporated to the Ginga-NCL reference implementation. However, it can also be applied to other DTV middlewares.",2010-11,2024-09-02 08:16:20,2024-10-05 06:51:40,2024-09-02 08:16:20,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\99ZHAKBV\Moreno和Soares - 2010 - Resilient hypermedia presentations.pdf,,验证方法：实验实证&比较分析; 老化影响：崩溃/挂起故障&性能降级; 分析方式：rej; 会议：ISSREW; 系统类型：专用系统; 重生策略：预防性恢复和反应性恢复; 重生层级：应用程序component,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
W5DW9VRI,conferencePaper,2010,"Magalhães, João Paulo; Silva, Luis Moura",Prediction of performance anomalies in web-applications based-on software aging scenarios,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722095,,"The topic of this paper is about prediction of performance anomalies caused by software aging. We have developed a framework for detection of performance anomalies that is targeted to web and component-based applications. In this study, we selected some amount of historical data previously collected and we conducted a correlation analysis with this data. The resulting dataset was then submitted to some Machine-Learning (ML) classification algorithms. The best algorithms were selected according to the accuracy and precision. In a second step, we induced some synthetic aging scenarios (memory leaks and CPU contention) in the application and we tried to do estimation of the system parameters by using time-series analysis. With the estimated values we conducted a classification with the three previous ML algorithms. From the initial results we observed that combining the estimation of parameters supported by time-series models with ML classification techniques provides some good results on the prediction of performance anomalies. We also observed that there is no single ML algorithm that can be applied effectively to predict the response time for all the web-transactions.",2010-11,2022-03-21 08:47:30,2024-08-23 01:20:31,,1-7,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>概述：将时间序列模型支持的参数估计与ML分类技术相结合预测web应用程序老化</p> </div>; <div data-schema-version=""8""><p>结论：没有单一的ML分类算法可以用来预测用户事务响应时间；在进行参数估计时，应考虑不同时间序列模型之间的组合</p> </div>",C:\Users\tristone\Zotero\storage\RLGVUTBN\5722095.html; C:\Users\tristone\Zotero\storage\6P9QBVK7\Magalhães和Silva - 2010 - Prediction of performance anomalies in web-applications based-on software aging scenarios.pdf,,分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 会议：WOSAR; 老化影响：内存泄漏&CPU争用; 模型：NB，decision trees（J48，LMT），MLP+ARIMA，Holt-Winters; 系统类型：web服务器（应用程序）; 指标：AvailableMem，RunnThread等13个,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
V7WFHVS7,conferencePaper,2010,"Okamura, Hiroyuki; Dohi, Tadashi",Performance-aware software rejuvenation strategies in a queueing system,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722099,,"This paper deals with the performance analysis of a queueing system with rejuvenation controls. In particular, we describe the arrival process by the Markov-modulated Poisson process (MMPP) and consider a gradually degraded sever system. Under this situation, we discuss the system throughput of the queueing system and the optimal rejuvenation strategy maximizing the throughput based on the semi-Markov decision process in the case where the arrival and service rates are observable.",2010-11,2023-01-12 03:33:39,2024-08-14 07:58:19,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：使用半马尔可夫决策过程对具有恢复控制的排队系统进行性能分析</p> </div>",C:\Users\tristone\Zotero\storage\6XTPIPB5\5722099.html; C:\Users\tristone\Zotero\storage\3SLID6P9\Okamura和Dohi - 2010 - Performance-aware software rejuvenation strategies in a queueing system.pdf,,分析方式：Model-based; 验证方法：数值分析; 重生层级：非特定的; 会议：WOSAR; 系统类型：非特定的; 老化影响：性能降级; 模型：MMPP; 指标：吞吐量,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
XQMJ6NKF,conferencePaper,2010,"Matias, Rivalino; Beicker, Ibrahim; Leitão, Breno; Maciel, Paulo R. M.",Measuring software aging effects through OS kernel instrumentation,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722094,,"Software aging is a phenomenon defined as the continuing degradation of software systems during runtime, being particularly noticeable in long-running applications. Measuring aging effects is a very important step towards identifying the most significant causes of software aging, so rejuvenation mechanisms can be applied effectively. The literature has already discussed aging monitoring from a userspace perspective. In this paper we present an innovative study where we explore OS kernel instrumentation techniques to measure software aging effects. Kernel instrumentations are available in practically all modern operating systems and we show how this powerful mechanism can be used to monitor either application-specific or system-wide aging indicators. In addition to the theoretical study, we present numerical results obtained from controlled experiments.",2010,2022-07-18 11:58:29,2024-08-14 07:56:32,,1-6,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：仅针对内存碎片</p> </div>; <div data-schema-version=""8""><p>概述：使用现代操作系统仪器基础设施来测量软件老化的影响</p> </div>; <div data-schema-version=""8""><p>优点：可以实时检测操作系统的老化指标信息</p> </div>",C:\Users\tristone\Zotero\storage\5TCZAXE4\5722094.html; C:\Users\tristone\Zotero\storage\7RUAPJ9I\Matias 等 - 2010 - Measuring software aging effects through OS kernel instrumentation.pdf,,会议：WOSAR; 验证方法：实验实证; 指标：内存; 系统类型：Linux; 分析方式：现象分析&度量; 老化影响：内存泄漏&内存碎片化,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
AMK8BG7Q,conferencePaper,2010,"Cotroneo, Domenico; Natella, Roberto; Pietrantuono, Roberto",Is Software Aging related to Software Metrics?,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722096,http://ieeexplore.ieee.org/document/5722096/,"This work presents an empirical analysis aiming at investigating what kind of relationship exists between software aging and several static features of the software. While past studies on software aging focused on predicting the aging effects by monitoring and analytically modeling resource consumption at runtime, this study intends to explore if the static features of the software, as derived by its source code, presents potential relationships with software aging. We adopt a set of common software metrics concerning program structure, such as size and cyclomatic complexity, along with some features specifically developed for this study; metrics were then computed from ten complex software applications affected by aging. A statistical analysis to infer their relationship with software aging was carried out. Results encourage further investigations in this direction, since they show that software aging effects are related to the static features of software.",2010-11,2023-01-04 07:21:38,2024-10-12 06:18:23,2023-01-04 07:21:38,1-6,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2010 IEEE Second International Workshop on Software Aging and Rejuvenation (WoSAR) ISBN: 9781612843445 Place: San Jose, CA, USA Publisher: IEEE TLDR: Results encourage further investigations in this direction, since they show that software aging effects are related to the static features of software.","<div data-schema-version=""8""><p>不足：有限的软件老化公开数据并不能得出明确的结论</p> </div>; <div data-schema-version=""8""><p>概述：研究了应用程序的软件指标与软件老化之间的关系</p> </div>; <div data-schema-version=""8""><p>优点：不需要动态运行程序，仅用度量的方式即可找出老化程序</p> </div>",C:\Users\tristone\Zotero\storage\HRA3LLYA\Cotroneo 等 - 2010 - Is Software Aging related to Software Metrics.pdf; ,https://www.semanticscholar.org/paper/Is-software-aging-related-to-software-metrics-Cotroneo-Natella/2d8b597bc2beb25d233daa40e3b3305dd7681ccb,方法：PCA、pearson、Independent Features procedure、 LIBSVM; 分析方式：度量; 会议：WOSAR; 老化影响：非特定的; 系统类型：软件系统; 验证方法：实验实证&比较分析; 指标：圈复杂度等静态指标,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
L8SK5EAP,conferencePaper,2010,"Zhao, Jing; Trivedi, Kishor S.; Wang, YanBin; Chen, XiaoYong",Evaluation of software performance affected by aging,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,978-1-61284-344-5,,10.1109/WOSAR.2010.5722093,http://ieeexplore.ieee.org/document/5722093/,"A number of studies have reported the phenomenon of “Software aging”, characterized by progressive software performance degradation. This is mainly caused by the exhaustion of the combination of system resources. Traditionally, modeling and analysis of software aging has been restricted to a single resource aging. The combined effect of software aging due to the interaction of several resources remains to be explored. A BP network model for the evaluation of software performance affected by aging is proposed in this paper, and then a robust locally weighted regression algorithm is presented to identify the inflexion point. The shape of performance curve changes greatly at the inflexion point, which makes it easy to determine when to perform software rejuvenation. Experimental results based on actual data sets verify the proposed model effectiveness in evaluation of the software performance.",2010-11,2023-01-09 12:43:21,2024-08-14 07:55:21,2023-01-09 12:43:21,1-6,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: San Jose, CA, USA","<div data-schema-version=""8""><p>概述：<code>利用BP网络模型提出局部加权回归算法识别性能曲线拐点</code></p> </div>",; C:\Users\tristone\Zotero\storage\8CYUZ9NY\Zhao 等 - 2010 - Evaluation of software performance affected by aging.pdf,https://www.semanticscholar.org/paper/Evaluation-of-software-performance-affected-by-Zhao-Trivedi/bb6142482662a21b302fb2cb9f4af4dfc6f478ea,老化影响：资源消耗; 分析方式：Measurement-based（ML）; 会议：WOSAR; 系统类型：web服务器; 验证方法：实验实证; 模型：BP; 指标：cpu使用率、可用物理内存、可用交换空间和平均负载,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation (WoSAR),,,,,,,,,,,,,,,
L2T45NQC,conferencePaper,2010,"Reinecke, Philipp; Wolter, Katinka",A simulation study on the effectiveness of restart and rejuvenation to mitigate the effects of software ageing,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,10.1109/WOSAR.2010.5722100,,We study the effectiveness of client-side restart and server-side rejuvenation on a system that suffers from software ageing due to memory leaks. An implicit and an explicit model for software ageing are studied. We consider system and service unavailability as measures for the availability of the server.,2010-11,2023-01-12 03:44:19,2024-10-05 07:01:00,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">研究了在由于内存泄漏而导致软件老化的系统上客户端重新启动和服务器端重生的有效性</span></p> </div>",C:\Users\tristone\Zotero\storage\42UQACLW\5722100.html; C:\Users\tristone\Zotero\storage\XZZBZVKZ\Reinecke和Wolter - 2010 - A simulation study on the effectiveness of restart and rejuvenation to mitigate the effects of softw.pdf; C:\Users\tristone\Zotero\storage\6ULMCFWG\Reinecke和Wolter - 2010 - A simulation study on the effectiveness of restart and rejuvenation to mitigate the effects of softw.pdf,,会议：WOSAR; 老化影响：故障率增加; 分析方式：rej; 模型：威布尔老化和显式老化; 系统类型：服务器; 验证方法：仿真模拟; 指标：系统响应时间，system unavailability; 重生策略：重生&用户重启restart; 重生层级：服务器端,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE Second International Workshop on Software Aging and Rejuvenation,,,,,,,,,,,,,,,
WP993TGZ,conferencePaper,2010,"Alonso, Javier; Torres, Jordi; Berral, Josep Ll.; Gavaldà, Ricard",J2EE instrumentation for software aging root cause application component determination with AspectJ,"2010 IEEE International Symposium on Parallel Distributed Processing, Workshops and Phd Forum (IPDPSW)",,,10.1109/IPDPSW.2010.5470857,,"Unplanned system outages have a negative impact on company revenues and image. While the last decades have seen a lot of efforts from industry and academia to avoid them, they still happen and their impact is increasing. According to many studies, one of the most important causes of these outages is software aging. Software aging phenomena refers to the accumulation of errors, usually provoking resource contention, during long running application executions, like web applications, which normally cause applications/systems hang or crash. Determining the software aging root cause failure, not the resource or resources involved in, is a huge task due to the growing day by day complexity of the systems. In this paper we present a monitoring framework based on Aspect Programming to monitor the resources used by every application component in runtime. Knowing the resources used by every component of the application we can determine which components are related to the software aging. Furthermore, we present a case study where we evaluate our approach to determine in a web application scenario, which components are involved in the software aging with promising results.",2010-04,2022-03-21 08:45:14,2024-10-12 06:09:41,,1-8,,,,,,,,,,,,,en-US,,,,,,,TLDR: A monitoring framework based on Aspect Programming to monitor the resources used by every application component in runtime and determine which components are related to the software aging with promising results is presented.,"<div data-schema-version=""8""><p>概述：<code>通过基于切面编程的监控框架确定哪些组件与软件老化更相关</code></p> </div>; <div data-schema-version=""8""><p>实验：为了模拟随机内存消耗，我们修改了一个servlet，它计算0到N之间的随机数。这个数字决定了在注入下一个内存消耗之前有多少请求使用servlet。因此，内存消耗的变化取决于客户端的数量和servlet访问的频率。根据TPC-W规范，该频率取决于所选的工作负载。这使得在高工作负载的情况下，servlet可以快速注入内存泄漏。然而，由于工作量低，消耗也较低。但是，同样，平均消费率将取决于这个随机变量的平均值，随着时间的推移，波动变得不那么相关。因此，我们可以通过改变N来模拟这种效应，我们决定只使用这一个相关参数。这个错误帮助我们在不同的场景下验证我们的框架。TPC-W有三种类型的工作量（浏览、购物和订购）。在我们的案例中，我们使用购物配送进行了所有实验。</p> </div>",C:\Users\tristone\Zotero\storage\AMU8Z7J6\Alonso 等 - 2010 - J2EE instrumentation for software aging root cause application component determination with AspectJ.pdf; C:\Users\tristone\Zotero\storage\KS4JYDQK\5470857.html,,系统类型：web服务器（J2EE基础架构）; 验证方法：实验实证&比较分析; 老化影响：内存泄漏; 指标：内存; 分析方式：度量; 会议：IPDPSW; 重生层级：组件,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2010 IEEE International Symposium on Parallel Distributed Processing, Workshops and Phd Forum (IPDPSW)",,,,,,,,,,,,,,,
KJJQ76SL,conferencePaper,2010,"Matias Jr., Rivalino; Trivedi, Kishor S.; Maciel, Paulo R.M.",Using Accelerated Life Tests to Estimate Time to Software Aging Failure,2010 IEEE 21st International Symposium on Software Reliability Engineering,978-1-4244-9056-1,,10.1109/ISSRE.2010.42,https://ieeexplore.ieee.org/document/5635037/,"Software aging is a phenomenon defined as the continuing degradation of software systems during runtime, being particularly noticeable in long-running applications. Aging-related failures are very difficult to observe, because the accumulation of aging effects usually requires a long-term execution. Thus, collecting a statistically significant sample of times to aging-related failures so as to estimate the system’s lifetime distribution is a very hard task. This is an important problem that prevents many experimental and analytical studies, mainly those focused on modeling of software aging aspects, of using representative parameter values. In this paper we propose and evaluate the use of quantitative accelerated life tests (QALT) to reduce the time to obtain the lifetime distribution of systems that fail due to software aging. Since QALT was developed for hardware failures, in this paper, we adapt it to software aging experiments. We test the proposed approach experimentally, estimating the lifetime distribution of a real web server system. The accuracy of the estimated distribution is evaluated by comparing its reliability estimates with a sample of failure times observed from the real system under test. The mean time to failure calculated from the real sample falls inside the 90% confidence interval constructed from the estimated lifetime distribution, demonstrating the high accuracy of the estimated model. The proposed approach reduces the time required to obtain the failure times by a factor of seven, for the real system investigated.",2010-11,2023-01-09 15:03:38,2024-08-14 08:02:06,2023-01-09 15:03:38,211-219,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: San Jose, CA CCF: B","<div data-schema-version=""8""><p>概述：<code>首次提出并评估了定量加速寿命测试（QALT）以减少获取因软件老化而失效的系统的寿命分布的时间</code></p> </div>; <div data-schema-version=""8""><p>优点：所提出的方法将获得故障时间所需的时间减少了七倍。</p> </div>",C:\Users\tristone\Zotero\storage\39F28WJD\Matias Jr. 等 - 2010 - Using Accelerated Life Tests to Estimate Time to Software Aging Failure.pdf; ,https://www.semanticscholar.org/paper/Using-Accelerated-Life-Tests-to-Estimate-Time-to-Matias-Trivedi/4c25160db6bf710aa16cc0c34e6ac8c0a5febd24,验证方法：实验实证&比较分析; 会议：ISSRE; 老化影响：非特定的; 分析方式：testing; 系统类型：web服务器（Apache）; 测试方法：加速寿命测试,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010),,,,,,,,,,,,,,,
DW94NFMA,conferencePaper,2010,"Cotroneo, Domenico; Natella, Roberto; Pietrantuono, Roberto; Russo, Stefano",Software Aging Analysis of the Linux Operating System,2010 IEEE 21st International Symposium on Software Reliability Engineering,,,10.1109/ISSRE.2010.24,,"Software systems running continuously for a long time tend to show degrading performance and an increasing failure occurrence rate, due to error conditions that accrue over time and eventually lead the system to failure. This phenomenon is usually referred to as Software Aging. Several long-running mission and safety critical applications have been reported to experience catastrophic aging-related failures. Software aging sources (i.e., aging-related bugs) may be hidden in several layers of a complex software system, ranging from the Operating System (OS) to the user application level. This paper presents a software aging analysis at the Operating System level, investigating software aging sources inside the Linux kernel. Linux is increasingly being employed in critical scenarios; this analysis intends to shed light on its behaviour from the aging perspective. The study is based on an experimental campaign designed to investigate the kernel internal behaviour over long running executions. By means of a kernel tracing tool specifically developed for this study, we collected relevant parameters of several kernel subsystems. Statistical analysis of collected data allowed us to confirm the presence of aging sources in Linux and to relate the observed aging dynamics to the monitored subsystems behaviour. The analysis output allowed us to infer potential sources of aging in the kernel subsystems.",2010-11,2023-01-04 15:57:36,2024-08-14 07:59:34,,71-80,,,,,,,,,,,,,,,,,,IEEE Xplore,,ISSN: 2332-6549 CCF: B,"<div data-schema-version=""8""><p>不足：指标不足，仅验证了内存相关的老化趋势。</p> </div>; <div data-schema-version=""8""><p>概述：分析Linux内核中的软件老化指标，推断老化具体来源</p> </div>; <div data-schema-version=""8""><p>优点：计算内存消耗和各子系统工作负载的相关性，定位老化位置</p> </div>",C:\Users\tristone\Zotero\storage\KVRAU3YD\Cotroneo 等 - 2010 - Software Aging Analysis of the Linux Operating System.pdf; C:\Users\tristone\Zotero\storage\R479RWHR\5635122.html,,会议：ISSRE; 老化影响：非特定的; 验证方法：实验实证; 系统类型：Linux; 指标：内存，系统调用延迟; 分析方式：现象分析&度量; 方法：多元线性回归和主成分分析,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 IEEE 21st International Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
3D3PZK24,conferencePaper,2010,"Myint, May Tar Hla; Thein, Thandar",Availability Improvement in Virtualized Multiple Servers with Software Rejuvenation and Virtualization,2010 Fourth International Conference on Secure Software Integration and Reliability Improvement,,,10.1109/SSIRI.2010.19,,"Software aging often affects the performance of a software system and eventually causes it to fail. To highlight the aging problems in long running applications, we have conducted the study of software rejuvenation approach and virtualization technology in this paper. In order to reduce the downtime during rejuvenation interval, software rejuvenation and virtualization technology are combined in this paper. Virtualization allows multiple operating system instances to run concurrently on a single physical machine. In this paper, we map virtualization based software rejuvenation approach with Markov Chain process and get mathematical steady-state solutions of the chain. We model multiple physical servers which are used to host multiple virtual machines (VMs) using stochastic modeling and evaluate it through both numerical analysis and SHARPE (Symbolic Hierarchical Automated Reliability and Performance Evaluator) tool simulation. The numerical results show that software rejuvenation and virtualization can be used to prolong the availability of the services and reduce the downtime of the systems.",2010-06,2022-03-22 06:29:40,2024-08-14 07:54:00,,156-162,,,,,,,,,,,,,en-US,,,,,,,,"<div data-schema-version=""8""><p>概述：将重生技术与虚拟化技术相结合，允许多个操作系统实例在一台物理机器上并发运行</p> </div>; <div data-schema-version=""8""><p>优点：参数为已有实际数据决定，相对客观</p> </div>",C:\Users\tristone\Zotero\storage\TTU49S38\5502845.html; C:\Users\tristone\Zotero\storage\MBGXSJTE\Myint和Thein - 2010 - Availability Improvement in Virtualized Multiple Servers with Software Rejuvenation and Virtualizati.pdf,,老化影响：崩溃/挂起故障&性能降级; 分析方式：Model-based; 验证方法：仿真模拟&数值分析; 会议：SSIRI; 模型：Markov chain; 系统类型：托管多个虚拟机（VM）的物理服务器; 指标：system-state availability，downtime; 重生层级：VM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2010 Fourth International Conference on Secure Software Integration and Reliability Improvement,,,,,,,,,,,,,,,
4RGF3K7T,journalArticle,2009,"Silva, Luis Moura; Alonso, Javier; Torres, Jordi",Using Virtualization to Improve Software Rejuvenation,IEEE Transactions on Computers,,,10.1109/TC.2009.119,,"In this paper, we present an approach for software rejuvenation based on automated self-healing techniques that can be easily applied to off-the-shelf application servers. Software aging and transient failures are detected through continuous monitoring of system data and performability metrics of the application server. If some anomalous behavior is identified, the system triggers an automatic rejuvenation action. This self-healing scheme is meant to disrupt the running service for a minimal amount of time, achieving zero downtime in most cases. In our scheme, we exploit the usage of virtualization to optimize the self-recovery actions. The techniques described in this paper have been tested with a set of open-source Linux tools and the XEN virtualization middleware. We conducted an experimental study with two application benchmarks (Tomcat/Axis and TPC-W). Our results demonstrate that virtualization can be extremely helpful for failover and software rejuvenation in the occurrence of transient failures and software aging.",2009-11,2022-11-03 11:25:22,2024-10-03 13:31:00,,1525-1538,,,58.0,,IEEE Trans. Comput.,,,,,,,,,,,,,3.183,2.0,Conference Name: IEEE Transactions on Computers JCR分区: Q2 中科院分区升级版: 计算机科学2区 影响因子: 3.6 5年影响因子: 3.2 EI: 是 CCF: A TLDR: An approach for software rejuvenation based on automated self-healing techniques that can be easily applied to off-the-shelf application servers and demonstrates that virtualization can be extremely helpful for failover and software rejuvenation in the occurrence of transient failures and software aging.,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">提出了一种基于自动自修复技术的软件重生方法，该技术可以很容易地应用于现成的应用服务器</span></p> </div>; <div data-schema-version=""8""><p>优点：可以应用于现成的服务器，实现了零停机时间而不会丢失任何正在进行的工作；选择了两个代表典型的基于Web的应用程序的应用程序基准：其中一个使用SOAP作为通信协议，而另一个基于HTTP协议。</p> </div>",C:\Users\tristone\Zotero\storage\WMUGWIB7\5184821.html; C:\Users\tristone\Zotero\storage\AUAESJEN\Silva 等 - 2009 - Using Virtualization to Improve Software Rejuvenation.pdf,,验证方法：实验实证&比较分析; 老化影响：性能降级; 分析方式：rej; 重生层级：VM; 指标：作业完成速率; 期刊：TC; 系统类型：应用程序服务器,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HWKTVGZH,conferencePaper,2009,"Du, Xiaozhi; Qi, Yong; Hou, Di; Chen, Ying; Zhong, Xiao",Modeling and Performance Analysis of Software Rejuvenation Policies for Multiple Degradation Systems,2009 33rd Annual IEEE International Computer Software and Applications Conference,,,10.1109/COMPSAC.2009.39,,"Software rejuvenation is a preventive and proactive technology to counteract the phenomenon of software aging and system failures and to improve the system reliability. In this paper we present and analyze three software rejuvenation policies for an operational software system with multiple degradations, called preemptive rejuvenation, delayed rejuvenation and mixed rejuvenation. These policies consider both history data and current running state, and the rejuvenation action is triggered on the basis of predetermined performance threshold and rejuvenation interval respectively. Continuous-time Markov chains are used to describe the analytic models. To evaluate these polices expediently, we utilize deterministic and stochastic Petri nets to solve the models. Numerical results show that the deployment of software rejuvenation in the system leads to significant improvement in availability and throughput. These three rejuvenation policies are better than the standard rejuvenation policy, and the mixed policy is the best one.",2009-07,2022-03-22 06:31:43,2024-09-19 12:04:00,,240-245,,,1.0,,,,,,,,,,en-US,,,,,,,"ISSN: 0730-3157 CCF: C TLDR: Three software rejuvenation policies for an operational software system with multiple degradations, called preemptive rejuvenation, delayed rejuvenation and mixed rejuvenation are presented and analyzed.","<div data-schema-version=""8""><p>概述：通过阈值与模型结合的方式分析抢先重生、延迟重生、混合重生三种策略的有效性</p> </div>; <div data-schema-version=""8""><p>优点：考虑了系统的四种退化状态，并讨论了三种重生策略，均优于两种退化状态的重生策略</p> </div>",C:\Users\tristone\Zotero\storage\QVJK57UI\Du 等 - 2009 - Modeling and Performance Analysis of Software Rejuvenation Policies for Multiple Degradation Systems.pdf,,重生层级：非特定的; 系统类型：非特定的; 老化影响：性能降级; 验证方法：数值分析&比较分析; 分析方式：Hybrid; 会议：COMPSAC; 模型：DSPN多重退化模型; 指标：可用性，吞吐量，阻塞率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2009 33rd Annual IEEE International Computer Software and Applications Conference,,,,,,,,,,,,,,,
IIMY9GWD,conferencePaper,2008,"Andrzejak, Artur; Silva, Luis",Using machine learning for non-intrusive modeling and prediction of software aging,NOMS 2008 - 2008 IEEE Network Operations and Management Symposium,,,10.1109/NOMS.2008.4575113,,"The wide-spread phenomenon of software (running image) aging is known to cause performance degradation, transient failures or even crashes of applications. In this work we describe first a method for monitoring and modeling of performance degradation in SOA applications, particularly application servers. This method works for a large class of the aging processes caused by resource depletion (e.g. memory leaks). It can be deployed non-intrusively in a production environment, under arbitrary service request distributions. Based on this schema we investigate in the second part of the paper how machine learning (classification) algorithms can be used for proactive detection of performance degradation or sudden drops caused by aging. We leverage the predictive power of these algorithms with several techniques to make the measurement-based aging models more adaptive and more robust against transient failures. We evaluate several state-of-the-art classification methods for their accuracy and computational efficiency in this scenario. The studies are performed on a data set generated by a TPC-W benchmark instrumented with a memory leak injector. The results show that the probing method yields accurate aging models with low overhead and the machine learning approach gives statistically significant short-term predictions of degrading application performance. Both approaches can be used directly to fight aging via adaptive software rejuvenation (restart of the application), for operator alerting, or for short-term capacity planning.",2008-04,2022-06-29 09:51:05,2024-08-14 08:02:08,,25-32,,,,,,,,,,,,,en-US,,,,,,,ISSN: 2374-9709,"<div data-schema-version=""8""><p>概述：描述了与老化过程建模相关的两种技术：使用高请求率的人工探针来测量服务器性能；使用分类算法预测老化过程</p> </div>; <div data-schema-version=""8""><p>优点：在分类算法中数据量比较小的训练集也能获得良好的准确性</p> </div>",C:\Users\tristone\Zotero\storage\KIYYKLP9\Andrzejak和Silva - 2008 - Using machine learning for non-intrusive modeling and prediction of software aging.pdf; C:\Users\tristone\Zotero\storage\DKK5QUDC\4575113.html,,分析方式：Measurement-based（ML）; 验证方法：实验实证&对比分析; 会议：NOMS; 老化影响：内存泄漏&性能降级; 模型：J48，NaiveBayes，SMO，ZeroR; 系统类型：应用程序; 指标：单位时间完成工作量；MAE，MSE; 重生层级：应用程序,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,NOMS 2008 - 2008 IEEE Network Operations and Management Symposium,,,,,,,,,,,,,,,
YUR6UVM7,conferencePaper,2008,"He, Xin; Wei, Wei; Gui, Xiaolin",The Software Rejuvenation Model with Pre-start Technology,International Symposiums on Information Processing,,,10.1109/ISIP.2008.19,,"Software aging related failures can be prevented by applying software rejuvenation technology. But the restart operation in the software rejuvenation phase makes the system unable to provide services, which leads to system unavailability. The software rejuvenation model with pre-start technology is therefore proposed to reduce downtime and improve availability by switching between active copy and backup copy, which can substitute for restart operation and resolve unavailability problem. First of all, the rejuvenation operation of model with pre-start technology is described and improvements on the conventional model are presented. Second, the model availability is calculated by Markov Regenerative process. And finally, according to the experimental results, current model proves to be more available than the conventional one.",2008-05,2022-10-25 11:05:07,2024-10-05 03:58:42,,723-727,,,,,,,,,,,IEEE,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>概述：提出了具有预启动技术的软件重生模型，通过在活动拷贝和备份拷贝之间切换来减少停机时间并提高可用性</p> </div>",C:\Users\tristone\Zotero\storage\QQBCS2SB\He 等 - 2008 - The Software Rejuvenation Model with Pre-start Technology.pdf; C:\Users\tristone\Zotero\storage\M5S9HHHA\4554180.html,,老化影响：非特定的; 重生层级：应用程序; 系统类型：非特定的; 验证方法：数值分析&比较分析; 模型：MRGP; 会议：ISIP; 指标：availability，downtime; 重生策略：Pre-start technology，活动拷贝和备份拷贝之间切换; 分析方式：model&rej,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,International Symposiums on Information Processing,,,,,,,,,,,,,,,
KF6GIQHD,conferencePaper,2008,"Eto, Hiroyuki; Dohi, Tadashi; Ma, Jianhua",Simulation-Based Optimization Approach for Software Cost Model with Rejuvenation,Autonomic and Trusted Computing,978-3-540-69295-9,,,,"Software rejuvenation is a preventive and proactive maintenance solution that is particularly useful for counteracting the phenomenon of software aging. In this paper we consider an operational software system with multiple degradations and derive the optimal software rejuvenation policy minimizing the expected operation cost per unit time in the steady state, via the dynamic programing approach. Especially, we develop a reinforcement learning algorithm to estimate the optimal rejuvenation schedule adaptively and examine its asymptotic properties through a simulation experiment.",2008,2022-03-21 08:38:56,2024-09-23 12:16:28,,206-218,,,,,,,,,,,Springer,"Berlin, Heidelberg",en-US,,,,,,,,"<div data-schema-version=""8""><p>不足：收敛速度比较慢，实验中要执行超过200次之后才能获得良好的性能</p> </div>; <div data-schema-version=""8""><p>概述：提出了一种自适应评估方案来触发可操作软件系统的软件重生</p> </div>; <div data-schema-version=""8""><p>优点：算法为非参数方法，可适用于寿命长且成本高的软件系统</p> </div>",C:\Users\tristone\Zotero\storage\MXVQ7BP9\Eto 等 - 2008 - Simulation-Based Optimization Approach for Software Cost Model with Rejuvenation.pdf,,老化影响：非特定的; 重生层级：非特定的; 系统类型：软件系统; 分析方式：Hybrid; 验证方法：仿真模拟&数值分析; 模型：SMDP; 期刊：LNPSE; 指标：steady-state expected，operation cost,,"Rong, Chunming; Jaatun, Martin Gilje; Sandnes, Frode Eika; Yang, Laurence T.; Ma, Jianhua",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7L29DRM5,conferencePaper,2008,"El-Shishiny, Hisham; Deraz, Sally; Bahy, Omar",Mining Software Aging Patterns by Artificial Neural Networks,Artificial Neural Networks in Pattern Recognition,978-3-540-69939-2,,10.1007/978-3-540-69939-2_24,,"This paper investigates the use of Artificial Neural Networks (ANN) to mine and predict patterns in software aging phenomenon. We analyze resource usage data collected on a typical long-running software system: a web server. A Multi-Layer Perceptron feed forward Artificial Neural Network was trained on an Apache web server dataset to predict future server swap space and physical free memory resource exhaustion through ANN univariate time series forecasting and ANN nonlinear multivariate time series empirical modeling. The results were benchmarked against those obtained from non-parametric statistical techniques, parametric time series models and other empirical modeling techniques reported in the literature.",2008,2023-01-12 03:36:31,2024-08-14 07:56:47,,252-262,,,,,,,Lecture Notes in Computer Science,,,,Springer,"Berlin, Heidelberg",en,,,,,Springer Link,,CCF: C,"<div data-schema-version=""8""><p>概述：<span style=""color: rgb(0, 0, 0)"">研究了利用人工神经网络来挖掘和预测软件老化现象的模式</span></p> </div>",C:\Users\tristone\Zotero\storage\5YJDNXN4\El-Shishiny 等 - 2008 - Mining Software Aging Patterns by Artificial Neural Networks.pdf,,分析方式：Measurement-based（ML）; 老化影响：崩溃/挂起故障&性能降级; 系统类型：web服务器; 验证方法：实验实证; 指标：内存; 会议：ANNPR; 模型：ANN,,"Prevost, Lionel; Marinai, Simone; Schwenker, Friedhelm",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
WJ44YZFK,conferencePaper,2008,"Jia, Yun-Fei; Chen, Xiu-E; Zhao, Lei; Cai, Kai-Yuan",On the Relationship between Software Aging and Related Parameters (Short Paper),2008 The Eighth International Conference on Quality Software,,,10.1109/QSIC.2008.54,http://ieeexplore.ieee.org/document/4601550/,"Software aging refers to the phenomenon that long-running software shows signs of increasing failing rate, overmuch resource usage, and performance degradation. Software rejuvenation is a proactive approach to dealing with this problem. However, commonly used rejuvenation methods involve a relatively larger overhead. An alternative is to reduce the severity of software aging by online adjusting the settings of related parameters of the system. In this paper, we conduct controlled experiments to analyze severity of software aging under different settings of related parameters. Based on the experimental data, a metric is defined to measure the severity of software aging. A multiple-input and multiple-output (MIMO) model is then constructed to formulate the relationship between severity of software aging and related parameter settings. The proposed MIMO model gives us a way to control the severity of software aging at runtime.",2008-08,2023-01-10 09:23:11,2024-10-12 06:20:58,2023-01-10 09:23:11,241-246,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2008 Eighth International Conference on Quality Software (QSIC) ISBN: 9780769533124 Place: Oxford, United Kingdom Publisher: IEEE TLDR: The proposed MIMO model gives a way to control the severity of software aging at runtime by online adjusting the settings of related parameters of the system.","<div data-schema-version=""8""><p>概述：提出MIMO模型提供一种通过在线调整系统相关参数的设置来控制运行时软件老化的严重性的方法</p> </div>",C:\Users\tristone\Zotero\storage\LNPENIYY\Jia 等 - 2008 - On the Relationship between Software Aging and Related Parameters (Short Paper).pdf; ,https://www.semanticscholar.org/paper/On-the-Relationship-between-Software-Aging-and-Jia-Chen/19cb4bc10d79f3795114e9611e00e1ee7407318f,策略：在线调整指标代替重生; 分析方式：度量&other; 会议：QSIC; 老化影响：非特定的; 模型：MIMO; 系统类型：web服务器（Apache）; 验证方法：实验实证; 指标：MaxRequestPerChild，MaxSpareServers，MaxClients，KeepaliveTimeout,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
PIUK2CNE,conferencePaper,2008,"Zhao, Long; Song, QinBao; Zhu, Lei",Common Software-Aging-Related Faults in Fault-Tolerant Systems,2008 International Conference on Computational Intelligence for Modelling Control & Automation,,,10.1109/CIMCA.2008.113,,"In recent years, remarkable attention has been focused on software aging phenomena, in which the performance of software systems degrades with time. Fault-tolerant software systems which provide high assurance may suffer from such phenomena. Based on the common software-aging-related faults in fault-tolerant systems, a behavior model of a double-version fault-tolerant software system is established using Markov reward model. The performance of the system such as expected service rate in steady state is evaluated and the sensitivity analysis of some parameters is performed.",2008-12,2022-10-25 11:23:11,2024-08-14 07:54:22,,327-331,,,,,,,,,,,IEEE,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>不足：崩溃时间分布需是指数分布</p> </div>; <div data-schema-version=""8""><p>概述：利用马尔可夫奖励模型建立双版本容错软件系统的行为模型</p> </div>",C:\Users\tristone\Zotero\storage\L3QAGG78\5172646.html; C:\Users\tristone\Zotero\storage\I7ZRT2RS\Zhao 等 - 2008 - Common Software-Aging-Related Faults in Fault-Tolerant Systems.pdf,,分析方式：Model-based; 重生层级：非特定的; 老化影响：故障率增加; 验证方法：仿真模拟; 模型：MRM; 会议：CIMCA; 系统类型：双版本容错软件系统; 指标：expected service rate in steady state,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 International Conference on Computational Intelligence for Modelling Control & Automation,,,,,,,,,,,,,,,
PEYIGRXY,conferencePaper,2008,"Grottke, Michael; Matias, Rivalino; Trivedi, Kishor S.",The fundamentals of software aging,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),978-1-4244-3416-9,,10.1109/ISSREW.2008.5355512,http://ieeexplore.ieee.org/document/5355512/,"Since the notion of software aging was introduced thirteen years ago, the interest in this phenomenon has been increasing from both academia and industry. The majority of the research efforts in studying software aging have focused on understanding its effects theoretically and empirically. However, conceptual aspects related to the foundation of this phenomenon have not been covered in the literature. This paper discusses foundational aspects of the software aging phenomenon, introducing new concepts and interconnecting them with the current body of knowledge, in order to compose a base taxonomy for the software aging research. Three real case studies are presented with the purpose of exemplifying many of the concepts discussed.",2008-11,2022-06-29 07:15:16,2024-09-23 12:39:02,2022-06-29 07:15:16,1-6,,,,,,,,,,,IEEE,"Seattle, WA, USA",en-US,,,,,,,EI: 是 CCF: B,"<div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FPEYIGRXY%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FPEYIGRXY%22%2C%22type%22%3A%22paper-conference%22%2C%22abstract%22%3A%22Since%20the%20notion%20of%20software%20aging%20was%20introduced%20thirteen%20years%20ago%2C%20the%20interest%20in%20this%20phenomenon%20has%20been%20increasing%20from%20both%20academia%20and%20industry.%20The%20majority%20of%20the%20research%20efforts%20in%20studying%20software%20aging%20have%20focused%20on%20understanding%20its%20effects%20theoretically%20and%20empirically.%20However%2C%20conceptual%20aspects%20related%20to%20the%20foundation%20of%20this%20phenomenon%20have%20not%20been%20covered%20in%20the%20literature.%20This%20paper%20discusses%20foundational%20aspects%20of%20the%20software%20aging%20phenomenon%2C%20introducing%20new%20concepts%20and%20interconnecting%20them%20with%20the%20current%20body%20of%20knowledge%2C%20in%20order%20to%20compose%20a%20base%20taxonomy%20for%20the%20software%20aging%20research.%20Three%20real%20case%20studies%20are%20presented%20with%20the%20purpose%20of%20exemplifying%20many%20of%20the%20concepts%20discussed.%22%2C%22container-title%22%3A%222008%20IEEE%20International%20Conference%20on%20Software%20Reliability%20Engineering%20Workshops%20(ISSRE%20Wksp)%22%2C%22DOI%22%3A%2210.1109%2FISSREW.2008.5355512%22%2C%22event-place%22%3A%22Seattle%2C%20WA%2C%20USA%22%2C%22event-title%22%3A%222008%20IEEE%20International%20Conference%20on%20Software%20Reliability%20Engineering%20Workshops%2C%20ISSRE%20Wksp%22%2C%22ISBN%22%3A%22978-1-4244-3416-9%22%2C%22language%22%3A%22en-US%22%2C%22page%22%3A%221-6%22%2C%22publisher%22%3A%22IEEE%22%2C%22publisher-place%22%3A%22Seattle%2C%20WA%2C%20USA%22%2C%22title%22%3A%22The%20fundamentals%20of%20software%20aging%22%2C%22URL%22%3A%22http%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F5355512%2F%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Grottke%22%2C%22given%22%3A%22Michael%22%7D%2C%7B%22family%22%3A%22Matias%22%2C%22given%22%3A%22Rivalino%22%7D%2C%7B%22family%22%3A%22Trivedi%22%2C%22given%22%3A%22Kishor%20S.%22%7D%5D%2C%22accessed%22%3A%7B%22date-parts%22%3A%5B%5B%222022%22%2C6%2C29%5D%5D%7D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222008%22%2C11%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>概述：<code>软件老化的基本概念与知识体系</code></p> </div>",C:\Users\tristone\Zotero\storage\DNUWRS4X\Grottke 等 - 2008 - The fundamentals of software aging.pdf,,会议：ISSREW; 验证方法：总结归纳; 分析方式：其他（逻辑分析）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2008 IEEE International Conference on Software Reliability Engineering Workshops, ISSRE Wksp",,,,,,,,,,,,,,,
V26ADKVA,conferencePaper,2008,"Avritzer, Alberto; Cole, Robert G.; Weyuker, Elaine J.",Methods and Opportunities for Rejuvenation in Aging Distributed Software Systems,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,10.1109/ISSREW.2008.5355518,,"In this paper we describe several methods for detecting the need for software rejuvenation in mission critical systems that are subjected to worm infection. We introduce a new software rejuvenation algorithm that tracks both the state of the mission and the customer affecting metric, response time. We evaluate the probability of mission success of several different software rejuvenation algorithms using simulation.",2008-11,2023-01-12 03:37:31,2024-10-07 09:58:02,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：针对蠕虫感染的软件重生</p> <p></p> </div>",C:\Users\tristone\Zotero\storage\4ZELQ6Z2\Avritzer 等 - 2008 - .pdf; C:\Users\tristone\Zotero\storage\YWG7RRGW\Avritzer 等 - 2008 - .pdf; C:\Users\tristone\Zotero\storage\XBIRPSDX\5355518.html,,分析方式：Model-based; 重生层级：非特定的; 老化影响：性能降级; 验证方法：数值分析&比较分析; 会议：ISSREW; 算法：任务感知动态恢复算法; 系统类型：任务关键系统MANETs; 指标：响应时间，任务成功率，重生时间，感染主机比例,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,,,,,,,,,,,,,
HXY2ABR2,conferencePaper,2008,"Okamura, Hiroyuki; Tadashi Dohi",Availability optimization in operational software system with aperiodic time-based software rejuvenation scheme,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,10.1109/ISSREW.2008.5355516,,"This paper discusses an aperiodic time-based rejuvenation policy maximizing the steady-state system availability in operational software system. Under a fixed periodic checkpoint schedule, we develop an algorithm to derive the optimal aperiodic rejuvenation times based on dynamic programming. In numerical examples, the optimal rejuvenation time and its maximum availability are illustrated in the case where the system failure obeys the Weibull distribution.",2008-11,2023-01-10 15:13:54,2024-09-23 12:33:01,,1-6,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B TLDR: An algorithm is developed to derive the optimal aperiodic rejuvenation times based on dynamic programming to maximizing the steady-state system availability in operational software system.,"<div data-schema-version=""8""><p>概述：在固定的周期检查点调度下，开发了一种基于动态规划的非周期恢复时间的算法</p> </div>",C:\Users\tristone\Zotero\storage\BFEZ47TI\5355516.html; C:\Users\tristone\Zotero\storage\397HPJQM\Okamura和Tadashi Dohi - 2008 - Availability optimization in operational software system with aperiodic time-based software rejuvena.pdf; C:\Users\tristone\Zotero\storage\AZ9I4STN\Okamura和Tadashi Dohi - 2008 - Availability optimization in operational software system with aperiodic time-based software rejuvena.pdf,,验证方法：数值分析; 重生层级：非特定的; 老化影响：故障率增加; 系统类型：非特定的; 指标：steady-state availability; 会议：ISSREW; 重生层级：进程; 分析方式：Model-based&other; 模型：动态规划; 其他方式：检查点、存储,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,,,,,,,,,,,,,
W7A9P36P,conferencePaper,2008,"Shetty, Hitesh; Nambiar, Manoj; Kalita, Hemanta",Analysis and application of conditional software rejuvenation — A new approach,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,10.1109/ISSREW.2008.5355522,,"Software aging effects if left uncontrolled are known to cause availability issues. When an application is serving live in production, fixing such issues is close to impossible. Software rejuvenation techniques can be used effectively to avoid failure, but will incur some downtime if a single instance of the application is running. With two instances the system can be engineered in such a way that there is at least one instance running at any time. There may be further reduction in operating expenses if an intelligent program can take charge of executing rejuvenation tasks as required. This paper describes the implementation of such closed loop software rejuvenation in a real world application and the resulting improvement in availability thereof.",2008-11,2023-01-12 03:43:12,2024-09-23 12:24:35,,1-5,,,,,,,,,,,,,,,,,,IEEE Xplore,,CCF: B,"<div data-schema-version=""8""><p>概述：针对内存泄露以及减少停机时间的web系统重生技术</p> </div>",C:\Users\tristone\Zotero\storage\XAW7PMTI\5355522.html; C:\Users\tristone\Zotero\storage\7KDPS7SZ\Shetty 等 - 2008 - Analysis and application of conditional software rejuvenation — A new approach.pdf; C:\Users\tristone\Zotero\storage\C8RFVP5Q\Shetty 等 - 2008 - Analysis and application of conditional software rejuvenation — A new approach.pdf,,老化影响：非特定的; 重生层级：非特定的; 分析方式：Hybrid; 会议：ISSREW; 验证方法：实验实证; 模型：CTMC; 系统类型：WDMS(web based document management system); 指标：停机时间，内存（阈值）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 IEEE International Conference on Software Reliability Engineering Workshops (ISSRE Wksp),,,,,,,,,,,,,,,
3NJDJF75,conferencePaper,2008,"Jia, Yun-Fei; Zhao, Lei; Cai, Kai-Yuan",A Nonlinear Approach to Modeling of Software Aging in a Web Server,2008 15th Asia-Pacific Software Engineering Conference,978-0-7695-3446-6,,10.1109/APSEC.2008.38,http://ieeexplore.ieee.org/document/4724534/,"Software aging refers to the phenomenon that the performance degradation, increasing failure rate or massive resource usage demonstrated in long-running software systems such as web servers. It was reported that software aging has a significant relationship with resource usage. To study the software aging phenomenon in web servers, we built an experimental platform with a server and multiple clients to collect the data of system resource usage on the server. In this paper, we present several experiments based on the platform and study software aging phenomenon of a widely used web server software system - the Apache HTTP server. Some repeatable software aging phenomena are observed in our experiments. The process of software aging is shown to be nonlinear and chaotic. In order to better present the nonlinear interplay of various resource parameters of web server and forecast resource exhaustion, a nonlinear dynamic model of software aging is constructed to formulate software aging process.",2008,2023-01-10 08:40:12,2024-09-24 02:01:32,2023-01-10 08:40:12,77-84,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Beijing, China CCF: C","<div data-schema-version=""8""><p>概述：<code>通过实验观察Apache HTTP服务器的软件老化现象反演出软件老化的非线性动态模型</code></p> </div>",C:\Users\tristone\Zotero\storage\X6Z78MIN\Jia 等 - 2008 - A Nonlinear Approach to Modeling of Software Aging in a Web Server.pdf; ,https://www.semanticscholar.org/paper/A-Nonlinear-Approach-to-Modeling-of-Software-Aging-Jia-Zhao/ae6e32f2a346a31719576402537ec03e1490d8a3,老化影响：资源消耗; 系统类型：web服务器（Apache）; 会议：APSEC; 模型：非线性动态模型; 验证方法：实验实证&对比分析&仿真模拟; 指标：response time，available memory，cache，buffer，averageload，period；CPU使用率、内存使用率和I/O频率（平均负载、缓冲区和周期）; 分析方式：现象分析&Measurement-based（统计）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 15th Asia-Pacific Software Engineering Conference,,,,,,,,,,,,,,,
328FH43S,conferencePaper,2008,"Koutras, V. P.; Platis, A. N.",Modeling Perfect and Minimal Rejuvenation for Client Server Systems with Heterogeneous Load,2008 14th IEEE Pacific Rim International Symposium on Dependable Computing,,,10.1109/PRDC.2008.22,,"In the present study a client-server system is considered, which experiences resource degradation as clients' requests increase. Software rejuvenation is performed in order to counteract resource exhaustion. Two different levels of rejuvenation actions are implemented, perfect, and minimal. Moreover the concept of a failed rejuvenation is introduced to model the fact that rejuvenation due to some circumstances cannot be accomplished. As the load of such a system varies from hour to hour but reveals a cyclic behavior from day to day, different rejuvenation policies for each period of the day are proposed using a cyclic non-homogeneous Markov (CNHM) model. As a measure of performance, the steady-state expected downtime cost is considered. Additionally, to set off the need of CNHM modeling, the system is also modeled by a Homogeneous Markov Chain (HMC) and the performance results are compared.",2008-12,2023-01-09 11:55:54,2024-10-10 01:33:15,,95-103,,,,,,,,,,,,,,,,,,IEEE Xplore,,,,C:\Users\tristone\Zotero\storage\5ETLNAPS\4725284.html; C:\Users\tristone\Zotero\storage\J8D4ITGR\Koutras和Platis - 2008 - Modeling Perfect and Minimal Rejuvenation for Client Server Systems with Heterogeneous Load.pdf,,老化影响：资源消耗; 重生层级：非特定的; 分析方式：Model-based&rej; 验证方法：数值分析&比较分析; 系统类型：client-server type system; 会议：PRDC; 模型：CNHM; 指标：工作负载；steady-state expected downtime cost; 重生策略：最小重生&完美重生,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2008 14th IEEE Pacific Rim International Symposium on Dependable Computing,,,,,,,,,,,,,,,
AL8MECH5,conferencePaper,2007,"Rinsaka, Koichiro; Dohi, Tadashi",A Faster Estimation Algorithm for Periodic Preventive Rejuvenation Schedule Maximizing System Availability,Service Availability,978-3-540-72735-4 978-3-540-72736-1,,10.1007/978-3-540-72736-1_9,http://link.springer.com/10.1007/978-3-540-72736-1_9,"It is of great importance to perform preventive rejuvenation of software systems with service degradation. In this paper we develop a faster estimation algorithm for the optimal periodic rejuvenation schedule which maximizes the steady-state system availability. In the case with unknown system failure time distribution, a non-parametric estimation approach based on the empirical distribution of system failure time has been proposed in the literature, but often failed to obtain the exact estimates for the small sample cases. We improve the existing availability estimation algorithm in terms of convergence speed and derive the more eﬀective estimation scheme based on the kernel density of system failure time. Throughout simulation experiments, the proposed estimation scheme is compared with the existing approach and can be validated in the sense of asymptotic optimality.",2007,2023-01-09 12:18:23,2024-08-14 07:50:57,2023-01-09 12:18:23,94-109,,,4526.0,,,,,,,,Springer Berlin Heidelberg,"Berlin, Heidelberg",en,,,,,DOI.org (Crossref),,Series Title: Lecture Notes in Computer Science,"<div data-schema-version=""8""><p>概述：基于核密度估计的最优周期恢复调度</p> </div>",C:\Users\tristone\Zotero\storage\2K29GXDY\Rinsaka和Dohi - 2007 - A Faster Estimation Algorithm for Periodic Preventive Rejuvenation Schedule Maximizing System Availa.pdf,,分析方式：Model-based; 老化影响：非特定的; 重生层级：非特定的; 验证方法：仿真模拟&比较分析; 系统类型：非特定的; 模型：MRGP; 会议：ISAS; 指标：核密度；steady-state availability,,"Malek, Miroslaw; Reitenspieß, Manfred; van Moorsel, Aad","Hutchison, David; Kanade, Takeo; Kittler, Josef; Kleinberg, Jon M.; Mattern, Friedemann; Mitchell, John C.; Naor, Moni; Nierstrasz, Oscar; Rangan, C. Pandu; Steffen, Bernhard; Sudan, Madhu; Terzopoulos, Demetri; Tygar, Doug; Vardi, Moshe Y.; Weikum, Gerhard",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
M8D83XCK,journalArticle,2007,"Wang, Dazhi; Xie, Wei; Trivedi, Kishor S.",Performability analysis of clustered systems with rejuvenation under varying workload,Performance Evaluation,,0166-5316,10.1016/j.peva.2006.04.002,https://www.sciencedirect.com/science/article/pii/S0166531606000381,"This paper develops time-based rejuvenation policies to improve the performability measures of a cluster system. Three rejuvenation policies, namely standard rejuvenation, delayed rejuvenation and mixed rejuvenation, are designed to improve the cluster’s performability under varying workload. Analytic models are built to evaluate these three policies. Since deterministic transitions are used in this paper and analytical models based on homogeneous continuous-time Markov chains (CTMC) do not allow non-exponential distributions, we utilize deterministic and stochastic Petri nets (DSPN), in which the underlying stochastic process is a Markov regenerative process (MRGP), to capture both exponential and deterministic distributions. System performability measures under these three rejuvenation policies are derived based on the DSPN models. We show that the mixed rejuvenation policy achieves the maximum performability among the three policies, which results in 12% improvement on the system throughput in the example shown in this paper. The delayed rejuvenation is better than the standard rejuvenation with respect to the optimal job blocking probability and system throughput. For longer rejuvenation-triggering intervals, the standard rejuvenation yields a better result than delayed rejuvenation, while for shorter rejuvenation-triggering intervals the delayed rejuvenation policy outperforms standard rejuvenation policy.",2007-03-01,2022-03-21 10:35:41,2024-08-14 07:58:01,2022-03-21 10:35:41,247-265,,3.0,64.0,,Perform. Evaluation,,,,,,,,en-US,,,,,2.205,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.0 5年影响因子: 1.1 EI: 是,"<div data-schema-version=""8""><p>不足：模型参数设置比较主观，未用与实际系统</p> </div>; <div data-schema-version=""8""><p>概述：讨论了不同负载下集群系统的三种重生策略</p> </div>",C:\Users\tristone\Zotero\storage\VKXT9NHB\Wang 等 - 2007 - Performability analysis of clustered systems with rejuvenation under varying workload.pdf,,重生层级：节点; 分析方式：Model-based; 验证方法：仿真模拟&比较分析; 老化影响：性能降级; 模型：DSPN; 期刊：PEVA; 系统类型：集群; 指标：吞吐量，工作负载,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UFUYSTVG,journalArticle,2007,"Jiang, Letian; Xu, Guozhi",Modeling and analysis of software aging and software failure,Journal of Systems and Software,,01641212,10.1016/j.jss.2006.06.029,https://linkinghub.elsevier.com/retrieve/pii/S0164121206001750,"Semantic Scholar extracted view of ""Modeling and analysis of software aging and software failure"" by Letian Jiang et al.",2007-04,2023-01-09 12:59:38,2024-08-14 08:12:02,2023-01-09 12:59:38,590-595,,4.0,80.0,,J. Syst. Software,,,,,,,,en,,,,,3.514,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.7 5年影响因子: 3.7 EI: 是 CCF: B,"<div data-schema-version=""8""><p>概述：基于鲁棒局部加权回归的随机事件序列分解算法，将系统资源消耗与资源使用分离，并据此估计老化趋势</p> </div>",C:\Users\tristone\Zotero\storage\8EBUKRTF\Jiang和Xu - 2007 - Modeling and analysis of software aging and software failure.pdf; ,https://www.semanticscholar.org/paper/Modeling-and-analysis-of-software-aging-and-failure-Jiang-Xu/3053d6997bafb7866dac0e39505f0f90aa18c065,期刊：JSS; 模型：SPN; 老化影响：性能降级; 系统类型：服务器; 分析方式：Hybrid; 验证方法：实验实证; 指标：响应时间、内存; 重生层级：网关,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
8FR8NZWZ,journalArticle,2007,"Hoffmann, Guenther A.; Trivedi, Kishor S.; Malek, Miroslaw",A Best Practice Guide to Resource Forecasting for Computing Systems,IEEE Transactions on Reliability,,1558-1721,10.1109/TR.2007.909764,,"Recently, measurement-based studies of software systems have proliferated, reflecting an increasingly empirical focus on system availability, reliability, aging, and fault tolerance. However, it is a nontrivial, error-prone, arduous, and time-consuming task even for experienced system administrators, and statistical analysts to know what a reasonable set of steps should include to model, and successfully predict performance variables, or system failures of a complex software system. Reported results are fragmented, and focus on applying statistical regression techniques to monitored numerical system data. In this paper, we propose a best practice guide for building empirical models based on our experience with forecasting Apache web server performance variables, and forecasting call availability of a real-world telecommunication system. To substantiate the presented guide, and to demonstrate our approach in a step by step manner, we model, and predict the response time, and the amount of free physical memory of an Apache web server system, as well as the call availability of an industrial telecommunication system. Additionally, we present concrete results for a) variable selection where we cross benchmark three procedures, b) empirical model building where we cross benchmark four techniques, and c) sensitivity analysis. This best practice guide intends to assist in configuring modeling approaches systematically for best estimation, and prediction results.",2007-12,2023-01-09 10:32:19,2024-08-14 08:06:15,,615-628,,4.0,56.0,,IEEE Trans. Rel.,,,,,,,,,,,,,5.883,2.0,Conference Name: IEEE Transactions on Reliability JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C,"<div data-schema-version=""8""><p>概述：<code>根据预测Apache web服务器性能变量和预测真实电信系统的呼叫可用性方面的经验提出一个构建经验模型的实践指南</code></p> </div>",C:\Users\tristone\Zotero\storage\GSBKBEKZ\Hoffmann 等 - 2007 - A Best Practice Guide to Resource Forecasting for Computing Systems.pdf; C:\Users\tristone\Zotero\storage\X7IALG5H\4378407.html,,验证方法：实验实证&比较分析; 分析方式：Measurement-based（ML）; 老化影响：非特定的; 模型：多元线性回归（ML）、支持向量机（SVM）、-径向基函数（RBF）和-通用基函数（UBF）; 期刊：TR; 系统类型：web服务器（Apache）、工业电信系统; 指标：响应时间、可用物理内存量以及工业电信系统的呼叫可用性,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
VAVIFWRM,conferencePaper,2007,"Andrzejak, Artur; Silva, Luis",Deterministic Models of Software Aging and Optimal Rejuvenation Schedules,2007 10th IFIP/IEEE International Symposium on Integrated Network Management,,,10.1109/INM.2007.374780,,"Automated modeling of software aging processes is a prerequisite for cost-effective usage of adaptive software rejuvenation as a self-healing technique. We consider the problem of such automated modeling in server-type applications whose performance degrades depending on the ""work"" done since last rejuvenation, for example the number of served requests. This type of performance degradation - caused mostly by resource depletion - is common, as we illustrate in a study of the popular Axis Soap server 1.3. In particular, we propose deterministic models for approximating the leading indicators of aging and an automated procedure for statistical testing of their correctness. We further demonstrate how to use these models for finding optimal rejuvenation schedules under utility functions. Our focus is on the important case that the utility function is the average of a performance metric (such as maximum service rate). We also consider optional SLA constraints under which the performance should never drop below a specified level. Our approach is verified by a study of the aging processes in the Axis Soap 1.3 server. The experiments show that the deterministic modeling technique is appropriate in this case, and that the optimization of rejuvenation schedules can greatly improve the average maximum service rate of an aging application.",2007,2022-06-29 09:43:56,2024-09-23 12:51:02,,159-168,,,,,,,,,,,,,en-US,,,,,,,ISSN: 1573-0077 CCF: C,"<div data-schema-version=""8""><p>不足：未将一些老化指标纳入模型中</p> </div>; <div data-schema-version=""8""><p>概述：提出一种用于部署自适应软件重生的自动化方法，其模型与时间无关</p> </div>; <div data-schema-version=""8""><p>优点：工作到达时间分布及系统故障率具有时间分布的独立性，用途更广泛</p> </div>",C:\Users\tristone\Zotero\storage\NUF6CVDC\Andrzejak和Silva - 2007 - Deterministic Models of Software Aging and Optimal Rejuvenation Schedules.pdf; C:\Users\tristone\Zotero\storage\JCA2EHVW\4258532.html,,重生层级：非特定的; 老化影响：性能降级; 验证方法：实验实证; 方法：曲线拟合，ANOVA; 会议：INM; 模型：Linear function，Polynomial function，Exponential function; 系统类型：web服务器（Apache Axis 1.3）; 指标：工作度量（自上次恢复以来服务的请求数），最大服务速率，free memory，cpu_user，cpu_system，cpu_idle，min_lat，max_lat，avg_lat; 分析方式：Measurement-based（时间序列）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2007 10th IFIP/IEEE International Symposium on Integrated Network Management,,,,,,,,,,,,,,,
BGM45N4B,conferencePaper,2007,"Sundaram, Vinaitheerthan; HomChaudhuri, Sandip; Garg, Sachin; Kintala, Chandra; Bagchi, Saurabh",Improving Dependability Using Shared Supplementary Memory and Opportunistic Micro Rejuvenation in Multi-tasking Embedded Systems,13th Pacific Rim International Symposium on Dependable Computing (PRDC 2007),978-0-7695-3054-3,,10.1109/PRDC.2007.54,http://ieeexplore.ieee.org/document/4459665/,"We propose a comprehensive solution to handle memory-overflow problems in multitasking embedded systems thereby improving their reliability and availability. In particular, we propose two complementary techniques to address two significant causes of memory-overflow problems. The first cause is errors in estimating appropriate stack and heap memory requirement. Our first technique, called shared supplementary memory (SSM), exploits the fact that the probability of multiple tasks requiring more than their estimated amount of memory concurrently is low. Using analytical model and simulations, we show that reliability can be considerably improved when SSM is employed. Furthermore, for the same reliability, SSM reduces total memory requirement by as much as 29.31% The second cause is the presence of coding Mandelbugs, which can cause abnormal memory requirement. To address this, we propose a novel technique, called opportunistic micro-rejuvenation, which when combined with SSM, provide several advantages: preventing critical-time outage, resource frugality and dependability enhancement.",2007-12,2023-01-05 09:20:07,2024-10-08 01:48:22,2023-01-05 09:20:07,240-247,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Melbourne, Australia","<div data-schema-version=""8""><p>概述：通过SSM和机会微重生处理多任务嵌入式系统中的内存溢出问题</p> </div>; <div data-schema-version=""8""><p>缺点：不具有普适性</p> </div>; <div data-schema-version=""8""><p>优点：确定了内存溢出的两个主要原因，即不准确的估计和MandelBugs的存在。我们提出了两种互补的技术，即共享补充记忆（SSM）和机会微再生（OMR），以分别处理不准确的估计和Mandelbugs</p> </div>",; C:\Users\tristone\Zotero\storage\MBMX38DM\Sundaram 等 - 2007 - Improving Dependability Using Shared Supplementary Memory and Opportunistic Micro Rejuvenation in Mu.pdf,https://www.semanticscholar.org/paper/Improving-Dependability-Using-Shared-Supplementary-Sundaram-HomChaudhuri/79bd9f884a73ace1a478cc118b40b5f06dd5e244,验证方法：仿真模拟&数值分析; 模型：SAN; 会议：PRDC; 指标：availability; 老化影响：内存溢出; 系统类型：嵌入式系统; 重生策略：共享补充内存&机会微重生; 分析方式：model&rej; 重生层级：应用程序组件（服务）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,13th Pacific Rim International Symposium on Dependable Computing (PRDC 2007),,,,,,,,,,,,,,,
XJ49H29J,journalArticle,2006,"Hiroyuki, Eto; Dohi, Tadashi",Determining the Optimal Software Rejuvenation Schedule via Semi-Markov Decision Process,Journal of Computer Science,,,10.3844/jcssp.2006.528.534,,"Software rejuvenation is a preventive and proactive maintenance policy that is particularly useful for counteracting the phenomenon of software aging. In this study we consider an operational software system with multiple degradations and derive the optimal software rejuvenation policy minimizing the expected operation cost per unit time in the steady state, via the dynamic programming approach. Especially, we show analytically that the control-limit type of software rejuvenation policy is optimal. A numerical example is presented to make a decision table and to perform the sensitivity analysis of cost parameters.",2006-06-01,2024-07-29 07:19:59,2024-10-12 06:20:10,,,,,2.0,,Journal of Computer Science,,,,,,,,,,,,,ResearchGate,,"TLDR: This study considers an operational software system with multiple degradations and derives the optimal software rejuvenation policy, minimizing the expected operation cost per unit time in the steady state, via the dynamic programming approach.","<div data-schema-version=""8""><p>使用半马尔可夫决策过程（SMDP）来确定软件再生的最优调度。该方法通过动态规划的方法，分析软件系统在不同老化状态下的操作成本，并确定在稳定状态下最小化单位时间期望操作成本的最优再生策略。</p> </div>",C:\Users\tristone\Zotero\storage\8A2KG427\Hiroyuki和Dohi - 2006 - Determining the Optimal Software Rejuvenation Schedule via Semi-Markov Decision Process.pdf; ,https://www.researchgate.net/profile/Tadashi-Dohi/publication/26445616_Determining_the_Optimal_Software_Rejuvenation_Schedule_via_Semi-Markov_Decision_Process/links/53f1a15d0cf2711e0c45dfa8/Determining-the-Optimal-Software-Rejuvenation-Schedule-via-Semi-Markov-Decision-Process.pdf,"分析方式：Model-based; 老化影响：崩溃/挂起故障&性能降级; 模型：CTMC, SMDP; 系统类型：非特定的; 验证方法：数值分析; 指标：操作成本（重生成本和恢复成本）",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IUNEG2QS,conferencePaper,2006,"Avritzer, A.; Bondi, A.; Grottke, M.; Trivedi, K.S.; Weyuker, E.J.","Performance Assurance via Software Rejuvenation: Monitoring, Statistics and Algorithms",International Conference on Dependable Systems and Networks (DSN'06),978-0-7695-2607-2,,10.1109/DSN.2006.58,http://ieeexplore.ieee.org/document/1633532/,"We present three algorithms for detecting the need for software rejuvenation by monitoring the changing values of a customer-affecting performance metric, such as response time. Applying these algorithms can improve the values of this customer-affecting metric by triggering rejuvenation before performance degradation becomes severe. The algorithms differ in the way they gather and use sample values to arrive at a rejuvenation decision. Their effectiveness is evaluated for different sets of control parameters, including sample size, using simulation. The results show that applying the algorithms with suitable choices of control parameters can significantly improve system performance as measured by the response time",2006,2023-01-03 12:15:35,2024-08-14 07:58:07,2023-01-03 12:15:35,435-444,,,,,,Performance Assurance via Software Rejuvenation,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Philadelphia, PA, USA CCF: B","<div data-schema-version=""8""><p>不足：CTMC和FCFS的模型似乎没有用处？</p> </div>; <div data-schema-version=""8""><p>概述：<code>通过监视响应时间来检测软件重生的需要</code></p> <p></p> </div>","C:\Users\tristone\Zotero\storage\9WLYKARP\Avritzer 等 - 2006 - Performance Assurance via Software Rejuvenation Monitoring, Statistics and Algorithms.pdf; ",https://www.semanticscholar.org/paper/Performance-Assurance-via-Software-Rejuvenation%3A-Avritzer-Bondi/67ad79c618ed9d741d5ca407e4c77309a99aa710,会议：DSN; 重生层级：非特定的; 验证方法：仿真模拟&比较分析; 老化影响：性能降级; 分析方式：Hybrid; 指标：响应时间; 模型：CTMC+先来先服务排队模型FCFS; 系统类型：电子商务系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,International Conference on Dependable Systems and Networks (DSN'06),,,,,,,,,,,,,,,
KCRLZ8GX,journalArticle,2006,"Grottke, M.; Li, L.; Vaidyanathan, K.; Trivedi, K.S.",Analysis of Software Aging in a Web Server,IEEE Transactions on Reliability,,0018-9529,10.1109/TR.2006.879609,http://ieeexplore.ieee.org/document/1688077/,"Several recent studies have reported & examined the phenomenon that long-running software systems show an increasing failure rate and/or a progressive degradation of their performance. Causes of this phenomenon, which has been referred to as ""software aging"", are the accumulation of internal error conditions, and the depletion of operating system resources. A proactive technique called ""software rejuvenation"" has been proposed as a way to counteract software aging. It involves occasionally terminating the software application, cleaning its internal state and/or its environment, and then restarting it. Due to the costs incurred by software rejuvenation, an important question is when to schedule this action. While periodic rejuvenation at constant time intervals is straightforward to implement, it may not yield the best results. The rate at which software ages is usually not constant, but it depends on the time-varying system workload. Software rejuvenation should therefore be planned & initiated in the face of the actual system behavior. This requires the measurement, analysis, and prediction of system resource usage. In this paper, we study the development of resource usage in a web server while subjecting it to an artificial workload. We first collect data on several system resource usage & activity parameters. Non-parametric statistical methods are then applied toward detecting & estimating trends in the data sets. Finally, we fit time series models to the data collected. Unlike the models used previously in the research on software aging, these time series models allow for seasonal patterns, and we show how the exploitation of the seasonal variation can help in adequately predicting the future resource usage. Based on the models employed here, proactive management techniques like software rejuvenation triggered by actual measurements can be built",2006-09,2023-01-03 11:04:36,2024-09-24 02:00:47,2023-01-03 11:04:36,411-420,,3.0,55.0,,IEEE Trans. Rel.,,,,,,,,en,,,,,5.883,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C,"<div data-schema-version=""8""><p>不足：人为的负载可能使数据过于理想化</p> </div>; <div data-schema-version=""8""><p>概述：<code>研究web服务器在承受人为工作负载时资源使用的发展并拟合时间序列模型</code></p> </div>; <div data-schema-version=""8""><p>实验：使用httperf来生成两个请求之间具有恒定时间间隔的请求。每个请求从服务器访问大小为500字节、5 kB、50 kB、500 kB和5 MB的五个指定文件之一。访问文件的相应概率分别为0.35、0.5、0.14、0.009和0.001</p> </div>; <div data-schema-version=""8""><p>优点：发现了交换空间的季节性特点，表明季节性结构的简约模型能够充分预测超过1.5周的未来行为</p> </div>",C:\Users\tristone\Zotero\storage\HIE3RY7I\Grottke 等 - 2006 - Analysis of Software Aging in a Web Server.pdf; ,https://www.semanticscholar.org/paper/Analysis-of-Software-Aging-in-a-Web-Server-Grottke-Li/5b79754f33b6ef571cdce848e16ad4ec431ea5e3,老化影响：资源消耗; 期刊：TR; 验证方法：实验实证; 方法：MK、Sen's; 模型：时间序列(AR); 实验时长：25D; 系统类型：web服务器、操作系统（Linux、Apache）; 指标：响应时间、可用物理内存、已用交换空间；回复率、超时错误率; 分析方式：Measurement-based（时间序列）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
XC67AGQE,conferencePaper,2006,"Silva, L.; Madeira, H.; Silva, J.G.",Software Aging and Rejuvenation in a SOAP-based Server,Fifth IEEE International Symposium on Network Computing and Applications (NCA'06),,,10.1109/NCA.2006.51,,"Web-services and service-oriented architectures are gaining momentum in the area of distributed systems and Internet applications. However, as we increase the abstraction level of the applications we are also increasing the complexity of the underlying middleware. In this paper, we present a dependability benchmarking study to evaluate and compare the robustness of some of the most popular SOAP-RPC implementations that are intensively used in the industry. The study was focused on Apache Axis where we have observed a high susceptibility of software aging. Building on these results we propose a new SLA-oriented software rejuvenation technique that proved to be a simple way to increase the dependability of the SOAP-server, the degree of self-healing and to maintain a sustained level of performance in the applications",2006-07,2023-01-04 16:22:59,2024-08-14 07:59:38,,56-65,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>不足：人为定义重生阈值，未比较分析最佳重生阈值</p> </div>; <div data-schema-version=""8""><p>概述：比较不同负载下SOA架构集群服务器的老化现象，并基于阈值进行重生。</p> </div>",C:\Users\tristone\Zotero\storage\4IA8B8MB\1659476.html; C:\Users\tristone\Zotero\storage\EATYX6LW\Silva 等 - 2006 - Software Aging and Rejuvenation in a SOAP-based Server.pdf,,重生层级：节点; 老化影响：性能降级; 系统类型：集群; 指标：吞吐量，工作负载; 验证方法：实验实证; 分析方式：Measurement-based（阈值）; 会议：NCA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Fifth IEEE International Symposium on Network Computing and Applications (NCA'06),,,,,,,,,,,,,,,
CXU7HTNS,conferencePaper,2006,"Matias, Rivalino; F. Filho, Paulo",An Experimental Study on Software Aging and Rejuvenation in Web Servers,30th Annual International Computer Software and Applications Conference (COMPSAC'06),,,10.1109/COMPSAC.2006.25,http://ieeexplore.ieee.org/document/4020077/,"Several studies have been conducted in order to understand the 'software aging' phenomenon. This paper presents the results of an experimental research work, which evaluated the software aging effects on a Web server as well as the performance of a rejuvenation agent. Its main contribution is the identification and analytical validation of the factors that contribute for the Web server aging. We adopted the design of experiment technique (DOE) to characterize the aging phenomenon. The results showed evidence that the 'page type' and 'page size' factors were responsible for over 99% of memory size variation in httpd processes. A 'rejuvenation agent' was implemented and integrated into the server environment to mitigate the aging effects. As a result, the size of the httpd processes could be kept under control and a higher availability and performance of the Web server could be provided, as compared to the scenario without rejuvenation",2006,2023-01-03 08:43:07,2024-10-12 06:22:13,2023-01-03 08:43:07,189-196,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 30th Annual International Computer Software and Applications Conference (COMPSAC'06) ISBN: 9780769526553 Place: Chicaco, IL Publisher: IEEE CCF: C TLDR: Evidence was showed that the 'page type' and 'page size' factors were responsible for over 99% of memory size variation in httpd processes and a higher availability and performance of the Web server could be provided, as compared to the scenario without rejuvenation.","<div data-schema-version=""8""><p>不足：DOE实验取决于指定的因素和水平；老化监控对实验的影响无法排除</p> </div>; <div data-schema-version=""8""><p>概述：<code>通过DOE识别和分析验证导致web服务器老化的因素并实施重生减轻老化影响</code></p> </div>; <div data-schema-version=""8""><p>优点：通过DOE验证了页面大小和页面类型对内存的影响，提供了重生的实现和评估</p> </div>; <div data-schema-version=""8""><p>Apache（httpd）2.0.48用作web服务器。httpd进程的数量设置为200，这允许最多200个同时进行的HTTP连接；为了进行DOE，因素及其各自水平的选择部分基于[12]和[8]。采用了以下因素：页面大小、页面类型和每秒请求率。为了简化，它们将分别称为pgSize、pgType和reqRate。为每个因素定义了两个水平，得出了全因子设计2k[7]。因子的数量由ț表示，其中ț=3导致总共8个治疗。级别定义考虑了两种操作模式。第一种是正常的工作负载，需要50%的有效web服务器容量。第二个，以负载为特征，需要90%的容量。</p> </div>",C:\Users\tristone\Zotero\storage\5BBDMCPQ\Matias和F. Filho - 2006 - An Experimental Study on Software Aging and Rejuvenation in Web Servers.pdf; ,https://www.semanticscholar.org/paper/An-Experimental-Study-on-Software-Aging-and-in-Web-Matias-Filho/caf38e01bcf402a9f3e3d58bde83eda9c46dfd96,方法：DOE; 分析方式：度量&Measurement-based（阈值）&rej; 会议：COMPSAC; 老化影响：内存泄漏; 实验时长：8h/次; 系统类型：web服务器（Apache）; 验证方法：实验实证&比较分析; 阈值：450 megabytes; 指标：页面类型、页面大小; 重生层级：OS component,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YDTYDRAY,conferencePaper,2005,"Grottke, Michael; Trivedi, Kishor S.",A Classification of Software Faults,Supplemental Proc. Sixteenth International IEEE Symposium on Software Reliability Engineering,,,,https://scholar.google.com.hk/scholar?hl=zh-CN&as_sdt=0%2C5&as_vis=1&q=A+Classification+of+Software+Faults&btnG=,,2005,2022-12-27 14:20:33,2024-10-05 08:33:45,2022-12-27 14:20:33,4.19–4.20,,,,,,,,,,,IEEE,,,,,,,,,CCF: B,,C:\Users\tristone\Zotero\storage\5YYVE27G\scholar.html; C:\Users\tristone\Zotero\storage\M3XX6HXW\Grottke和Trivedi - 2005 - A Classification of Software Faults.pdf,,系统类型：非特定的; 分析方式：Classification; 期刊：REAJ; 验证方法：总结归纳,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Sixteenth International IEEE Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
I4IGTATB,journalArticle,2005,"Xie, Wei; Hong, Yiguang; Trivedi, Kishor",Analysis of a two-level software rejuvenation policy,Reliability Engineering & System Safety,,09518320,10.1016/j.ress.2004.02.011,https://linkinghub.elsevier.com/retrieve/pii/S095183200400047X,"A two-level rejuvenation policy for software systems with degradation process is studied. Both full restarts and partial restarts are considered in this rejuvenation strategy. A semi-Markov process model is constructed, and based on its closed-form solution we obtain the system availability as a bivariate function. Then, the rejuvenation policy is analyzed to maximize the system availability. Several different scenarios of software rejuvenation strategy are demonstrated by numerical examples.",2005-01,2022-11-03 11:36:08,2024-10-04 13:59:41,2022-11-03 11:36:08,13-22,,1.0,87.0,,Reliab. Eng. Syst. Saf.,,,,,,,,en,,,,,7.247,1.0,"JCR分区: Q1 中科院分区升级版: 工程技术1区 影响因子: 9.4 5年影响因子: 8.1 EI: 是 TLDR: A two-level rejuvenation policy for software systems with degradation process is studied and a semi-Markov process model is constructed, and based on its closed-form solution the system availability is obtained as a bivariate function.","<div data-schema-version=""8""><p>不足：从结果来看双层级似乎并没有比单层级重生效果更好</p> </div>; <div data-schema-version=""8""><p>概述：首次提出双层级重生策略</p> </div>; <div data-schema-version=""8""><p>优点：提出了双层级重生的策略</p> </div>",C:\Users\tristone\Zotero\storage\7XZWYJQK\Xie 等 - 2005 - Analysis of a two-level software rejuvenation policy.pdf,,老化影响：非特定的; 系统类型：web服务器; 分析方式：Model-based&rej; 验证方法：数值分析&比较分析; 模型：SMP; 期刊：RESS; 指标：free momory level；steady-state availability; 重生策略：双层级重生; 重生层级：应用程序&操作系统,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5TZWYWH2,journalArticle,2005,"Bao, Y.; Sun, X.; Trivedi, K.S.","A Workload-Based Analysis of Software Aging, and Rejuvenation",IEEE Transactions on Reliability,,0018-9529,10.1109/TR.2005.853442,http://ieeexplore.ieee.org/document/1505059/,"We present a hierarchical model for the analysis of proactive fault management in the presence of system resource leaks. At the low level of the model hierarchy is a degradation model in which we use a nonhomogeneous Markov chain to establish an explicit connection between resource leaks, and the failure rate. With the degradation model, we prove that the failure rate is asymptotically constant in the absence of resource leaks, and it is increasing as leaks occur & accumulate, which confirms the resource leaks as an aging source. The proactive fault management (PFM) is modeled at the higher level as a semi-Markov process. The PFM model takes as input the degradation analysis from the low-level model, and allows us to determine optimal rejuvenation schedules with respect to various system measures.",2005-09,2023-01-02 15:53:05,2024-10-03 08:53:37,2023-01-02 15:53:05,541-548,,3.0,54.0,,IEEE Trans. Rel.,,,,,,,,en,,,,,5.883,2.0,"JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 5.0 5年影响因子: 5.2 EI: 是 CCF: C TLDR: With the degradation model, it is proved that the failure rate is asymptotically constant in the absence of resource leaks, and it is increasing as leaks occur & accumulate, which confirms the resource leaks as an aging source.","<div data-schema-version=""8""><p>不足：理想的数值分析</p> </div>; <div data-schema-version=""8""><p>概述：<code>首次运用综合的方法预测最佳重生时机</code></p> </div>; <div data-schema-version=""8""><p>优点：分层结构允许我们将分析分解为首先预测资源泄漏对降级的影响，然后预测主动故障管理和降级对整体系统度量（如可用性）的影响。利用低级别退化模型，我们对资源泄漏导致的系统性能退化及其随时间的累积进行了首次理论验证。引入的两级模型不仅在资源泄漏、老化过程和主动管理之间建立了新的理论联系，还为基于测量数据的进一步低级别建模和分析工作提供了接口。</p> </div>","C:\Users\tristone\Zotero\storage\5CQH7Q2T\Bao 等 - 2005 - A Workload-Based Analysis of Software Aging, and Rejuvenation.pdf; ",https://www.semanticscholar.org/paper/A-workload-based-analysis-of-software-aging%2C-and-Bao-Sun/1689e6a7920f5238b6f9fdd958c09fda85746567,验证方法：数值分析; 重生层级：非特定的; 系统类型：服务器; 期刊：TR; 分析方式：Hybrid; 老化影响：资源泄露（特别是内存泄漏）; 模型：CTMC+SMP; 指标：available memory；,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
498XEGQL,journalArticle,2005,"Vaidyanathan, K.; Trivedi, K.S.",A Comprehensive Model for Software Rejuvenation,IEEE Transactions on Dependable and Secure Computing,,0361-1434,10.1109/TDSC.2005.15,http://ieeexplore.ieee.org/document/1453531/,"Recently, the phenomenon of software aging, one in which the state of the software system degrades with time, has been reported. This phenomenon, which may eventually lead to system performance degradation and/or crash/hang failure, is the result of exhaustion of operating system resources, data corruption, and numerical error accumulation. To counteract software aging, a technique called software rejuvenation has been proposed, which essentially involves occasionally terminating an application or a system, cleaning its internal state and/or its environment, and restarting it. Since rejuvenation incurs an overhead, an important research issue is to determine optimal times to initiate this action. In this paper, we first describe how to include faults attributed to software aging in the framework of Gray’s software fault classification (deterministic and transient), and study the treatment and recovery strategies for each of the fault classes. We then construct a semi-Markov reward model based on workload and resource usage data collected from the UNIX operating system. We identify different workload states using statistical cluster analysis, estimate transition probabilities, and sojourn time distributions from the data. Corresponding to each resource, a reward function is then defined for the model based on the rate of resource depletion in each state. The model is then solved to obtain estimated times to exhaustion for each resource. The result from the semi-Markov reward model are then fed into a higher-level availability model that accounts for failure followed by reactive recovery, as well as proactive recovery. This comprehensive model is then used to derive optimal rejuvenation schedules that maximize availability or minimize downtime cost.",2005-02,2022-02-28 06:15:27,2024-09-19 12:03:49,2022-02-28 06:15:27,124-137,,2.0,2.0,,IEEE Trans. Depend. Sec. Comput.,,,,,,,,en-US,,,,,6.791,2.0,"JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 7.0 5年影响因子: 6.8 EI: 是 CCF: A TLDR: This paper describes how to include faults attributed to software aging in the framework of Gray's software fault classification (deterministic and transient), and builds a semi-Markov reward model based on workload and resource usage data collected from the UNIX operating system.","<div data-schema-version=""8""><p>不足：可能缺乏通用性，一旦更改了配置、工作负载模式甚至系统，模型将不再使用，但该思路是通用的；且该工作中的工作负载不一定能够反映真实的工作负载状态；以更细粒度的方式考虑工作负载、其和资源消耗的关系</p> </div>; <div data-schema-version=""8""><p>概述：<code>基于工作负载和资源使用的老化综合模型</code></p> </div>; <div data-schema-version=""8""><p>优点：通过对测量数据的聚类将工作负载分为8类；验证了不同工作负载对操作系统资源消耗的影响，对不同工作负载状态的资源耗尽进行量化有助于我们获得更好的耗尽率和耗尽时间估计，而不仅仅是基于时间的估计；将基于测量的模型和半马尔科夫奖励模型模型结合，得到一个综合的模型</p> </div>",C:\Users\tristone\Zotero\storage\DNN5GVAI\Vaidyanathan和Trivedi - 2005 - A Comprehensive Model for Software Rejuvenation.pdf,,老化影响：资源消耗; 系统类型：OS（UNIX）; 重生层级：非特定的; 分析方式：Hybrid; 验证方法：实验实证; 期刊：TDSC; 模型：SMRP; 指标：cpuContextSwitch、sysCall、pageOut、pageIn（聚类指标）；usedSwapSpace、realMemoryFree（）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23V83SX5,conferencePaper,2005,"Tai, A.T.; Tso, K.S.; Sanders, W.H.; Chau, S.N.",A performability-oriented software rejuvenation framework for distributed applications,2005 International Conference on Dependable Systems and Networks (DSN'05),,,10.1109/DSN.2005.12,,"While inherent resource redundancies in distributed applications facilitate gracefully degradable services, methods to enhance their dependability may have subtle, yet significant, performance implications, especially when such applications are stateful in nature. In this paper, we present a performability-oriented framework that enables the realization of software rejuvenation in stateful distributed applications. The framework is constructed based on three building blocks, namely, a rejuvenation algorithm, a set of performability metrics, and a performability model. We demonstrate via model-based evaluation that this framework enables error-accumulation-prone distributed applications to deliver services at the best possible performance level, even in environments in which a system is highly vulnerable to failures.",2005-06,2023-01-02 16:13:35,2024-09-19 12:03:54,,570-579,,,,,,,,,,,,,,,,,,IEEE Xplore,,"ISSN: 2158-3927 CCF: B TLDR: A performability-oriented framework that enables the realization of software rejuvenation in stateful distributed applications and demonstrates via model-based evaluation that this framework enables error-accumulation-prone distributed applications to deliver services at the best possible performance level, even in environments in which a system is highly vulnerable to failures.","<div data-schema-version=""8""><p>不足：缺乏检测事先未知的故障前条件的能力</p> </div>; <div data-schema-version=""8""><p>概述：针对分布式应用程序的重生框架</p> </div>; <div data-schema-version=""8""><p>优点：当观察到的系统事件或观察到的事件组合与预定义模式匹配时，将引发异常以激活恢复过程，是一种高精度的检测机制</p> </div>",C:\Users\tristone\Zotero\storage\ZPF4UCCT\1467831.html; C:\Users\tristone\Zotero\storage\BDHVE5DR\Tai 等 - 2005 - A performability-oriented software rejuvenation framework for distributed applications.pdf,,会议：DSN; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 分析方式：Hybrid; 模型：SAN; 系统类型：分布式应用程序; 指标：副本故障率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2005 International Conference on Dependable Systems and Networks (DSN'05),,,,,,,,,,,,,,,
LZZUJHVT,conferencePaper,2004,"Candea, G.; Kawamoto, Shinichi; Fujiki, Yuichi; Friedman, Greg; Fox, A.",Microreboot - A Technique for Cheap Recovery,6th Symposium on Operating Systems Design & Implementation (OSDI 04),,,,https://www.semanticscholar.org/paper/Microreboot-A-Technique-for-Cheap-Recovery-Candea-Kawamoto/bbcb4f6ca45e14c3a7e4fa674e3778dbe2fd3d78,"A significant fraction of software failures in large-scale Internet systems are cured by rebooting, even when the exact failure causes are unknown. However, rebooting can be expensive, causing nontrivial service disruption or downtime even when clusters and failover are employed. In this work we use separation of process recovery from data recovery to enable microrebooting - a fine-grain technique for surgically recovering faulty application components, without disturbing the rest of the application.    We evaluate microrebooting in an Internet auction system running on an application server. Microreboots recover most of the same failures as full reboots, but do so an order of magnitude faster and result in an order of magnitude savings in lost work. This cheap form of recovery engenders a new approach to high availability: microreboots can be employed at the slightest hint of failure, prior to node failover in multi-node clusters, even when mistakes in failure detection are likely; failure and recovery can be masked from end users through transparent call-level retries; and systems can be rejuvenated by parts, without ever being shut down.",2004-06-02,2023-01-05 10:17:41,2024-10-03 08:55:52,2023-01-05 10:17:41,,,,,,,,,,,,USENIX Association,"San Francisco, CA",,,,,,Semantic Scholar,,CCF: A,"<div data-schema-version=""8""><p>概述：将过程恢复与数据恢复分离开以实现应用程序组件的微重生</p> </div>",C:\Users\tristone\Zotero\storage\R2I5NM4U\Candea 等 - 2004 - Microreboot - A Technique for Cheap Recovery.pdf; ,https://www.semanticscholar.org/paper/Microreboot-A-Technique-for-Cheap-Recovery-Candea-Kawamoto/bbcb4f6ca45e14c3a7e4fa674e3778dbe2fd3d78,验证方法：实验实证&比较分析; 老化影响：非特定的; 分析方式：rej; 会议：OSDI; 实验方式：故障注入; 系统类型：web服务器（J2EE基础架构）&集群系统; 指标：Client-perceived availability; 重生策略：进程恢复与数据恢复分离的微重生; 重生层级：app component,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,USENIX Symposium on Operating Systems Design and Implementation,,,,,,,,,,,,,,,
BRI7UYHU,conferencePaper,2004,"Wei Xie; Yiguang Hong; Trivedi, K.S.",Software rejuvenation policies for cluster systems under varying workload,"10th IEEE Pacific Rim International Symposium on Dependable Computing, 2004. Proceedings.",978-0-7695-2076-6,,10.1109/PRDC.2004.1276563,http://ieeexplore.ieee.org/document/1276563/,"We analyze two software rejuvenation policies of cluster server systems under varying workload, called fixed rejuvenation and delayed rejuvenation. In order to achieve a higher average throughput, we propose the delayed rejuvenation policy, which postpones the rejuvenation of individual nodes until off-peak hours. Analytic models using the well known paradigm of Markov chains are used. Since the size of the Markov model is nontrivial, automated specification generation, and the solution via stochastic Petri nets is utilized. Deterministic time to trigger rejuvenation is approximated by a 20-stage Erlangian distribution. Based on the numerical solutions of the models, we find that under the given context, although the fixed rejuvenation occasionally yields a higher throughput, the delayed rejuvenation policy seems to outperform fixed rejuvenation policy by up to 11%. We also compare the steady-state system availabilities of these two rejuvenation policies.",2004,2023-01-02 14:12:40,2024-10-03 08:55:55,2023-01-02 14:12:40,122-129,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Papeete, Tahiti, French Polynesia TLDR: Under the given context, although the fixed rejuvenation occasionally yields a higher throughput, the delayed rejuvenation policy seems to outperform fixed rejuvenations policy by up to 11%.","<div data-schema-version=""8""><p>不足：理想的数值分析</p> </div>; <div data-schema-version=""8""><p>概述：<code>比较不同负载下集群服务器系统固定重生和延迟重生策略</code></p> </div>; <div data-schema-version=""8""><p>优点：考虑在非高峰的情况下重生的延迟重生策略，并与固定重生策略进行了对比</p> </div>",; C:\Users\tristone\Zotero\storage\UR4RUI6B\Wei Xie 等 - 2004 - Software rejuvenation policies for cluster systems under varying workload.pdf,https://www.semanticscholar.org/paper/Software-rejuvenation-policies-for-cluster-systems-Xie-Hong/eaaa8d1decb7c4688262ddaf850bdf2a700b9428,重生层级：节点; 分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析&比较分析; 模型：SRN; 系统类型：cluster system; 会议：PRDC; 指标：steady-state availability，throughput; 重生策略：固定重生、延迟重生,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"10th IEEE Pacific Rim International Symposium on Dependable Computing, 2004.",,,,,,,,,,,,,,,
KSQ5LJ3Z,journalArticle,2003,"Ghoneim, Salma A.",Evaluation of the DRM and the Time for Preventive Maintenance for Aging Software,Software Quality Journal,,09639314,10.1023/A:1023636112886,http://link.springer.com/10.1023/A:1023636112886,"An attempt to capture software aging and specify when to do preventive maintenance (PM) is presented in this paper. A composite measure termed the DRM, Deteriorating Response Measure, is defined. It is based on the analysis of the deteriorating speed of the software against time and load. This speed is characterized as follows: (1) It decays with increased load. (2) It does not increase again when the load decreases, this indicates “loss of elasticity.” The DRM is mathematically formulated based on a queueing system model.Specifying when to do preventive maintenance depends on the decision maker's perspective of the manifestation of aging. It is tried here to formalize this dependence. Three degrading performance metrics are defined for a DRM: (1) Decaying restored speed value. (2) Increasing speed offset ratio (recoverability index). (3) Increasing operation interval offset. These metrics can be used singly or aggregately in a DRM to specify when to do preventive maintenance. Results of model testing are also shown.This work can be part of an on-line procedure that calculates performance indexes for a server type software system like a web browser, an operating system, a database, and helps in the decision to do preventive maintenance for aging software.",2003,2023-01-04 07:47:00,2024-09-23 13:00:27,2023-01-04 07:47:00,57-75,,1.0,11.0,,Software Qual. J.,,,,,,,,,,,,,1.813,4.0,JCR分区: Q3 中科院分区升级版: 计算机科学3区 影响因子: 1.7 5年影响因子: 1.9 EI: 是 CCF: C,"<div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FKSQ5LJ3Z%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FKSQ5LJ3Z%22%2C%22type%22%3A%22article-journal%22%2C%22abstract%22%3A%22An%20attempt%20to%20capture%20software%20aging%20and%20specify%20when%20to%20do%20preventive%20maintenance%20(PM)%20is%20presented%20in%20this%20paper.%20A%20composite%20measure%20termed%20the%20DRM%2C%20Deteriorating%20Response%20Measure%2C%20is%20defined.%20It%20is%20based%20on%20the%20analysis%20of%20the%20deteriorating%20speed%20of%20the%20software%20against%20time%20and%20load.%20This%20speed%20is%20characterized%20as%20follows%3A%20(1)%20It%20decays%20with%20increased%20load.%20(2)%20It%20does%20not%20increase%20again%20when%20the%20load%20decreases%2C%20this%20indicates%20%E2%80%9Closs%20of%20elasticity.%E2%80%9D%20The%20DRM%20is%20mathematically%20formulated%20based%20on%20a%20queueing%20system%20model.Specifying%20when%20to%20do%20preventive%20maintenance%20depends%20on%20the%20decision%20maker's%20perspective%20of%20the%20manifestation%20of%20aging.%20It%20is%20tried%20here%20to%20formalize%20this%20dependence.%20Three%20degrading%20performance%20metrics%20are%20defined%20for%20a%20DRM%3A%20(1)%20Decaying%20restored%20speed%20value.%20(2)%20Increasing%20speed%20offset%20ratio%20(recoverability%20index).%20(3)%20Increasing%20operation%20interval%20offset.%20These%20metrics%20can%20be%20used%20singly%20or%20aggregately%20in%20a%20DRM%20to%20specify%20when%20to%20do%20preventive%20maintenance.%20Results%20of%20model%20testing%20are%20also%20shown.This%20work%20can%20be%20part%20of%20an%20on-line%20procedure%20that%20calculates%20performance%20indexes%20for%20a%20server%20type%20software%20system%20like%20a%20web%20browser%2C%20an%20operating%20system%2C%20a%20database%2C%20and%20helps%20in%20the%20decision%20to%20do%20preventive%20maintenance%20for%20aging%20software.%22%2C%22call-number%22%3A%224%22%2C%22container-title%22%3A%22Software%20Quality%20Journal%22%2C%22DOI%22%3A%2210.1023%2FA%3A1023636112886%22%2C%22ISSN%22%3A%2209639314%22%2C%22issue%22%3A%221%22%2C%22journalAbbreviation%22%3A%22Software%20Qual.%20J.%22%2C%22note%22%3A%22JCR%E5%88%86%E5%8C%BA%3A%20Q3%5Cn%E4%B8%AD%E7%A7%91%E9%99%A2%E5%88%86%E5%8C%BA%E5%8D%87%E7%BA%A7%E7%89%88%3A%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A63%E5%8C%BA%5Cn%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%3A%201.7%5Cn5%E5%B9%B4%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90%3A%201.9%5CnEI%3A%20%E6%98%AF%5CnCCF%3A%20C%22%2C%22page%22%3A%2257-75%22%2C%22source%22%3A%221.813%22%2C%22title%22%3A%22Evaluation%20of%20the%20DRM%20and%20the%20Time%20for%20Preventive%20Maintenance%20for%20Aging%20Software%22%2C%22URL%22%3A%22http%3A%2F%2Flink.springer.com%2F10.1023%2FA%3A1023636112886%22%2C%22volume%22%3A%2211%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Ghoneim%22%2C%22given%22%3A%22Salma%20A.%22%7D%5D%2C%22accessed%22%3A%7B%22date-parts%22%3A%5B%5B%222023%22%2C1%2C4%5D%5D%7D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222003%22%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>概述：提出老化软件的恶化响应度量DRM，基于在运行时间和负载变化中的性能指标衡量老化程度，并以排队模型分析老化和重生时间。</p> <p><span class=""highlight"" data-annotation=""%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FHVBWXIW9%22%2C%22pageLabel%22%3A%2259%22%2C%22position%22%3A%7B%22pageIndex%22%3A2%2C%22rects%22%3A%5B%5B118.349%2C236.229%2C477.063%2C245.812%5D%2C%5B118.349%2C224.11%2C476.968%2C233.692%5D%2C%5B118.349%2C211.99%2C477.028%2C221.572%5D%2C%5B118.349%2C199.749%2C477.09%2C209.332%5D%2C%5B118.349%2C187.63%2C477.216%2C197.212%5D%2C%5B118.349%2C175.51%2C477.094%2C185.092%5D%2C%5B118.349%2C163.27%2C477.078%2C172.852%5D%2C%5B118.349%2C151.15%2C477.143%2C160.732%5D%2C%5B118.349%2C138.909%2C304.78%2C148.492%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FKSQ5LJ3Z%22%5D%2C%22locator%22%3A%2259%22%7D%7D"">“In the literature, no distinction was made between the mechanisms of the policies; all were handled in the context of fault repair actions. Practically, it is difficult to make a clear-cut definition for repair actions and maintenance actions. They are more distinguishable in hardware systems than in software systems. In the latter, most available system actions can be implemented for both purposes. For example, garbage collection in general can be done on-the-fly as a repair action when a big delay is inflicted on running users. If it is done on a periodic basis as a mechanism to prevent this delay, it belongs to maintenance actions. System capacity (maximum speed) restoration (Avizienis, 1985) also belongs to both types.”</span> <span class=""citation"" data-citation=""%7B%22citationItems%22%3A%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FKSQ5LJ3Z%22%5D%2C%22locator%22%3A%2259%22%7D%5D%2C%22properties%22%3A%7B%7D%7D"">(<span class=""citation-item"">Ghoneim, 2003, p. 59</span>)</span></p> </div>",C:\Users\tristone\Zotero\storage\HVBWXIW9\Ghoneim - 2003 - Evaluation of the DRM and the Time for Preventive Maintenance for Aging Software.pdf; ,https://www.semanticscholar.org/paper/Evaluation-of-the-DRM-and-the-Time-for-Preventive-Ghoneim-Fahmy/00c27a6d6925c2c044b5c923a5e8b870640c9e9b,验证方法：数值分析; 重生层级：非特定的; 系统类型：非特定的; 老化影响：性能降级; 分析方式：度量&Model-based; 模型：排队模型; 期刊：SQJ; 指标：恶化响应度量DRM（软件随时间和负载的恶化速度）；衰减恢复速度值、可恢复性指数、增加操作间隔偏移,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UNYFBUJF,conferencePaper,2003,"Shereshevsky, M.; Crowell, J.; Cukic, B.; Gandikota, V.; Yan Liu",Software aging and multifractality of memory resources,"2003 International Conference on Dependable Systems and Networks, 2003. Proceedings.",978-0-7695-1952-4,,10.1109/DSN.2003.1209987,http://ieeexplore.ieee.org/document/1209987/,"We investigate the dynamics of monitored memory resource utilizations in an operating system under stress using quantitative methods of fractal analysis. In the experiments, we recorded the time series representing various memory related parameters of the operating system. We observed that parameters demonstrate clear multifractal behavior. The degree of fractality of these time series tends to increase as the system workload increases. We conjecture that the H¨ older exponent that measures the local rate of fractality may be used as a quantitative measure of software aging. We propose a simple proactive computer crash avoidance strategy based on the online fractal analysis of system memory resource observations.",2003,2022-12-31 14:05:10,2024-10-03 08:55:37,2022-12-31 14:05:10,721-730,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: San Francisco, CA, USA CCF: B TLDR: A simple proactive computer crash avoidance strategy is proposed based on the online fractal analysis of system memory resource observations and it is conjecture that the H¨ older exponent that measures the local rate of fractality may be used as a quantitative measure of software aging.","<div data-schema-version=""8""><p>不足：无法排除监控对系统性能的影响；实验设置简单，无法保证在不同负载下的适用性；</p> </div>; <div data-schema-version=""8""><p>概述：<code>基于系统内存资源观测的在线分形分析主动崩溃避免策略</code></p> </div>; <div data-schema-version=""8""><p>优点：首次尝试用分形分析的方法解决老化度量的问题，并给出了很好的示例</p> </div>",; C:\Users\tristone\Zotero\storage\IXTR892B\Shereshevsky 等 - 2003 - Software aging and multifractality of memory resources.pdf,https://www.semanticscholar.org/paper/Software-aging-and-multifractality-of-memory-Shereshevsky-Crowell/a3010fdeb993e7bff51adc3e1b77b63c1849bd3c,会议：DSN; 分析方式：Measurement-based; 老化影响：崩溃/挂起故障; 系统类型：非特定的; 验证方法：实验实证; 重生层级：操作系统; 方法：分形分析（统计）; 指标：局部Holder指数，内存利用率（available bytes，pool paged allocs，system cache resident bytes）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2003 International Conference on Dependable Systems and Networks, 2003.",,,,,,,,,,,,,,,
J6ESK68H,conferencePaper,2003,"Yujuan Bao; Xiaobai Sun; Trivedi, K.S.",Adaptive software rejuvenation: degradation model and rejuvenation scheme,"2003 International Conference on Dependable Systems and Networks, 2003. Proceedings.",978-0-7695-1952-4,,10.1109/DSN.2003.1209934,http://ieeexplore.ieee.org/document/1209934/,"We present a framework of adaptive estimation and rejuvenation of software system performance in the presence of aging sources. The framework speciﬁes that a degradation model not only describe an aging process but also enable the adaptation of model-based performance estimates to on-line measurements of data pertaining to the aging process. The adaptive estimation uses model-based a priori estimation and obtains a posteriori estimation based on the data measurements. With the adaptive estimation, the rejuvenation policy determines the time epochs for data collection and rejuvenation according to system dynamics. In the speciﬁc context of resource leaks previously assumed to lead to aging, we present a non-homogeneous Markov model to explicitly establish a connection between resource leaks and the failure rate. We demonstrate an increasing failure rate in the presence of resource leaks.",2003,2022-12-09 09:18:31,2024-10-03 08:55:46,2022-12-09 09:18:31,241-248,,,,,,Adaptive software rejuvenation,,,,,IEEE,"San Francisco, CA, USA",en,,,,,DOI.org (Crossref),,"CCF: B TLDR: This work presents a non-homogeneous Markov model to explicitly establish a connection between resource leaks and the failure rate, and demonstrates an increasing failure rate in the presence of resource leaks.","<div data-schema-version=""8""><p>不足：理想的数值实验；只考虑了内存泄漏对故障率的影响，没有考虑复杂的系统情况</p> </div>; <div data-schema-version=""8""><p>概述：<code>提出一个自适应估计并恢复软件系统性能的框架</code></p> </div>; <div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FJ6ESK68H%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FJ6ESK68H%22%2C%22type%22%3A%22paper-conference%22%2C%22abstract%22%3A%22We%20present%20a%20framework%20of%20adaptive%20estimation%20and%20rejuvenation%20of%20software%20system%20performance%20in%20the%20presence%20of%20aging%20sources.%20The%20framework%20speci%EF%AC%81es%20that%20a%20degradation%20model%20not%20only%20describe%20an%20aging%20process%20but%20also%20enable%20the%20adaptation%20of%20model-based%20performance%20estimates%20to%20on-line%20measurements%20of%20data%20pertaining%20to%20the%20aging%20process.%20The%20adaptive%20estimation%20uses%20model-based%20a%20priori%20estimation%20and%20obtains%20a%20posteriori%20estimation%20based%20on%20the%20data%20measurements.%20With%20the%20adaptive%20estimation%2C%20the%20rejuvenation%20policy%20determines%20the%20time%20epochs%20for%20data%20collection%20and%20rejuvenation%20according%20to%20system%20dynamics.%20In%20the%20speci%EF%AC%81c%20context%20of%20resource%20leaks%20previously%20assumed%20to%20lead%20to%20aging%2C%20we%20present%20a%20non-homogeneous%20Markov%20model%20to%20explicitly%20establish%20a%20connection%20between%20resource%20leaks%20and%20the%20failure%20rate.%20We%20demonstrate%20an%20increasing%20failure%20rate%20in%20the%20presence%20of%20resource%20leaks.%22%2C%22container-title%22%3A%222003%20International%20Conference%20on%20Dependable%20Systems%20and%20Networks%2C%202003.%20Proceedings.%22%2C%22DOI%22%3A%2210.1109%2FDSN.2003.1209934%22%2C%22event-place%22%3A%22San%20Francisco%2C%20CA%2C%20USA%22%2C%22event-title%22%3A%222003%20International%20Conference%20on%20Dependable%20Systems%20and%20Networks%2C%202003.%22%2C%22ISBN%22%3A%22978-0-7695-1952-4%22%2C%22language%22%3A%22en%22%2C%22page%22%3A%22241-248%22%2C%22publisher%22%3A%22IEEE%22%2C%22publisher-place%22%3A%22San%20Francisco%2C%20CA%2C%20USA%22%2C%22source%22%3A%22DOI.org%20(Crossref)%22%2C%22title%22%3A%22Adaptive%20software%20rejuvenation%3A%20degradation%20model%20and%20rejuvenation%20scheme%22%2C%22title-short%22%3A%22Adaptive%20software%20rejuvenation%22%2C%22URL%22%3A%22http%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F1209934%2F%22%2C%22author%22%3A%5B%7B%22literal%22%3A%22Yujuan%20Bao%22%7D%2C%7B%22literal%22%3A%22Xiaobai%20Sun%22%7D%2C%7B%22family%22%3A%22Trivedi%22%2C%22given%22%3A%22K.S.%22%7D%5D%2C%22accessed%22%3A%7B%22date-parts%22%3A%5B%5B%222022%22%2C12%2C9%5D%5D%7D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%222003%22%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>优点：通过测量值动态调整估计的故障率，使基于模型的结果更符合真实系统，软件系统的统计性和动态性都被利用起来；提供了资源泄漏和故障率之间的直接联系</p> </div>",C:\Users\tristone\Zotero\storage\6M5BVDUQ\Yujuan Bao 等 - 2003 - Adaptive software rejuvenation degradation model and rejuvenation scheme.pdf,,会议：DSN; 验证方法：数值分析; 重生层级：非特定的; 分析方式：Hybrid; 模型：CTMC; 系统类型：client-server type system; 老化影响：资源泄露（特别是内存泄漏）; 指标：内存泄漏量、故障率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"2003 International Conference on Dependable Systems and Networks, 2003.",,,,,,,,,,,,,,,
ACMK6SDM,conferencePaper,2003,"Suzuki, H.; Dohi, T.; Kaio, N.; Trivedi, K.S.",Maximizing interval reliability in operational software system with rejuvenation,"14th International Symposium on Software Reliability Engineering, 2003. ISSRE 2003.",978-0-7695-2007-0,,10.1109/ISSRE.2003.1251068,http://ieeexplore.ieee.org/document/1251068/,"Software aging often affects the performance of a software system and eventually causes it to fail. A novel approach to handle transient software failures is called software rejuvenation which can be regarded as a preventive and proactive solution that is particularly useful for counteracting the phenomenon of software aging. In this paper, we consider the optimal software rejuvenation policy maximizing the interval reliability in the general semi-Markov framework. We derive analytically the optimal software rejuvenation timing which maximizes the limiting interval reliability or the interval reliability with exponentially distributed operation times. Further, we examine numerically the transient behavior of the interval reliability at an arbitrary operation time. Our results under the interval reliability criteria are extentions of some earlier work, since the interval reliability can be specialized to the pointwise availability and the common reliability function.",2003,2023-01-02 11:56:15,2024-10-12 03:21:07,2023-01-02 11:56:15,479-490,,,,,,,,,,,IEEE,,,,,,,Semantic Scholar,,"Place: Denver, Colorado, USA CCF: B TLDR: This paper derives analytically the optimal software rejuvenation timing which maximizes the limiting interval reliability or the interval reliability with exponentially distributed operation times and examines numerically the transient behavior of the intervals reliability at an arbitrary operation time.","<div data-schema-version=""8""><p>不足：完全的理想的数值实验</p> </div>; <div data-schema-version=""8""><p>概述：<code>基于半马尔可夫的区间可靠性最大化软件重生策略</code></p> </div>; <div data-schema-version=""8""><p>优点：提出了在软件修复后再重生的模型，并比较两种模型的数值分析结果</p> </div>",; C:\Users\tristone\Zotero\storage\IUIEVY96\Suzuki 等 - 2003 - Maximizing interval reliability in operational software system with rejuvenation.pdf,https://www.semanticscholar.org/paper/Maximizing-interval-reliability-in-operational-with-Suzuki-Dohi/04b7e7654de45f8588ad3c1779cd1b4ee5334fe6,分析方式：Model-based; 会议：ISSRE; 老化影响：非特定的; 重生层级：非特定的; 系统类型：非特定的; 验证方法：数值分析&比较分析; 模型：SMP; 指标：区间可靠性,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"14th International Symposium on Software Reliability Engineering, 2003. ISSRE 2003.",,,,,,,,,,,,,,,
N787GDA6,conferencePaper,2002,"Lei Li; Vaidyanathan, K.; Trivedi, K.S.",An approach for estimation of software aging in a Web server,Proceedings International Symposium on Empirical Software Engineering,978-0-7695-1796-4,,10.1109/ISESE.2002.1166929,http://ieeexplore.ieee.org/document/1166929/,"A number of recent studies have reported the phenomenon of ""software aging"", characterized by progressive performance degradation or a sudden hang/crash of a software system due to exhaustion of operating system resources, fragmentation and accumulation of errors. To counteract this phenomenon, a proactive technique called ""software rejuvenation"" has been proposed. This essentially involves stopping the running software, cleaning its internal state and then restarting it. Software rejuvenation, being preventive in nature, begs the question as to when to schedule it. Periodic rejuvenation, while straightforward to implement, may not yield the best results. A better approach is based on actual measurement of system resource usage and activity that detects and estimates resource exhaustion times. Estimating the resource exhaustion times makes it possible for software rejuvenation to be initiated or better planned so that the system availability is maximized in the face of time-varying workload and system behavior. We propose a methodology based on time series analysis to detect and estimate resource exhaustion times due to software aging in a Web server while subjecting it to an artificial workload. We first collect and log data on several system resource usage and activity parameters on a Web server. Time-series ARMA models are then constructed from the data to detect aging and estimate resource exhaustion times. The results are then compared with previous measurement-based models and found to be more efficient and computationally less intensive. These models can be used to develop proactive management techniques like software rejuvenation which are triggered by actual measurements.",2002,2022-12-31 13:32:44,2024-09-24 02:00:06,2022-12-31 13:32:44,91-100,,,,,,,,,,,IEEE Comput. Soc,,,,,,,Semantic Scholar,,"Place: Nara, Japan CCF: B","<div data-schema-version=""8""><p>不足：并没有突出使用ARMA/ARX模型的突出优点和必要性</p> </div>; <div data-schema-version=""8""><p>概述：基于ARMA的web服务器重生策略</p> </div>; <div data-schema-version=""8""><p>优点：我们使用线性回归方法来检测数据集中的趋势，并将该方法与Sen的斜率估计方法进行了比较。这两种方法都表明了软件老化的存在。尽管森氏斜率估计方法对异常值不敏感，并且对缺失数据具有鲁棒性，但线性回归的计算复杂性较低。然后，我们使用ARX模型来估计系统资源的耗尽，并将其与[5]中描述的线性回归和扩展线性回归模型进行比较。与线性回归和扩展线性回归模型相比，ARX模型需要额外的开销来计算观测数据的ACF和PACF，以确定模型的顺序。在我们的案例中，由于Apache服务器数据的非线性性质，需要非线性模型。但一旦建立了ARX模型，它就可以长期用于预测，而无需重新估计模型中的参数。考虑所有因素</p> </div>",C:\Users\tristone\Zotero\storage\9UT6AFAV\Lei Li 等 - 2002 - An approach for estimation of software aging in a Web server.pdf; ,https://www.semanticscholar.org/paper/An-approach-for-estimation-of-software-aging-in-a-Li-Vaidyanathan/5870cae177272fe6a998e5387a4a499b29f6442b,老化影响：资源消耗; 验证方法：实验实证&比较分析; 重生层级：非特定的; 系统类型：web服务器（Apache）; 会议：ISESE; 模型：ARMA; 指标：PhysicalMemoryFree，SwapSpaceUsed，LoadAvg5Min，NumberDiskRequests，PageOutCounter，NewProcesses，ResponseTime; 分析方式：Measurement-based（时间序列）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2002 International Symposium on Empirical Software Engineering,,,,,,,,,,,,,,,
SLFK6P5H,conferencePaper,2002,"Cassidy, K.J.; Gross, K.C.; Malekpour, A.",Advanced pattern recognition for detection of complex software aging phenomena in online transaction processing servers,Proceedings International Conference on Dependable Systems and Networks,,,10.1109/DSN.2002.1028933,,"Software aging phenomena have been recently studied; one particularly complex type is shared memory pool latch contention in large OLTP servers. Latch contention onset leads to severe performance degradation until a manual rejuvenation of the DBMS shared memory pool is triggered. Conventional approaches to automated rejuvenation have failed for latch contention because no single resource metric has been identified that can be monitored to alert the onset of this complex mechanism. The current investigation explores the feasibility of applying an advanced pattern recognition method that is embodied in a commercially available equipment condition monitoring system (SmartSignal eCM/spl trade/) for proactive annunciation of software-aging faults. One hundred data signals are monitored from a large OLTP server, collected at 20-60 sec. intervals over a 5-month period. Results show 13 variables consistently deviate from normal operation prior to a latch event, providing up to 2 hours early warning.",2002-06,2022-03-21 09:19:19,2024-08-23 01:19:33,,478-482,,,,,,,,,,,,,en-US,,,,,,,CCF: B,"<div data-schema-version=""8""><p>概述：探索了利用高级统计模式识别来主动检测可能导致软件老化的初始条件的可行性和实用性</p> </div>; <div data-schema-version=""8""><p>缺点：实验耗时长；对于长期的预警可能较为困难；只聚焦于内存池锁存争用，这类问题究竟属于瞬时性能问题还是老化问题？</p> </div>; <div data-schema-version=""8""><p>优点：验证了在发生锁存争用故障之前的5分钟到2小时内，具有显著的预警能力，无误报警。几个参数在故障发生前反复显示异常信号偏差，特别是与总可用内存、锁存未命中和数据库统计有关</p> </div>; <div data-schema-version=""8""><p>指标：最终认为可能与从可用内存、锁存未命中和数据库统计信息有关</p> </div>",C:\Users\tristone\Zotero\storage\P76M3PEI\Cassidy 等 - 2002 - Advanced pattern recognition for detection of complex software aging phenomena in online transaction.pdf; C:\Users\tristone\Zotero\storage\CPA92P9R\1028933.html,,会议：DSN; 分析方式：Measurement-based（ML）; 验证方法：实验实证; 老化影响：共享内存池锁存争用（latch contention）; 模型：empirical model; 系统类型：数据库系统（OLTP）; 指标：吞吐量、事务延迟、系统负载、队列长度和I/O相关的100多个性能参数; 重生层级：共享内存池刷新,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Proceedings International Conference on Dependable Systems and Networks,,,,,,,,,,,,,,,
M5W7BIE8,journalArticle,2002,"Park, Kiejin; Kim, Sungsoo",Availability analysis and improvement of Active/Standby cluster systems using software rejuvenation,Journal of Systems and Software,,01641212,10.1016/S0164-1212(01)00107-8,https://linkinghub.elsevier.com/retrieve/pii/S0164121201001078,"Semantic Scholar extracted view of ""Availability analysis and improvement of Active/Standby cluster systems using software rejuvenation"" by Kiejin Park et al.",2002-03,2023-03-13 13:52:45,2024-10-04 13:55:18,2023-03-13 13:52:45,121-128,,2.0,61.0,,J. Syst. Software,,,,,,,,en,,,,,3.514,2.0,JCR分区: Q1 中科院分区升级版: 计算机科学2区 影响因子: 3.7 5年影响因子: 3.7 EI: 是 CCF: B TLDR: This paper maps software rejuvenation and switchover states with a semi-Markov process and gets mathematical steady-state solutions of the chain and finds that software rejuvenations can be used to improve the availability of Active/Standby cluster systems.,,C:\Users\tristone\Zotero\storage\LUVAWKFJ\Park和Kim - 2002 - Availability analysis and improvement of ActiveStandby cluster systems using software rejuvenation.pdf; ,https://www.semanticscholar.org/paper/Availability-analysis-and-improvement-of-Active-Park-Kim/28d7a10b85af1a51a30ebba14b7afed0b86d80f2,重生层级：节点; 验证方法：数值分析; 期刊：JSS; 分析方式：Model-based&rej; 模型：SMP; 系统类型：集群系统; 指标：可用性、停机时间; 重生策略：双机热备,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6EIHICFV,conferencePaper,2002,"Vaidyanathan, K.; Selvamuthu, D.; Trivedi, K.S.",Analysis of inspection-based preventive maintenance in operational software systems,"21st IEEE Symposium on Reliable Distributed Systems, 2002. Proceedings.",,,10.1109/RELDIS.2002.1180199,http://ieeexplore.ieee.org/document/1180199/,"Recently, the phenomenon of ""software aging"", one in which the state of a software system gradually degrades with time and eventually leads to performance degradation or crash/hang failure, has been reported. Preventive maintenance of operational software systems is used specifically to counteract this phenomenon. However preventive maintenance incurs an overhead in terms of downtime and cost and this must be traded off with the cost of failures to obtain maximum benefits. We present an analytical model of a software system employing inspection-based preventive maintenance, through a Markov Regenerative Process (MRGP) with a subordinated semi-Markov reward process. Furthermore, we consider preemptive-resume type transitions. The model is solved for steady state as well as transient conditions and expressions for expected downtime and expected cost are derived. Numerical examples are presented to illustrate the applicability of the models. With the help of these models, optimal strategies for preventive maintenance techniques such as ""software rejuvenation"" could be formulated.",2002,2023-01-03 11:45:29,2024-10-12 06:23:27,2023-01-03 11:45:29,286-295,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 21st IEEE Symposium on Reliable Distributed Systems ISBN: 9780769516592 Place: Suita, Japan Publisher: IEEE Comput. Soc TLDR: An analytical model of a software system employing inspection-based preventive maintenance, through a Markov Regenerative Process (MRGP) with a subordinated semi-Markov reward process is presented and optimal strategies for preventive maintenance techniques such as ""software rejuvenation"" could be formulated.","<div data-schema-version=""8""><p>概述：基于MRGP的软件重生模型，分析了操作软件系统中基于检查的预防性维护</p> </div>",; C:\Users\tristone\Zotero\storage\SWQFIZ52\Vaidyanathan 等 - 2002 - Analysis of inspection-based preventive maintenance in operational software systems.pdf,https://www.semanticscholar.org/paper/Analysis-of-inspection-based-preventive-maintenance-Vaidyanathan-Dharmaraja/11cabb77cb11d24df815c66f772bc36230ce8f03,分析方式：Model-based; 老化影响：故障率增加; 模型：MRGP; 期刊：RELDIS; 系统类型：软件系统; 验证方法：仿真模拟&数值分析; 指标：故障率; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
YDLPC7LQ,conferencePaper,2002,"Yun Liu; Trivedi, K.S.; Yue Ma; Han, J.J.; Levendel, H.",Modeling and analysis of software rejuvenation in cable modem termination systems,"13th International Symposium on Software Reliability Engineering, 2002. Proceedings.",,,10.1109/ISSRE.2002.1173239,http://ieeexplore.ieee.org/document/1173239/,"In order to reduce system outages and the associated downtime cost caused by the ""software aging"" phenomenon, we propose to use software rejuvenation as a proactive system maintenance technique deployed in a CMTS (Cable Modem Termination System) cluster system. Different rejuvenation policies are studied from the perspective of cost and availability. To evaluate these policies, stochastic reward net models are developed and solved by SPNP (Stochastic Petri Net Package). Numerical results show that significant improvement in capacity-oriented availability and decrease in downtime cost can be achieved. The optimization of the rejuvenation interval in the time-based approach and the effect of the prediction coverage in the measurement-based approach are also studied in this paper.",2002,2022-12-31 09:54:17,2024-10-12 06:24:42,2022-12-31 09:54:17,159-170,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 13th International Symposium on Software Reliability Engineering ISBN: 9780769517636 Place: Annapolis, MD, USA Publisher: IEEE Comput. Soc CCF: B TLDR: Numerical results show that significant improvement in capacity-oriented availability and decrease in downtime cost can be achieved and the effect of the prediction coverage in the measurement-based approach is studied.","<div data-schema-version=""8""><p>不足：理想的数值示例</p> </div>; <div data-schema-version=""8""><p>概述：基于SRN的CMTS集群系统重生模型</p> </div>; <div data-schema-version=""8""><p>优点：用基于时间的和基于预测的两种策略进行建模和分析</p> </div>",; C:\Users\tristone\Zotero\storage\XGCIKW9X\Yun Liu 等 - 2002 - Modeling and analysis of software rejuvenation in cable modem termination systems.pdf,https://www.semanticscholar.org/paper/Modeling-and-analysis-of-software-rejuvenation-in-Liu-Trivedi/cd78eef515ad562e1d20e190676015f8ace5d983,分析方式：Model-based; 会议：ISSRE; 老化影响：崩溃/挂起故障; 模型：SRN; 系统类型：cluster system（cable modem termination system）; 验证方法：数值分析&比较分析; 指标：downtime cost、system unavailability；; 重生层级：节点,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GGRXDZQD,conferencePaper,2002,"Okamura, Hiroyuki; Miyahara, Satoshi; Dohi, Tadashi",Dependability Analysis of a Client/Server Software System with Rejuvenation,,978-0-7695-1763-6,,10.1109/ISSRE.2002.1173241,https://www.computer.org/csdl/proceedings-article/issre/2002/17630171/12OmNAndidu,"Long running software systems are known to experience  an aging phenomenon called software aging, one in which  the accumulation of errors during the execution of software  leads to performance degradation and eventually results in  failure. To counteract this phenomenon an active fault management  approach, called software rejuvenation, is particularly  useful. It essentially involves gracefully terminating  an application or a system and restarting it in a clean internal  state.  In this paper, we deal with dependability analysis of  a client/server software system with rejuvenation. Three  dependability measures in the server process, steady-state  availability, loss probability of requests and mean response  time on tasks, are derived from the well-known hidden  Markovian analysis under the time-based software rejuvenation  scheme. In numerical examples, we investigate the  sensitivity of some model parameters to the dependability  measures.",2002-11-01,2022-03-16 09:12:42,2024-10-12 03:22:54,2022-03-16 09:12:42,171-171,,,,,,,,,,,IEEE Computer Society,,en-US,,,,,,,"ISSN: 1071-9458 CCF: B TLDR: Three dependability measures in the server process, steady-state availability, loss probability of requests and mean response time on tasks, are derived from the well-known hidden Markovian analysis under the time-based software rejuvenation scheme.","<div data-schema-version=""8""><p>不足：没有实例验证</p> </div>; <div data-schema-version=""8""><p>概述：用隐马尔可夫模型对服务器进行可靠性分析</p> </div>; <div data-schema-version=""8""><p>优点：在Garg等人工作基础上，假设服务器在失效和重生时不会丢失请求（因为有高服务质量的cs软件通常是集群软件，除非请求溢出缓冲区），通过稳定状态可用性、请求丢失概率和任务平均响应时间来计量可靠性</p> </div>",C:\Users\tristone\Zotero\storage\ZN89RUG7\Okamura 等 - 2002 - Dependability Analysis of a ClientServer Software System with Rejuvenation.pdf; C:\Users\tristone\Zotero\storage\BSK6EDXI\12OmNAndidu.html,,"分析方式：Model-based; 会议：ISSRE; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 系统类型：client-server type system; 模型：HMM; 指标：steady-state availability, loss probability of requests and mean response time on tasks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"13th International Symposium on Software Reliability Engineering, 2002. Proceedings.",,,,,,,,,,,,,,,
7N3LFHRB,journalArticle,2001,"Dohi, T.",Estimating Software Rejuvenation Schedules in High-Assurance Systems,The Computer Journal,,"0010-4620, 1460-2067",10.1093/comjnl/44.6.473,https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/44.6.473,"Software rejuvenation is a preventive maintenance technique that has been extensively studied in recent literature. In this paper, we extend the classical result by Huang et al. (1995), and in addition propose a modified stochastic model to generate the software rejuvenation schedule. More precisely, the software rejuvenation models are formulated via the semi-Markov reward process, and the optimal software rejuvenation schedules are derived analytically in terms of the reward rate. In particular, we consider the two special cases: steady-state availability and expected cost per unit time in the steady state. Further, we develop non-parametric algorithms to estimate the optimal software rejuvenation schedules, provided that the statistically complete (unsensored) sample data of failure time is given. In numerical examples, we compare two models from the viewpoints of system availability and economic justification, and examine asymptotic properties for the statistical estimation algorithms.",2001-06-01,2022-12-27 13:39:42,2024-10-12 03:21:16,2022-12-27 13:39:42,473-485,,6.0,44.0,,Comput. J.,,,,,,,,en,,,,,1.762,4.0,"JCR分区: Q2 中科院分区升级版: 计算机科学4区 影响因子: 1.5 5年影响因子: 1.5 EI: 是 CCF: B TLDR: The classical result by Huang et al. (1995) is extended, and a modified stochastic model is proposed to generate the software rejuvenation schedule, which is formulated via the semi-Markov reward process and derived analytically in terms of the reward rate.","<div data-schema-version=""8""><p>不足：理想化的数值分析；非参数模型但是需要很多数据构建这个非参数模型？？？不懂</p> </div>; <div data-schema-version=""8""><p>概述：通过非参数统计算法来估计最佳软件重生时机</p> </div>; <div data-schema-version=""8""><p>优点：在Huang的基础上使用半马尔科夫奖励过程对老化建模，并考虑了可用性模型和成本模型；开发了非参数统计算法来估计最佳软件恢复计划，前提是给出了统计完整（未检测）的故障时间样本数据。在数值示例中，研究了统计估计算法的渐近性质。</p> </div>",C:\Users\tristone\Zotero\storage\7Q4RP8YK\Dohi - 2001 - Estimating Software Rejuvenation Schedules in High-Assurance Systems.pdf; ,https://www.semanticscholar.org/paper/Estimating-Software-Rejuvenation-Schedules-in-Dohi-Goseva-Popstojanova/ecfeeadc4b1bed12c31a0630c03d56012ea521b6,分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 系统类型：非特定的; 模型：SMRP; 期刊：TCJ; 指标：steady-state availability and expected cost per unit time in the steady state,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QLT76WI9,conferencePaper,2001,"Vaidyanathan, Kalyanaraman; Harper, Richard E.; Hunter, Steven W.; Trivedi, Kishor S.",Analysis and implementation of software rejuvenation in cluster systems,Proceedings of the 2001 ACM SIGMETRICS international conference on Measurement and modeling of computer systems,,,10.1145/378420.378434,,,2001,2022-12-27 11:55:43,2024-10-07 11:58:35,,62–71,,,,,,,,,,,,,,,,,,Google Scholar,,CCF: B,"<div data-schema-version=""8""><p>比较分析：基于时间的模型和基于预测的模型（预测资源耗尽），结论是基于预测的更好</p> </div>; <div data-schema-version=""8""><p>不足：使用了一些理想的值，实验也较为理想化，属于实验室实验</p> </div>; <div data-schema-version=""8""><p>概述：基于时间和基于预测的集群系统软件重生</p> </div>; <div data-schema-version=""8""><p>监测指标：对于Windows~操作系统，SRA通过读取注册表性能计数器并收集可用字节、已提交字节、非分页池、分页池、句柄、线程、信号量、互斥量和逻辑磁盘利用率等参数来获取可耗尽资源的数据。对于Linux，代理访问/proc目录结构并收集等效参数，如内存利用率、交换空间、文件描述符、inode和交换空间。所有收集的参数都会登录到磁盘。它们也被存储在存储器中，以准备进行时间到耗尽分析。</p> </div>; <div data-schema-version=""8""><p>优点：考虑了基于时间和基于预测两种不同的重生策略，并进行了比较；考虑了集群系统不同配置下的结果</p> </div>",C:\Users\tristone\Zotero\storage\6ZB4QUTU\378420.html; C:\Users\tristone\Zotero\storage\APCV28J5\Vaidyanathan 等 - 2001 - Analysis and implementation of software rejuvenation in cluster systems.pdf,,老化影响：资源消耗; 指标：cost（rej、nodefail、sysfail）、system unavailability；; 重生层级：节点; 分析方式：Hybrid; 会议：ACM SIGMETRICS; 模型：SRN; 系统类型：cluster system; 验证方法：数值分析&实验实证&比较分析,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
UCUDMKZV,conferencePaper,2001,"Fetzer, C.; Hogstedt, K.",Rejuvenation and failure detection in partitionable systems,Proceedings 2001 Pacific Rim International Symposium on Dependable Computing,,,10.1109/PRDC.2001.992692,http://ieeexplore.ieee.org/document/992692/,"Certain gateways (e.g., some cable or DSL modems) are known to have low reliability and low availability. Most failures of these devices can however be ""fixed"" by rejuvenating the device after a failure has been detected. Such a detection based rejuvenation strategy permits increasing the availability of these gateways. In the considered scenario, rejuvenation is non-trivial since a failure of such a gateway will leave it partitioned away from the network. In particular, network operators that want to rejuvenate these gateways are in a different network partition, and can therefore not initiate a remote rejuvenation. In this paper we propose a failure detection based rejuvenation service and a remote detection service. The rejuvenation service detects and fixes ""soft"" failures automatically (in one partition), and the detection service detects (in another partition) all rejuvenations exactly once, within a bounded amount of time, even when the gateway is rejuvenated consecutively. The detection service also allows the detection of ""hard"" failures, and filtering of notifications of soft failures.",2001,2022-12-29 03:17:37,2024-10-12 06:19:03,2022-12-29 03:17:37,154-161,,,,,,,,,,,,,,,,,,Semantic Scholar,,"Conference Name: 2001 Pacific Rim International Symposium on Dependable Computing ISBN: 9780769514147 Place: Seoul, South Korea Publisher: IEEE Comput. Soc TLDR: A failure detection based rejuvenation service and a remote detection service that detects and fixes ""soft"" failures automatically, and the detection service detects (in another partition) all rejuvenations exactly once, within a bounded amount of time, even when the gateway is rejuvenated consecutively.","<div data-schema-version=""8""><p>不足：好像没有实例验证</p> </div>; <div data-schema-version=""8""><p>概述：提出基于故障检测的网关远程监测和重生服务</p> </div>",C:\Users\tristone\Zotero\storage\Z7QH959K\Fetzer和Hogstedt - 2001 - Rejuvenation and failure detection in partitionable systems.pdf; ,https://www.semanticscholar.org/paper/Rejuvenation-and-failure-detection-in-partitionable-Fetzer-H%C3%B6gstedt/d570901a5cebda3c7e50dc972f86d9b23d4ce8c1,分析方式：rej; 老化影响：连接故障; 模型：timed model; 期刊：PRDC; 系统类型：network management; 验证方法：逻辑推理; 重生层级：网关,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7V2DCR4T,conferencePaper,2001,"Dohi, T.; Danjou, T.; Okamura, H.",Optimal software rejuvenation policy with discounting,Proceedings 2001 Pacific Rim International Symposium on Dependable Computing,978-0-7695-1414-7,,10.1109/PRDC.2001.992684,http://ieeexplore.ieee.org/document/992684/,"Software rejuvenation is a preventive maintenance technique that has been extensively studied in the recent literature. We consider a generalized problem to estimate the optimal software rejuvenation schedule. More precisely, the software rejuvenation model is formulated via the semi-Markov process, and the optimal software rejuvenation schedule which minimizes the expected total discounted cost over an infinite time horizon is derived analytically. Further, we develop a statistically nonparametric algorithm to estimate the optimal software rejuvenation schedule, provided that the complete sample data of failure time is given. In numerical examples, we investigate how the discount factor affects the optimal policy and examine an asymptotic property for the statistical estimation algorithm.",2001,2023-01-02 14:02:28,2024-08-14 07:57:53,2023-01-02 14:02:28,87-94,,,,,,,,,,,IEEE Comput. Soc,,,,,,,Semantic Scholar,,"Place: Seoul, South Korea","<div data-schema-version=""8""><p>概述：基于半马尔可夫的软件重生策略</p> </div>; <div data-schema-version=""8""><p>优点：底层故障时间可以是非参数的</p> </div>; [TLDR] The software rejuvenation model is formulated via the semi-Markov process, and the optimalSoftware rejuvenation schedule which minimizes the expected total discounted cost over an infinite time horizon is derived analytically.",C:\Users\tristone\Zotero\storage\3YI9JFLC\Dohi 等 - 2001 - Optimal software rejuvenation policy with discounting.pdf; ,https://www.semanticscholar.org/paper/Optimal-software-rejuvenation-policy-with-Dohi-Danjou/5a683d8a133de3a0a36b0b65a222af65c8233591,分析方式：Model-based; 验证方法：数值分析; 重生层级：非特定的; 老化影响：故障率增加; 系统类型：非特定的; 会议：PRDC; 指标：故障率; 模型：半马尔可夫,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,2001 Pacific Rim International Symposium on Dependable Computing,,,,,,,,,,,,,,,
DBZPQSIY,journalArticle,2001,"Bobbio, Andrea; Sereno, Matteo; Anglano, Cosimo",Fine grained software degradation models for optimal rejuvenation policies,Performance Evaluation,,,10.1016/S0166-5316(01)00037-2,,,2001,2022-12-27 03:27:47,2024-09-23 13:06:48,,45–62,,1.0,46.0,,Perform. Evaluation,,,,,,,,,,,,,2.205,4.0,Publisher: Elsevier JCR分区: Q3 中科院分区升级版: 计算机科学4区 影响因子: 1.0 5年影响因子: 1.1 EI: 是,"<div data-schema-version=""8""><p>不足：大多真实系统不是平滑降级的，可能没有充分考虑到系统的复杂性</p> </div>; <div data-schema-version=""8""><p>概述：<code>结合观测值的细粒度软件系统平滑降级过程模型</code></p> </div>; <div data-schema-version=""8""><p>实验实证：通过将其应用于数据归档数据库维护领域的真实案例研究，以及用于评估该技术对各种退化过程的敏感性的假设设置，证明了该方法和恢复策略。</p> </div>; <div data-schema-version=""8""><p>优点：考虑了两种重生策略——基于预先分配的风险级别的策略和基于警报阈值的策略；</p> </div>",C:\Users\tristone\Zotero\storage\FZMUYW6A\Bobbio 等 - 2001 - Fine grained software degradation models for optimal rejuvenation policies.pdf; C:\Users\tristone\Zotero\storage\63BI3AEP\S0166531601000372.html,,老化影响：非特定的; 重生层级：非特定的; 系统类型：非特定的; 验证方法：数值分析&实验实证; 期刊：PEVA; 分析方式：Hybrid; 模型：renewal process with rewards; 指标：downtime（rej&crash），stead-state unavailability；Sal(警报阈值),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EYDEGIQB,journalArticle,2001,"Yurcik, W.; Doss, D.",Achieving fault-tolerant software with rejuvenation and reconfiguration,IEEE Software,,0740-7459,10.1109/MS.2001.936217,http://ieeexplore.ieee.org/document/936217/,"The authors present two complementary ways to deal with soft-ware aging. Their approach pro-actively reinitializes software to a known operating state, before failure occurs, or reactively reconfigures soft-ware after a failure such that service remains operational.",2001-07,2022-12-31 09:37:57,2024-10-04 13:45:31,2022-12-31 09:37:57,48-52,,4.0,18.0,,IEEE Softw.,,,,,,,,en,,,,,3,4.0,"JCR分区: Q2 中科院分区升级版: 计算机科学4区 影响因子: 3.3 5年影响因子: 3.8 EI: 是 TLDR: The authors present two complementary ways to deal with soft-ware aging: pro-actively reinitializes software to a known operating state, before failure occurs, or reactively reconfiguressoft-ware after a failure such that service remains operational.","; <div data-schema-version=""8""><p>概述：提出将重生与重配置结合的软件容错方式</p> </div>",; C:\Users\tristone\Zotero\storage\RMI3ZFY2\Yurcik和Doss - 2001 - Achieving fault-tolerant software with rejuvenation and reconfiguration.pdf,https://www.semanticscholar.org/paper/Achieving-Fault-Tolerant-Software-with-Rejuvenation-Yurcik-Doss/e6c0317a3d5d7c21f25cf69a1ac4d38ea2bdb074,老化影响：非特定的; 重生层级：非特定的; 系统类型：非特定的; 分析方式：rej; 验证方法：逻辑推理; 期刊：IEEE Softw; 重生策略：重生&重配置,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6G9924UE,journalArticle,2001,"Castelli, V.; Harper, R. E.; Heidelberger, P.; Hunter, S. W.; Trivedi, K. S.; Vaidyanathan, K.; Zeggert, W. P.",Proactive management of software aging,IBM Journal of Research and Development,,"0018-8646, 0018-8646",10.1147/rd.452.0311,http://ieeexplore.ieee.org/document/5389090/,"Software failures are now known to be a dominant source of system outages. Several studies and much anecdotal evidence point to ""software aging"" as a common phenomenon, in which the state of a software system degrades with time. Exhaustion of system resources, data corruption, and numerical error accumulation are the primary symptoms of this degradation, which may eventually lead to performance degradation of the software, crash/hang failure, or other undesirable effects. ""Software rejuvenation"" is a proactive technique intended to reduce the probability of future unplanned outages due to aging. The basic idea is to pause or halt the running software, refresh its internal state, and resume or restart it. Software rejuvenation can be performed by relying on a variety of indicators of aging, or on the time elapsed since the last rejuvenation. In response to the strong desire of customers to be provided with advance notice of unplanned outages, our group has developed techniques that detect the occurrence of software aging due to resource exhaustion, estimate the time remaining until the exhaustion reaches a critical level, and automatically perform proactive software rejuvenation of an application, process group, or entire operating system, depending on the pervasiveness of the resource exhaustion and our ability to pinpoint the source. This technology has been incorporated into the IBM Director for xSeries servers. To quantitatively evaluate the impact of different rejuvenation policies on the availability of cluster systems, we have developed analytical models based on stochastic reward nets (SRNs). For timebased rejuvenation policies, we determined the optimal rejuvenation interval based on system availability and cost. We also analyzed a rejuvenation policy based on prediction, and showed that it can further increase system availability and reduce downtime cost. These models are very general and can capture a multitude of cluster system characteristics, failure behavior, and performability measures, which we are just beginning to explore.",2001-03,2022-12-30 08:31:25,2024-09-23 13:02:51,2022-12-30 08:31:25,311-332,,2.0,45.0,,Ibm J. Res. Dev.,,,,,,,,,,,,,2.605,4.0,中科院分区升级版: 计算机科学4区 EI: 是,"[TLDR] This group has developed techniques that detect the occurrence of software aging due to resource exhaustion, estimate the time remaining until the exhaustion reaches a critical level, and automatically perform proactive software rejuvenation of an application, process group, or entire operating system.",C:\Users\tristone\Zotero\storage\TZTEA76S\Castelli 等 - 2001 - Proactive management of software aging.pdf; ,https://www.semanticscholar.org/paper/Proactive-management-of-software-aging-Castelli-Harper/7867bab418dbf87b4c079ee4b7bb34208e121483,分析方式：Model-based; 模型：SRN; 系统类型：cluster system; 验证方法：数值分析&实验实证&比较分析; 期刊：IBM J RES DEV; 指标：expected unavailability and the expected cost; 重生层级：节点（服务级或操作系统级）; 老化影响：性能下降&资源消耗&误差累计,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
V47UIYJ2,conferencePaper,1998,"Garg, S.; van Moorsel, A.; Vaidyanathan, K.; Trivedi, K.S.",A methodology for detection and estimation of software aging,Proceedings Ninth International Symposium on Software Reliability Engineering (Cat. No.98TB100257),978-0-8186-8991-8,,10.1109/ISSRE.1998.730892,http://ieeexplore.ieee.org/document/730892/,"The phenomenon of software aging refers to the accumulation of errors during the execution of the software which eventually results in it's crash/hang failure. A gradual performance degradation may also accompany software aging. Pro-active fault management techniques such as ""software rejuvenation"" (Y. Huang et al., 1995) may be used to counteract aging if it exists. We propose a methodology for detection and estimation of aging in the UNIX operating system. First, we present the design and implementation of an SNMP based, distributed monitoring tool used to collect operating system resource usage and system activity data at regular intervals, from networked UNIX workstations. Statistical trend detection techniques are applied to this data to detect/validate the existence of aging. For quantifying the effect of aging in operating system resources, we propose a metric: ""estimated time to exhaustion"", which is calculated using well known slope estimation techniques. Although the distributed data collection tool is specific to UNIX, the statistical techniques can be used for detection and estimation of aging in other software as well.",1998,2023-01-02 03:37:54,2024-10-10 01:50:20,2023-01-02 03:37:54,283-292,,,,,,,,,,,IEEE Comput. Soc,,,,,,,Semantic Scholar,,"Place: Paderborn, Germany CCF: B TLDR: A distributed data collection tool used to collect operating system resource usage and system activity data at regular intervals, from networked UNIX workstations and proposes a metric: ""estimated time to exhaustion"", which is calculated using well known slope estimation techniques.","<div data-schema-version=""8""><p>不足：仅分析了由特定资源耗尽导致发生老化故障的估计时间</p> </div>; <div data-schema-version=""8""><p>概述：基于SNMP监控工具分析操作系统的资源消耗与老化故障的关系</p> </div>; <div data-schema-version=""8""><p>优点：比较了老化在不同资源上的影响；是检测和估计软件老化的一个很好的示例；有助于确定要监视和管理的重要资源</p> </div>",C:\Users\tristone\Zotero\storage\KXPL6PVY\Garg 等 - 1998 - A methodology for detection and estimation of software aging.pdf; ,https://www.semanticscholar.org/paper/A-methodology-for-detection-and-estimation-of-aging-Garg-Moorsel/ec76cbb333a5031546e394386cd070f33aa02f78,老化影响：资源消耗; 验证方法：实验实证&比较分析; 会议：ISSRE; 工具：SNMP分布式监控工具; 模型：趋势检验（robust locally weighted regression，sensonal Kendall test））; 实验时长：53D; 系统类型：OS（UNIX）; 重生层级：非特定的; 指标：估计消耗时间（每种资源）；real memory free，file table size，process table size，used swap space等; 分析方式：度量&Measurement-based（统计）,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Ninth International Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
6ISCRUI7,journalArticle,1998,"Garg, S.; Puliafito, A.; Telek, M.; Trivedi, K.",Analysis of Preventive Maintenance in Transactions Based Software Systems,IEEE Transactions on Computers,,1557-9956,10.1109/12.656092,,"Preventive maintenance of operational software systems, a novel technique for software fault tolerance, is used specifically to counteract the phenomenon of software ""aging"". However, it incurs some overhead. The necessity to do preventive maintenance, not only in general purpose software systems of mass use, but also in safety-critical and highly available systems, clearly indicates the need to follow an analysis based approach to determine the optimal times to perform preventive maintenance. In this paper, we present an analytical model of a software system which serves transactions. Due to aging, not only the service rate of the software decreases with time, but also the software itself experiences crash/hang failures which result in its unavailability. Two policies for preventive maintenance are modeled and expressions for resulting steady state availability, probability that an arriving transaction is lost and an upper bound on the expected response time of a transition are derived. Numerical examples are presented to illustrate the applicability of the models.",1998-01,2022-03-21 08:40:18,2024-08-23 01:20:26,,96-107,,1.0,47.0,,IEEE Trans. Comput.,,,,,,,,en-US,,,,,3.183,2.0,Conference Name: IEEE Transactions on Computers JCR分区: Q2 中科院分区升级版: 计算机科学2区 影响因子: 3.6 5年影响因子: 3.2 EI: 是 CCF: A,"<div data-schema-version=""8""><p>不足：它仅适用于那些传入事务在失败或PM启动时丢失的软件系统。在许多支持恢复的数据库系统中，事务在到达时被记录。即使发生故障，日志也不会丢失，因此违反了我们的假设。</p> </div>; <div data-schema-version=""8""><p>概述：<code>基于事务的软件系统的随机模型</code></p> </div>; <div data-schema-version=""8""><p>优点：在一个模型中同时考虑崩溃/挂起故障和性能降级两种效应；为了能够广泛适用，模型使用一般分布，而非特定分布；考虑了负载的影响，允许故障和服务率是时间、瞬时负载、平均累积负载或以上因素的组合的函数。</p> </div>",C:\Users\tristone\Zotero\storage\JU36NTBN\Garg 等 - 1998 - Analysis of Preventive Maintenance in Transactions Based Software Systems.pdf; C:\Users\tristone\Zotero\storage\LSKHEDK3\656092.html,,"老化影响：崩溃/挂起故障&性能降级; 分析方式：Model-based; 验证方法：数值分析; 重生层级：非特定的; 模型：CTMC; 系统类型：client-server type system; 期刊：TC; 指标：the availability of the software to provide service, the probability of loss of a transaction, and the response time of a transaction",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HSRGFN3T,conferencePaper,1997,"Garg, S.; Puliafito, A.; Telek, M.; Trivedi, K.S.",On the analysis of software rejuvenation policies,Proceedings of COMPASS '97: 12th Annual Conference on Computer Assurance,,,10.1109/CMPASS.1997.613248,https://ieeexplore.ieee.org/abstract/document/613248,"Software rejuvenation is a technique for software fault tolerance which involves occasionally stopping the executing software, ""cleaning"" the ""internal state"" and restarting. This cleanup is done at desirable times during execution on a preventive basis set that unplanned failures, which result in higher costs compared to planned stopping, are avoided. Since during rejuvenation, the software is typically unavailable or in a degraded mode of operation, the operation involves a cost. In this paper, we present an analytical model of a software system which serves transactions. Due to ""aging"", not only the service rate of the software decreases with time hut the software itself experiences occasional crash/hang failures. We propose and compare two rejuvenation policies. The policies are evaluated for the resulting steady state availability as well the probability that a transaction is denied service. We also numerically illustrate the use of our model to compute the optimal rejuvenation interval which minimizes (maximizes) the loss probability (steady state availability).",1997-06,2024-07-29 07:13:24,2024-10-04 13:01:48,2024-07-29 07:13:24,88-96,,,,,,,,,,,,,,,,,,IEEE Xplore,,,"<div data-schema-version=""8""><p>提出并比较了两种软件再生策略，并使用非马尔可夫模型进行分析。结果显示,负载和时间依赖策略（Policy II）相比纯时间依赖策略（Policy I）在减少事务丢失概率和提高系统可用性方面更有效。</p> </div>",C:\Users\tristone\Zotero\storage\ZZHIN29P\Garg 等 - 1997 - On the analysis of software rejuvenation policies.pdf,,老化影响：崩溃/挂起故障&性能降级; 分析方式：Model-based; 验证方法：数值分析; 系统类型：非特定的; 模型：排队模型; 指标：服务速率，故障率，事务丢失概率,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Proceedings of COMPASS '97: 12th Annual Conference on Computer Assurance,,,,,,,,,,,,,,,
NKIC9UFE,conferencePaper,1997,"Tai, A.T.; Chau, S.N.; Alkalaj, L.; Hecht, H.",On-board preventive maintenance: analysis of effectiveness and optimal duty period,Proceedings Third International Workshop on Object-Oriented Real-Time Dependable Systems,,,10.1109/WORDS.1997.609924,,"To maximize the reliability of a spacecraft which performs a long-life (over 10-year) deep-space mission (to an outer planet), a fault-tolerant environment incorporating on-board preventive maintenance is highly desirable. In this paper, we present an initial model-based study which identifies the key factors for the reliability gained from on-board preventive maintenance and demonstrates the capability of analytic modeling in determining the optimal interval between maintenance (duty period).",1997-06,2022-12-09 09:19:40,2024-10-03 08:52:27,,40-47,,,,,,On-board preventive maintenance,,,,,,,,,,,,IEEE Xplore,,TLDR: An initial model-based study is presented which identifies the key factors for the reliability gained from on-board preventive maintenance and demonstrates the capability of analytic modeling in determining the optimal interval between maintenance (duty period).,"<div data-schema-version=""8""><p>概述：对深空任务系统建模确定最佳维护间隔</p> </div>",C:\Users\tristone\Zotero\storage\5MQMBD2U\609924.html; C:\Users\tristone\Zotero\storage\NPYMRHFV\Tai 等 - 1997 - On-board preventive maintenance analysis of effectiveness and optimal duty period.pdf,,分析方式：Model-based; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 会议：WORDS; 模型：任务周期和任务成功与否的双层状态模型; 系统类型：深空任务系统; 指标：failure rate，switching frequency，reliability,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Proceedings Third International Workshop on Object-Oriented Real-Time Dependable Systems,,,,,,,,,,,,,,,
MCCTUU9W,conferencePaper,1996,"Garg, Sachin; Huang, Yennun; Kintala, Chandra; Trivedi, Kishor S.",Minimizing completion time of a program by checkpointing and rejuvenation,Proceedings of the 1996 ACM SIGMETRICS international conference on Measurement and modeling of computer systems  - SIGMETRICS '96,978-0-89791-793-3,,10.1145/233013.233050,http://portal.acm.org/citation.cfm?doid=233013.233050,"Checkpointing with rollback-recovery is a well known technique to reduce the completion time of a program in the presence of failures. While checkpointing is corrective in nature, rejuvenation refers to preventive maintenance of software aimed to reduce unexpected failures mostly resulting from the ""aging"" phenomenon. In this paper, we show how both these techniques may be used together to further reduce the expected completion time of a program. The idea of using checkpoints to reduce the amount of rollback upon a failure is taken a step further by combining it with rejuvenation. We derive the equations for expected completion time of a program with finite failure free running time for the following three cases when; (a) neither checkpointing nor rejuvenation is employed, (b) only checkpointing is employed, and finally (c) both checkpointing and rejuvenation are employed.We also present numerical results for Weibull failure time distribution for the above three cases and discuss optimal checkpointing and rejuvenation that minimizes the expected completion time. Using the numerical results, some interesting conclusions are drawn about benefits of these techniques in relation to the nature of failure distribution.",1996,2022-12-28 04:50:26,2024-10-04 13:26:40,2022-12-28 04:50:26,252-261,,,,,,,,,,,ACM Press,"Philadelphia, Pennsylvania, United States",en,,,,,Semantic Scholar,,"TLDR: This paper derives the equations for expected completion time of a program with finite failure free running time for the following three cases when; (a) neither checkpointing nor rejuvenation is employed, (b) only checkpointing isemployed, and finally (c) both checkpointing and rejuvenation are employed.","<div data-schema-version=""8""><p>概述：首次提出一种检查点与重生结合的策略缩短程序的完成时间</p> </div>; <div data-schema-version=""8""><p>缺点：数值实验，缺乏实际验证</p> </div>; <div data-schema-version=""8""><p>优点：证明了将纠正性技术与预防性技术即重生结合的有效性（将两者结合的策略下的完成时间与仅有检查点和仅有重生的比较），也提出未来可以将其他纠正性技术corrective techniques与重生结合</p> </div>",C:\Users\tristone\Zotero\storage\Q9PEMXR5\Garg 等 - 1996 - Minimizing completion time of a program by checkpointing and rejuvenation.pdf; ,https://www.semanticscholar.org/paper/Minimizing-completion-time-of-a-program-by-and-Garg-Huang/c6266102d59251fcef45e897ec2547dbc4877b5e,老化影响：非特定的; 重生层级：非特定的; 系统类型：非特定的; 验证方法：数值分析&比较分析; 会议：ACM SIGMETRICS; 模型：checkpointing and rejuvenation model; 指标：MTTF，expected completion time; 重生策略：检查点&重生; 分析方式：model&other,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,the 1996 ACM SIGMETRICS international conference,,,,,,,,,,,,,,,
E4WRT9KX,journalArticle,1996,"Pfening, A.; Garg, S.; Puliafito, A.; Telek, M.; Trivedi, Kishor S.",Optimal Software Rejuvenation for Tolerating Soft Failures,Perform. Evaluation（PEVA）,,,10.1016/0166-5316(96)00038-7,,"Semantic Scholar extracted view of ""Optimal Software Rejuvenation for Tolerating Soft Failures"" by A. Pfening et al.",1996,2022-03-21 11:06:54,2024-10-12 06:23:00,,,,,,,Perform. Evaluation（PEVA）,,,,,,,,en-US,,,,,1.987,4.0,TLDR: This paper addresses the problem of determining the optimal time to rejuvenate a server type software which experiences “soft failures” because of aging and develops Markov decision models for such a system for two different queuing policies.,"<div data-schema-version=""8""><p>不足：成本函数仅考虑了数据包的丢失数量，没有考虑到用户等待时间等因素；</p> </div>; <div data-schema-version=""8""><p>概述：<code>分别结合两种排队策略对服务器软件老化基于MDP建模</code></p> </div>; <div data-schema-version=""8""><p>优点：考虑了两种排队策略的影响，为他们分别建模</p> </div>",C:\Users\tristone\Zotero\storage\LNXJKE6X\Pfening 等 - 1996 - Optimal Software Rejuvenation for Tolerating Soft Failures.pdf; ,https://www.semanticscholar.org/paper/Optimal-Software-Rejuvenation-for-Tolerating-Soft-Pfening-Garg/ddea1944f2add2a003d6e2e93861ac473bb59234,分析方式：Model-based; 老化影响：非特定的; 模型：MDP; 期刊：PEVA; 系统类型：client-server type system; 验证方法：数值分析; 指标：cost（单位时间内丢失的数据包的平均值）; 重生层级：非特定的,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IQ4V3G6R,conferencePaper,1995,"Garg, S.; Puliafito, A.; Telek, M.; Trivedi, K.S.",Analysis of Software Rejuvenation using Markov Regenerative Stochastic Petri Net,Proceedings of Sixth International Symposium on Software Reliability Engineering,,,10.1109/ISSRE.1995.497656,,"In a client-server type system, the server software is required to run continuously for very long periods. Due to repeated and potentially faulty usage by many clients, such software ""ages"" with time and eventually fails. (Huang et al., 1995) proposed a technique called ""software rejuvenation"" in which the software is periodically stopped and then restarted in a ""robust"" state after proper maintenance. This ""renewal"" of software prevents (or at least postpones) the crash failure. As the time lost (or the cost incurred) due to the software failure is typically more than the time lost (or the cost incurred) due to rejuvenation, the technique reduces the expected unavailability of the software. We present a quantitative analysis of software rejuvenation. The behavior of the system is represented through a Markov Regenerative Stochastic Petri Net (MRSPN) model which is solved both for steady state as well as transient conditions. We provide a closed-form analytical solution for the steady state expected down time (and the expected cost incurred) due to system unavailability. We also evaluate the optimal rejuvenation interval which minimizes the expected unavailability of the software.",1995-10,2022-03-16 09:20:47,2024-10-03 08:52:24,,180-187,,,,,,,,,,,IEEE,,en-US,,,,,,,ISSN: 1071-9458 CCF: B TLDR: This work provides a closed-form analytical solution for the steady state expected down time (and the expected cost incurred) due to system unavailability and evaluates the optimal rejuvenation interval which minimizes the expected unavailability of the software.,"<div data-schema-version=""8""><p>不足：？</p> </div>; <div data-schema-version=""8""><p>概述：<code>首次引入Petri网对软件老化过程建模</code></p> </div>; <div data-schema-version=""8""><p>优点：认为由于crash故障导致的停机时间和由于重生而导致的停机之间会存在权衡，这取决于执行的频率。证明了重生间隔（从稳健状态开始执行下一次恢复的时间）对稳态预期停机时间和成本的影响，并评估了最佳重生间隔时间。</p> </div>",C:\Users\tristone\Zotero\storage\GNI8YJDV\Garg 等 - 1995 - Analysis of Software Rejuvenation using Markov Regenerative Stochastic Petri Net.pdf; C:\Users\tristone\Zotero\storage\RVRG55F5\497656.html,,"分析方式：Model-based; 会议：ISSRE; 老化影响：非特定的; 验证方法：数值分析; 重生层级：非特定的; 系统类型：client-server type system; 模型：MRSPN; 指标：downtime,cost（expected down time/costs）",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Proceedings of Sixth International Symposium on Software Reliability Engineering,,,,,,,,,,,,,,,
LUI7IUBM,conferencePaper,1995,"Huang, Y.; Kintala, C.; Kolettis, N.; Fulton, N.D.","Software rejuvenation: analysis, module and applications",International Symposium on Fault-Tolerant Computing,,,10.1109/FTCS.1995.466961,,"Software rejuvenation is the concept of gracefully terminating an application and immediately restarting it at a clean internal state. In a client-server type of application where the server is intended to ran perpetually for providing a service to its clients, rejuvenating the server process periodically during the most idle time of the server increases the availability of that service. In a long-running computation-intensive application, rejuvenating the application periodically and restarting it at a previous checkpoint increases the likelihood of successfully completing the application execution. We present a model for analyzing software rejuvenation in such continuously-running applications and express downtime and costs due to downtime during rejuvenation in terms of the parameters in that model. Threshold conditions for rejuvenation to be beneficial are also derived. We implemented a reusable module to perform software rejuvenation. That module can be embedded in any existing application on a UNIX platform with minimal effort. Experiences with software rejuvenation in a billing data collection subsystem of a telecommunications operations system and other continuously-running systems and scientific applications in AT&T are described.<>",1995-06,2022-02-15 09:08:02,2024-10-04 13:23:19,,381-390,,,,,,Software rejuvenation,,,,,IEEE,,en-US,,,,,,,TLDR: A model for analyzing software rejuvenation in continuously-running applications is presented and express downtime and costs due to downtime during rejuvenations in terms of the parameters in that model and Threshold conditions for rejuvenation to be beneficial are derived.,"<div data-schema-version=""8""><p>不足：对于Sp状态定义不明确；计算的数值是一个估计值并非测量值，是一个“粗粒度”的“黑盒”的模型</p> </div>; <div data-schema-version=""8""><p>概述：<code>首次正式提出用软件重生策略解决软件老化问题</code></p> </div>; <div data-schema-version=""8""><p>优点：<code>首次用马尔科夫模型对软件老化过程建模，开创了基于模型的软件老化分析方法</code></p> </div>; <div data-citation-items=""%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FLUI7IUBM%22%5D%2C%22itemData%22%3A%7B%22id%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FLUI7IUBM%22%2C%22type%22%3A%22paper-conference%22%2C%22abstract%22%3A%22Software%20rejuvenation%20is%20the%20concept%20of%20gracefully%20terminating%20an%20application%20and%20immediately%20restarting%20it%20at%20a%20clean%20internal%20state.%20In%20a%20client-server%20type%20of%20application%20where%20the%20server%20is%20intended%20to%20ran%20perpetually%20for%20providing%20a%20service%20to%20its%20clients%2C%20rejuvenating%20the%20server%20process%20periodically%20during%20the%20most%20idle%20time%20of%20the%20server%20increases%20the%20availability%20of%20that%20service.%20In%20a%20long-running%20computation-intensive%20application%2C%20rejuvenating%20the%20application%20periodically%20and%20restarting%20it%20at%20a%20previous%20checkpoint%20increases%20the%20likelihood%20of%20successfully%20completing%20the%20application%20execution.%20We%20present%20a%20model%20for%20analyzing%20software%20rejuvenation%20in%20such%20continuously-running%20applications%20and%20express%20downtime%20and%20costs%20due%20to%20downtime%20during%20rejuvenation%20in%20terms%20of%20the%20parameters%20in%20that%20model.%20Threshold%20conditions%20for%20rejuvenation%20to%20be%20beneficial%20are%20also%20derived.%20We%20implemented%20a%20reusable%20module%20to%20perform%20software%20rejuvenation.%20That%20module%20can%20be%20embedded%20in%20any%20existing%20application%20on%20a%20UNIX%20platform%20with%20minimal%20effort.%20Experiences%20with%20software%20rejuvenation%20in%20a%20billing%20data%20collection%20subsystem%20of%20a%20telecommunications%20operations%20system%20and%20other%20continuously-running%20systems%20and%20scientific%20applications%20in%20AT%26T%20are%20described.%3C%3E%22%2C%22container-title%22%3A%22International%20Symposium%20on%20Fault-Tolerant%20Computing%22%2C%22DOI%22%3A%2210.1109%2FFTCS.1995.466961%22%2C%22event-title%22%3A%22International%20Symposium%20on%20Fault-Tolerant%20Computing%22%2C%22language%22%3A%22en-US%22%2C%22page%22%3A%22381-390%22%2C%22publisher%22%3A%22IEEE%22%2C%22title%22%3A%22Software%20rejuvenation%3A%20analysis%2C%20module%20and%20applications%22%2C%22title-short%22%3A%22Software%20rejuvenation%22%2C%22author%22%3A%5B%7B%22family%22%3A%22Huang%22%2C%22given%22%3A%22Y.%22%7D%2C%7B%22family%22%3A%22Kintala%22%2C%22given%22%3A%22C.%22%7D%2C%7B%22family%22%3A%22Kolettis%22%2C%22given%22%3A%22N.%22%7D%2C%7B%22family%22%3A%22Fulton%22%2C%22given%22%3A%22N.D.%22%7D%5D%2C%22issued%22%3A%7B%22date-parts%22%3A%5B%5B%221995%22%2C6%5D%5D%7D%7D%7D%5D"" data-schema-version=""8""><p>重生：<span class=""highlight"" data-annotation=""%7B%22attachmentURI%22%3A%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FRARW95YW%22%2C%22pageLabel%22%3A%22387%22%2C%22position%22%3A%7B%22pageIndex%22%3A6%2C%22rects%22%3A%5B%5B354.2%2C331.29%2C544.514%2C338.445%5D%2C%5B311.2%2C319.289%2C543.639%2C326.712%5D%2C%5B310.9%2C307.19%2C543.4%2C314.79%5D%2C%5B311.2%2C295.189%2C473.288%2C302.344%5D%5D%7D%2C%22citationItem%22%3A%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FLUI7IUBM%22%5D%2C%22locator%22%3A%22387%22%7D%7D"">“the internal data structures may need to be checkpointed before rejuvenation and restored after rejuvenation and a graceful shutdown and restart might be necessary to do rejuvenation”</span> <span class=""citation"" data-citation=""%7B%22citationItems%22%3A%5B%7B%22uris%22%3A%5B%22http%3A%2F%2Fzotero.org%2Fgroups%2F4571939%2Fitems%2FLUI7IUBM%22%5D%2C%22locator%22%3A%22387%22%7D%5D%2C%22properties%22%3A%7B%7D%7D"">(<span class=""citation-item"">Huang 等, 1995, p. 387</span>)</span></p> </div>","C:\Users\tristone\Zotero\storage\RARW95YW\Huang 等 - 1995 - Software rejuvenation analysis, module and applications.pdf; C:\Users\tristone\Zotero\storage\WZ5I98Y4\466961.html",,分析方式：Model-based; 老化影响：非特定的; 重生层级：应用程序; 验证方法：数值分析&实验实证; 指标：downtime cost; 模型：CTMC; 系统类型：client-server type system; 会议：FTCS,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,International Symposium on Fault-Tolerant Computing,,,,,,,,,,,,,,,
